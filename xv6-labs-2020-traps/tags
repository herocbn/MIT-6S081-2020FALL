!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	Makefile	/^	git archive --format=tar HEAD | gzip > lab-$(LAB)-handin.tar.gz$/;"	m
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	user/umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	user/sh.c	12;"	d	file:
BACKSPACE	kernel/console.c	25;"	d	file:
BBLOCK	kernel/fs.h	51;"	d
BPB	kernel/fs.h	48;"	d
BSIZE	kernel/fs.h	6;"	d
BUFSZ	user/usertests.c	20;"	d	file:
C	kernel/console.c	26;"	d	file:
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb$/;"	m
CLINT	kernel/memlayout.h	29;"	d
CLINT_MTIME	kernel/memlayout.h	31;"	d
CLINT_MTIMECMP	kernel/memlayout.h	30;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CONSOLE	kernel/file.h	40;"	d
CPUS	Makefile	/^CPUS := 1$/;"	m
CPUS	Makefile	/^CPUS := 3$/;"	m
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
DIRSIZ	kernel/fs.h	54;"	d
Disassembly	kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/alarmtest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/bttest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/call.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	kernel/elf.h	3;"	d
ELF_PROG_FLAG_EXEC	kernel/elf.h	40;"	d
ELF_PROG_FLAG_READ	kernel/elf.h	42;"	d
ELF_PROG_FLAG_WRITE	kernel/elf.h	41;"	d
ELF_PROG_LOAD	kernel/elf.h	37;"	d
EXEC	user/sh.c	8;"	d	file:
FCR	kernel/uart.c	27;"	d	file:
FCR_FIFO_CLEAR	kernel/uart.c	29;"	d	file:
FCR_FIFO_ENABLE	kernel/uart.c	28;"	d	file:
FD_DEVICE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon9
FD_INODE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon9
FD_NONE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon9
FD_PIPE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon9
FSMAGIC	kernel/fs.h	25;"	d
FSSIZE	kernel/param.h	12;"	d
FWDPORT	Makefile	/^FWDPORT = $(shell expr `id -u` % 5000 + 25999)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kernel/fs.h	45;"	d
IER	kernel/uart.c	24;"	d	file:
IER_RX_ENABLE	kernel/uart.c	26;"	d	file:
IER_TX_ENABLE	kernel/uart.c	25;"	d	file:
INPUT_BUF	kernel/console.c	48;"	d	file:
IPB	kernel/fs.h	42;"	d
ISR	kernel/uart.c	30;"	d	file:
K	Makefile	/^K=kernel$/;"	m
KERNBASE	kernel/memlayout.h	47;"	d
KSTACK	kernel/memlayout.h	56;"	d
LAB	conf/lab.mk	/^LAB=traps$/;"	m
LABUPPER	Makefile	/^LABUPPER = $(shell echo $(LAB) | tr a-z A-Z)$/;"	m
LCR	kernel/uart.c	31;"	d	file:
LCR_BAUD_LATCH	kernel/uart.c	33;"	d	file:
LCR_EIGHT_BITS	kernel/uart.c	32;"	d	file:
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	user/sh.c	11;"	d	file:
LOGSIZE	kernel/param.h	10;"	d
LSR	kernel/uart.c	34;"	d	file:
LSR_RX_READY	kernel/uart.c	35;"	d	file:
LSR_TX_IDLE	kernel/uart.c	36;"	d	file:
MAKE_SATP	kernel/riscv.h	197;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAXARG	kernel/param.h	8;"	d
MAXARGS	user/sh.c	14;"	d	file:
MAXFILE	kernel/fs.h	29;"	d
MAXOPBLOCKS	kernel/param.h	9;"	d
MAXPATH	kernel/param.h	13;"	d
MAXVA	kernel/riscv.h	361;"	d
MIE_MEIE	kernel/riscv.h	107;"	d
MIE_MSIE	kernel/riscv.h	109;"	d
MIE_MTIE	kernel/riscv.h	108;"	d
MSTATUS_MIE	kernel/riscv.h	26;"	d
MSTATUS_MPP_M	kernel/riscv.h	23;"	d
MSTATUS_MPP_MASK	kernel/riscv.h	22;"	d
MSTATUS_MPP_S	kernel/riscv.h	24;"	d
MSTATUS_MPP_U	kernel/riscv.h	25;"	d
N	user/forktest.asm	/^#define N  1000$/;"	d
N	user/forktest.c	8;"	d	file:
NBUF	kernel/param.h	11;"	d
NCPU	kernel/param.h	2;"	d
NDEV	kernel/param.h	6;"	d
NDIRECT	kernel/fs.h	27;"	d
NELEM	kernel/defs.h	188;"	d
NFILE	kernel/param.h	4;"	d
NINDIRECT	kernel/fs.h	28;"	d
NINODE	kernel/param.h	5;"	d
NINODES	mkfs/mkfs.c	18;"	d	file:
NOFILE	kernel/param.h	3;"	d
NPROC	kernel/param.h	1;"	d
NUM	kernel/virtio.h	48;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
O_CREATE	kernel/fcntl.h	4;"	d
O_RDONLY	kernel/fcntl.h	1;"	d
O_RDWR	kernel/fcntl.h	3;"	d
O_TRUNC	kernel/fcntl.h	5;"	d
O_WRONLY	kernel/fcntl.h	2;"	d
PA2PTE	kernel/riscv.h	346;"	d
PGROUNDDOWN	kernel/riscv.h	337;"	d
PGROUNDUP	kernel/riscv.h	336;"	d
PGSHIFT	kernel/riscv.h	334;"	d
PGSIZE	kernel/riscv.h	333;"	d
PHYSTOP	kernel/memlayout.h	48;"	d
PIPE	user/sh.c	10;"	d	file:
PIPESIZE	kernel/pipe.c	11;"	d	file:
PLIC	kernel/memlayout.h	34;"	d
PLIC_MCLAIM	kernel/memlayout.h	41;"	d
PLIC_MENABLE	kernel/memlayout.h	37;"	d
PLIC_MPRIORITY	kernel/memlayout.h	39;"	d
PLIC_PENDING	kernel/memlayout.h	36;"	d
PLIC_PRIORITY	kernel/memlayout.h	35;"	d
PLIC_SCLAIM	kernel/memlayout.h	42;"	d
PLIC_SENABLE	kernel/memlayout.h	38;"	d
PLIC_SPRIORITY	kernel/memlayout.h	40;"	d
PTE2PA	kernel/riscv.h	348;"	d
PTE_FLAGS	kernel/riscv.h	350;"	d
PTE_R	kernel/riscv.h	340;"	d
PTE_U	kernel/riscv.h	343;"	d
PTE_V	kernel/riscv.h	339;"	d
PTE_W	kernel/riscv.h	341;"	d
PTE_X	kernel/riscv.h	342;"	d
PX	kernel/riscv.h	355;"	d
PXMASK	kernel/riscv.h	353;"	d
PXSHIFT	kernel/riscv.h	354;"	d
QEMU	Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 128M -smp $(CPUS) -nographic$/;"	m
R	kernel/virtio_disk.c	21;"	d	file:
REDIR	user/sh.c	9;"	d	file:
RHR	kernel/uart.c	22;"	d	file:
ROOTDEV	kernel/param.h	7;"	d
ROOTINO	kernel/fs.h	5;"	d
RUNNABLE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	kernel/uart.c	38;"	d	file:
Reg	kernel/uart.c	16;"	d	file:
Runner	gradelib.py	/^class Runner():$/;"	c
SATP_SV39	kernel/riscv.h	195;"	d
SERVERPORT	Makefile	/^SERVERPORT = $(shell expr `id -u` % 5000 + 25099)$/;"	m
SIE_SEIE	kernel/riscv.h	89;"	d
SIE_SSIE	kernel/riscv.h	91;"	d
SIE_STIE	kernel/riscv.h	90;"	d
SLEEPING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	kernel/riscv.h	56;"	d
SSTATUS_SPIE	kernel/riscv.h	54;"	d
SSTATUS_SPP	kernel/riscv.h	53;"	d
SSTATUS_UIE	kernel/riscv.h	57;"	d
SSTATUS_UPIE	kernel/riscv.h	55;"	d
SYS_chdir	kernel/syscall.h	10;"	d
SYS_close	kernel/syscall.h	22;"	d
SYS_dup	kernel/syscall.h	11;"	d
SYS_exec	kernel/syscall.h	8;"	d
SYS_exit	kernel/syscall.h	3;"	d
SYS_fork	kernel/syscall.h	2;"	d
SYS_fstat	kernel/syscall.h	9;"	d
SYS_getpid	kernel/syscall.h	12;"	d
SYS_kill	kernel/syscall.h	7;"	d
SYS_link	kernel/syscall.h	20;"	d
SYS_mkdir	kernel/syscall.h	21;"	d
SYS_mknod	kernel/syscall.h	18;"	d
SYS_open	kernel/syscall.h	16;"	d
SYS_pipe	kernel/syscall.h	5;"	d
SYS_read	kernel/syscall.h	6;"	d
SYS_sbrk	kernel/syscall.h	13;"	d
SYS_sigalarm	kernel/syscall.h	23;"	d
SYS_sigreturn	kernel/syscall.h	24;"	d
SYS_sleep	kernel/syscall.h	14;"	d
SYS_unlink	kernel/syscall.h	19;"	d
SYS_uptime	kernel/syscall.h	15;"	d
SYS_wait	kernel/syscall.h	4;"	d
SYS_write	kernel/syscall.h	17;"	d
TESTS	gradelib.py	/^TESTS = []$/;"	v
THR	kernel/uart.c	23;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&1; \\$/;"	m
TRAMPOLINE	kernel/memlayout.h	52;"	d
TRAPFRAME	kernel/memlayout.h	67;"	d
T_DEVICE	kernel/stat.h	3;"	d
T_DIR	kernel/stat.h	1;"	d
T_FILE	kernel/stat.h	2;"	d
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
U	Makefile	/^U=user$/;"	m
UART0	kernel/memlayout.h	21;"	d
UART0_IRQ	kernel/memlayout.h	22;"	d
UART_TX_BUF_SIZE	kernel/uart.c	43;"	d	file:
UEXTRA	Makefile	/^UEXTRA=$/;"	m
ULIB	Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
UPSTREAM	Makefile	/^UPSTREAM := $(shell git remote -v | grep -m 1 "xv6-labs-2020" | awk '{split($$0,a," "); print a[1]}')$/;"	m
UsedArea	kernel/virtio.h	/^struct UsedArea {$/;"	s
VIRTIO0	kernel/memlayout.h	25;"	d
VIRTIO0_IRQ	kernel/memlayout.h	26;"	d
VIRTIO_BLK_F_CONFIG_WCE	kernel/virtio.h	40;"	d
VIRTIO_BLK_F_MQ	kernel/virtio.h	41;"	d
VIRTIO_BLK_F_RO	kernel/virtio.h	38;"	d
VIRTIO_BLK_F_SCSI	kernel/virtio.h	39;"	d
VIRTIO_BLK_T_IN	kernel/virtio.h	65;"	d
VIRTIO_BLK_T_OUT	kernel/virtio.h	66;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	kernel/virtio.h	32;"	d
VIRTIO_CONFIG_S_DRIVER	kernel/virtio.h	33;"	d
VIRTIO_CONFIG_S_DRIVER_OK	kernel/virtio.h	34;"	d
VIRTIO_CONFIG_S_FEATURES_OK	kernel/virtio.h	35;"	d
VIRTIO_F_ANY_LAYOUT	kernel/virtio.h	42;"	d
VIRTIO_MMIO_DEVICE_FEATURES	kernel/virtio.h	17;"	d
VIRTIO_MMIO_DEVICE_ID	kernel/virtio.h	15;"	d
VIRTIO_MMIO_DRIVER_FEATURES	kernel/virtio.h	18;"	d
VIRTIO_MMIO_GUEST_PAGE_SIZE	kernel/virtio.h	19;"	d
VIRTIO_MMIO_INTERRUPT_ACK	kernel/virtio.h	28;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	kernel/virtio.h	27;"	d
VIRTIO_MMIO_MAGIC_VALUE	kernel/virtio.h	13;"	d
VIRTIO_MMIO_QUEUE_ALIGN	kernel/virtio.h	23;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	kernel/virtio.h	26;"	d
VIRTIO_MMIO_QUEUE_NUM	kernel/virtio.h	22;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	kernel/virtio.h	21;"	d
VIRTIO_MMIO_QUEUE_PFN	kernel/virtio.h	24;"	d
VIRTIO_MMIO_QUEUE_READY	kernel/virtio.h	25;"	d
VIRTIO_MMIO_QUEUE_SEL	kernel/virtio.h	20;"	d
VIRTIO_MMIO_STATUS	kernel/virtio.h	29;"	d
VIRTIO_MMIO_VENDOR_ID	kernel/virtio.h	16;"	d
VIRTIO_MMIO_VERSION	kernel/virtio.h	14;"	d
VIRTIO_RING_F_EVENT_IDX	kernel/virtio.h	44;"	d
VIRTIO_RING_F_INDIRECT_DESC	kernel/virtio.h	43;"	d
VRING_DESC_F_NEXT	kernel/virtio.h	56;"	d
VRING_DESC_F_WRITE	kernel/virtio.h	57;"	d
VRingDesc	kernel/virtio.h	/^struct VRingDesc {$/;"	s
VRingUsedElem	kernel/virtio.h	/^struct VRingUsedElem {$/;"	s
WEBSUB	Makefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2020\/handin.py$/;"	m
WriteReg	kernel/uart.c	39;"	d	file:
ZOMBIE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_entry	kernel/entry.S	/^_entry:$/;"	l
a	kernel/kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel/kernel.asm	/^  a = PGROUNDDOWN(va);$/;"	d
a	user/bttest.asm	/^   a:	00000097          	auipc	ra,0x0$/;"	l
a	user/call.asm	/^   a:	0141                	addi	sp,sp,16$/;"	l
a	user/cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	user/grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	user/ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	user/usertests.asm	/^    a = b + 1;$/;"	d
a	user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	user/usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	user/wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe
a0	user/bttest.asm	/^  a0:	00b78023          	sb	a1,0(a5)$/;"	l
a0	user/cat.asm	/^  a0:	00858913          	addi	s2,a1,8$/;"	l
a0	user/echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	user/forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	user/grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	user/grind.asm	/^      a0:	27450513          	addi	a0,a0,628 # 1310 <malloc+0xe6>$/;"	l
a0	user/ls.asm	/^  a0:	02000593          	li	a1,32$/;"	l
a0	user/mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/sh.asm	/^      a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/usertests.asm	/^      a0:	e426                	sd	s1,8(sp)$/;"	l
a0	user/wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	user/zombie.asm	/^  a0:	0800                	addi	s0,sp,16$/;"	l
a00	user/alarmtest.asm	/^ a00:	37c7b783          	ld	a5,892(a5) # d78 <freep>$/;"	l
a00	user/grep.asm	/^ a00:	00000097          	auipc	ra,0x0$/;"	l
a00	user/grind.asm	/^     a00:	fa043023          	sd	zero,-96(s0)$/;"	l
a00	user/sh.asm	/^     a00:	85a6                	mv	a1,s1$/;"	l
a00	user/usertests.asm	/^     a00:	00005097          	auipc	ra,0x5$/;"	l
a02	user/ls.asm	/^ a02:	97ba                	add	a5,a5,a4$/;"	l
a02	user/sh.asm	/^     a02:	fd840513          	addi	a0,s0,-40$/;"	l
a04	user/alarmtest.asm	/^ a04:	a02d                	j	a2e <free+0x3c>$/;"	l
a04	user/grep.asm	/^ a04:	eca080e7          	jalr	-310(ra) # 8ca <free>$/;"	l
a04	user/grind.asm	/^     a04:	f9840593          	addi	a1,s0,-104$/;"	l
a04	user/ls.asm	/^ a04:	0137a423          	sw	s3,8(a5)$/;"	l
a04	user/usertests.asm	/^     a04:	98a080e7          	jalr	-1654(ra) # 538a <write>$/;"	l
a06	user/alarmtest.asm	/^ a06:	4618                	lw	a4,8(a2)$/;"	l
a06	user/sh.asm	/^     a06:	00000097          	auipc	ra,0x0$/;"	l
a08	user/alarmtest.asm	/^ a08:	9f2d                	addw	a4,a4,a1$/;"	l
a08	user/grep.asm	/^ a08:	00093503          	ld	a0,0(s2)$/;"	l
a08	user/grind.asm	/^     a08:	00001517          	auipc	a0,0x1$/;"	l
a08	user/ls.asm	/^ a08:	00000717          	auipc	a4,0x0$/;"	l
a08	user/usertests.asm	/^     a08:	40000793          	li	a5,1024$/;"	l
a0a	user/alarmtest.asm	/^ a0a:	fee52c23          	sw	a4,-8(a0)$/;"	l
a0a	user/sh.asm	/^     a0a:	df6080e7          	jalr	-522(ra) # 7fc <parseline>$/;"	l
a0c	user/grep.asm	/^ a0c:	d971                	beqz	a0,9e0 <malloc+0x94>$/;"	l
a0c	user/grind.asm	/^     a0c:	b9050513          	addi	a0,a0,-1136 # 1598 <malloc+0x36e>$/;"	l
a0c	user/ls.asm	/^ a0c:	14a73423          	sd	a0,328(a4) # b50 <freep>$/;"	l
a0c	user/usertests.asm	/^     a0c:	06f51c63          	bne	a0,a5,a84 <writebig+0xcc>$/;"	l
a0e	user/alarmtest.asm	/^ a0e:	6398                	ld	a4,0(a5)$/;"	l
a0e	user/grep.asm	/^ a0e:	611c                	ld	a5,0(a0)$/;"	l
a0e	user/sh.asm	/^     a0e:	892a                	mv	s2,a0$/;"	l
a1	kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe
a10	user/alarmtest.asm	/^ a10:	6310                	ld	a2,0(a4)$/;"	l
a10	user/grep.asm	/^ a10:	4798                	lw	a4,8(a5)$/;"	l
a10	user/grind.asm	/^     a10:	00000097          	auipc	ra,0x0$/;"	l
a10	user/ls.asm	/^ a10:	01078513          	addi	a0,a5,16$/;"	l
a10	user/sh.asm	/^     a10:	00001617          	auipc	a2,0x1$/;"	l
a10	user/usertests.asm	/^     a10:	2485                	addiw	s1,s1,1$/;"	l
a12	user/alarmtest.asm	/^ a12:	a83d                	j	a50 <free+0x5e>$/;"	l
a12	user/grep.asm	/^ a12:	fa9775e3          	bgeu	a4,s1,9bc <malloc+0x70>$/;"	l
a12	user/usertests.asm	/^     a12:	ff4491e3          	bne	s1,s4,9f4 <writebig+0x3c>$/;"	l
a14	user/alarmtest.asm	/^ a14:	ff852703          	lw	a4,-8(a0)$/;"	l
a14	user/grind.asm	/^     a14:	410080e7          	jalr	1040(ra) # e20 <exec>$/;"	l
a14	user/ls.asm	/^ a14:	70e2                	ld	ra,56(sp)$/;"	l
a14	user/sh.asm	/^     a14:	9c060613          	addi	a2,a2,-1600 # 13d0 <malloc+0x1c6>$/;"	l
a16	user/grep.asm	/^ a16:	00093703          	ld	a4,0(s2)$/;"	l
a16	user/ls.asm	/^ a16:	7442                	ld	s0,48(sp)$/;"	l
a16	user/usertests.asm	/^     a16:	854e                	mv	a0,s3$/;"	l
a18	user/alarmtest.asm	/^ a18:	9f31                	addw	a4,a4,a2$/;"	l
a18	user/grind.asm	/^     a18:	00001597          	auipc	a1,0x1$/;"	l
a18	user/ls.asm	/^ a18:	74a2                	ld	s1,40(sp)$/;"	l
a18	user/sh.asm	/^     a18:	85a6                	mv	a1,s1$/;"	l
a18	user/usertests.asm	/^     a18:	00005097          	auipc	ra,0x5$/;"	l
a1a	user/alarmtest.asm	/^ a1a:	c798                	sw	a4,8(a5)$/;"	l
a1a	user/grep.asm	/^ a1a:	853e                	mv	a0,a5$/;"	l
a1a	user/ls.asm	/^ a1a:	7902                	ld	s2,32(sp)$/;"	l
a1a	user/sh.asm	/^     a1a:	fd840513          	addi	a0,s0,-40$/;"	l
a1c	user/alarmtest.asm	/^ a1c:	ff053683          	ld	a3,-16(a0)$/;"	l
a1c	user/grep.asm	/^ a1c:	fef719e3          	bne	a4,a5,a0e <malloc+0xc2>$/;"	l
a1c	user/grind.asm	/^     a1c:	b8858593          	addi	a1,a1,-1144 # 15a0 <malloc+0x376>$/;"	l
a1c	user/ls.asm	/^ a1c:	69e2                	ld	s3,24(sp)$/;"	l
a1c	user/usertests.asm	/^     a1c:	97a080e7          	jalr	-1670(ra) # 5392 <close>$/;"	l
a1e	user/ls.asm	/^ a1e:	6a42                	ld	s4,16(sp)$/;"	l
a1e	user/sh.asm	/^     a1e:	00000097          	auipc	ra,0x0$/;"	l
a2	kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe
a2	user/alarmtest.asm	/^  a2:	aca50513          	addi	a0,a0,-1334 # b68 <malloc+0xf4>$/;"	l
a2	user/call.asm	/^  a2:	0785                	addi	a5,a5,1$/;"	l
a2	user/echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	user/forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	user/grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	user/init.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	user/kill.asm	/^  a2:	40a7853b          	subw	a0,a5,a0$/;"	l
a2	user/ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	user/usertests.asm	/^      a2:	1000                	addi	s0,sp,32$/;"	l
a2	user/zombie.asm	/^  a2:	ca19                	beqz	a2,b8 <memset+0x1c>$/;"	l
a20	user/alarmtest.asm	/^ a20:	a091                	j	a64 <free+0x72>$/;"	l
a20	user/grep.asm	/^ a20:	8552                	mv	a0,s4$/;"	l
a20	user/grind.asm	/^     a20:	4509                	li	a0,2$/;"	l
a20	user/ls.asm	/^ a20:	6aa2                	ld	s5,8(sp)$/;"	l
a20	user/usertests.asm	/^     a20:	4581                	li	a1,0$/;"	l
a22	user/alarmtest.asm	/^ a22:	6398                	ld	a4,0(a5)$/;"	l
a22	user/grep.asm	/^ a22:	00000097          	auipc	ra,0x0$/;"	l
a22	user/grind.asm	/^     a22:	00000097          	auipc	ra,0x0$/;"	l
a22	user/ls.asm	/^ a22:	6b02                	ld	s6,0(sp)$/;"	l
a22	user/sh.asm	/^     a22:	b00080e7          	jalr	-1280(ra) # 51e <peek>$/;"	l
a22	user/usertests.asm	/^     a22:	00005517          	auipc	a0,0x5$/;"	l
a24	user/alarmtest.asm	/^ a24:	00e7e463          	bltu	a5,a4,a2c <free+0x3a>$/;"	l
a24	user/ls.asm	/^ a24:	6121                	addi	sp,sp,64$/;"	l
a26	user/grep.asm	/^ a26:	b70080e7          	jalr	-1168(ra) # 592 <sbrk>$/;"	l
a26	user/grind.asm	/^     a26:	722080e7          	jalr	1826(ra) # 1144 <fprintf>$/;"	l
a26	user/ls.asm	/^ a26:	8082                	ret$/;"	l
a26	user/sh.asm	/^     a26:	fd843603          	ld	a2,-40(s0)$/;"	l
a26	user/usertests.asm	/^     a26:	28650513          	addi	a0,a0,646 # 5ca8 <malloc+0x4fc>$/;"	l
a28	user/alarmtest.asm	/^ a28:	00e6ea63          	bltu	a3,a4,a3c <free+0x4a>$/;"	l
a28	user/ls.asm	/^ a28:	6398                	ld	a4,0(a5)$/;"	l
a2a	user/grep.asm	/^ a2a:	fd5518e3          	bne	a0,s5,9fa <malloc+0xae>$/;"	l
a2a	user/grind.asm	/^     a2a:	4519                	li	a0,6$/;"	l
a2a	user/ls.asm	/^ a2a:	e118                	sd	a4,0(a0)$/;"	l
a2a	user/sh.asm	/^     a2a:	00961e63          	bne	a2,s1,a46 <parsecmd+0x66>$/;"	l
a2a	user/usertests.asm	/^     a2a:	00005097          	auipc	ra,0x5$/;"	l
a2c	user/alarmtest.asm	/^ a2c:	87ba                	mv	a5,a4$/;"	l
a2c	user/grind.asm	/^     a2c:	00000097          	auipc	ra,0x0$/;"	l
a2c	user/ls.asm	/^ a2c:	bff1                	j	a08 <malloc+0x88>$/;"	l
a2e	user/alarmtest.asm	/^ a2e:	fed7fae3          	bgeu	a5,a3,a22 <free+0x30>$/;"	l
a2e	user/grep.asm	/^ a2e:	4501                	li	a0,0$/;"	l
a2e	user/ls.asm	/^ a2e:	01652423          	sw	s6,8(a0)$/;"	l
a2e	user/sh.asm	/^     a2e:	854a                	mv	a0,s2$/;"	l
a2e	user/usertests.asm	/^     a2e:	980080e7          	jalr	-1664(ra) # 53aa <open>$/;"	l
a3	kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe
a30	user/grep.asm	/^ a30:	bf45                	j	9e0 <malloc+0x94>$/;"	l
a30	user/grind.asm	/^     a30:	3bc080e7          	jalr	956(ra) # de8 <exit>$/;"	l
a30	user/sh.asm	/^     a30:	00000097          	auipc	ra,0x0$/;"	l
a32	user/alarmtest.asm	/^ a32:	6398                	ld	a4,0(a5)$/;"	l
a32	user/ls.asm	/^ a32:	0541                	addi	a0,a0,16$/;"	l
a32	user/usertests.asm	/^     a32:	89aa                	mv	s3,a0$/;"	l
a34	user/alarmtest.asm	/^ a34:	00e6e463          	bltu	a3,a4,a3c <free+0x4a>$/;"	l
a34	user/grind.asm	/^     a34:	00001597          	auipc	a1,0x1$/;"	l
a34	user/ls.asm	/^ a34:	00000097          	auipc	ra,0x0$/;"	l
a34	user/sh.asm	/^     a34:	f18080e7          	jalr	-232(ra) # 948 <nulterminate>$/;"	l
a34	user/usertests.asm	/^     a34:	4481                	li	s1,0$/;"	l
a36	user/usertests.asm	/^     a36:	0000b917          	auipc	s2,0xb$/;"	l
a38	user/alarmtest.asm	/^ a38:	fee7eae3          	bltu	a5,a4,a2c <free+0x3a>$/;"	l
a38	user/grind.asm	/^     a38:	a6c58593          	addi	a1,a1,-1428 # 14a0 <malloc+0x276>$/;"	l
a38	user/ls.asm	/^ a38:	eca080e7          	jalr	-310(ra) # 8fe <free>$/;"	l
a38	user/sh.asm	/^     a38:	854a                	mv	a0,s2$/;"	l
a3a	user/sh.asm	/^     a3a:	70a2                	ld	ra,40(sp)$/;"	l
a3a	user/usertests.asm	/^     a3a:	d5a90913          	addi	s2,s2,-678 # b790 <buf>$/;"	l
a3c	user/alarmtest.asm	/^ a3c:	ff852583          	lw	a1,-8(a0)$/;"	l
a3c	user/grind.asm	/^     a3c:	4509                	li	a0,2$/;"	l
a3c	user/ls.asm	/^ a3c:	00093503          	ld	a0,0(s2)$/;"	l
a3c	user/sh.asm	/^     a3c:	7402                	ld	s0,32(sp)$/;"	l
a3e	user/grind.asm	/^     a3e:	00000097          	auipc	ra,0x0$/;"	l
a3e	user/sh.asm	/^     a3e:	64e2                	ld	s1,24(sp)$/;"	l
a3e	user/usertests.asm	/^     a3e:	06054163          	bltz	a0,aa0 <writebig+0xe8>$/;"	l
a4	kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe
a4	user/bttest.asm	/^  a4:	0785                	addi	a5,a5,1$/;"	l
a4	user/call.asm	/^  a4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
a4	user/cat.asm	/^  a4:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a4	user/echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	user/forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	user/grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	user/grind.asm	/^      a4:	00001097          	auipc	ra,0x1$/;"	l
a4	user/ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	user/ls.asm	/^  a4:	01298533          	add	a0,s3,s2$/;"	l
a4	user/mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/sh.asm	/^      a4:	fb4080e7          	jalr	-76(ra) # 54 <panic>$/;"	l
a4	user/stressfs.asm	/^  a4:	2f8080e7          	jalr	760(ra) # 398 <write>$/;"	l
a4	user/usertests.asm	/^      a4:	84aa                	mv	s1,a0$/;"	l
a4	user/wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	user/zombie.asm	/^  a4:	87aa                	mv	a5,a0$/;"	l
a40	user/alarmtest.asm	/^ a40:	6390                	ld	a2,0(a5)$/;"	l
a40	user/ls.asm	/^ a40:	d971                	beqz	a0,a14 <malloc+0x94>$/;"	l
a40	user/sh.asm	/^     a40:	6942                	ld	s2,16(sp)$/;"	l
a42	user/alarmtest.asm	/^ a42:	02059813          	slli	a6,a1,0x20$/;"	l
a42	user/grind.asm	/^     a42:	706080e7          	jalr	1798(ra) # 1144 <fprintf>$/;"	l
a42	user/ls.asm	/^ a42:	611c                	ld	a5,0(a0)$/;"	l
a42	user/sh.asm	/^     a42:	6145                	addi	sp,sp,48$/;"	l
a42	user/usertests.asm	/^     a42:	40000613          	li	a2,1024$/;"	l
a44	user/ls.asm	/^ a44:	4798                	lw	a4,8(a5)$/;"	l
a44	user/sh.asm	/^     a44:	8082                	ret$/;"	l
a46	user/alarmtest.asm	/^ a46:	01c85713          	srli	a4,a6,0x1c$/;"	l
a46	user/grind.asm	/^     a46:	451d                	li	a0,7$/;"	l
a46	user/ls.asm	/^ a46:	fa9775e3          	bgeu	a4,s1,9f0 <malloc+0x70>$/;"	l
a46	user/sh.asm	/^     a46:	00001597          	auipc	a1,0x1$/;"	l
a46	user/usertests.asm	/^     a46:	85ca                	mv	a1,s2$/;"	l
a48	user/grind.asm	/^     a48:	00000097          	auipc	ra,0x0$/;"	l
a48	user/usertests.asm	/^     a48:	854e                	mv	a0,s3$/;"	l
a4a	user/alarmtest.asm	/^ a4a:	9736                	add	a4,a4,a3$/;"	l
a4a	user/ls.asm	/^ a4a:	00093703          	ld	a4,0(s2)$/;"	l
a4a	user/sh.asm	/^     a4a:	99258593          	addi	a1,a1,-1646 # 13d8 <malloc+0x1ce>$/;"	l
a4a	user/usertests.asm	/^     a4a:	00005097          	auipc	ra,0x5$/;"	l
a4c	user/alarmtest.asm	/^ a4c:	fae60de3          	beq	a2,a4,a06 <free+0x14>$/;"	l
a4c	user/grind.asm	/^     a4c:	3a0080e7          	jalr	928(ra) # de8 <exit>$/;"	l
a4e	user/ls.asm	/^ a4e:	853e                	mv	a0,a5$/;"	l
a4e	user/sh.asm	/^     a4e:	4509                	li	a0,2$/;"	l
a4e	user/usertests.asm	/^     a4e:	938080e7          	jalr	-1736(ra) # 5382 <read>$/;"	l
a5	kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe
a50	user/alarmtest.asm	/^ a50:	fec53823          	sd	a2,-16(a0)$/;"	l
a50	user/grind.asm	/^     a50:	7179                	addi	sp,sp,-48$/;"	l
a50	user/ls.asm	/^ a50:	fef719e3          	bne	a4,a5,a42 <malloc+0xc2>$/;"	l
a50	user/sh.asm	/^     a50:	00000097          	auipc	ra,0x0$/;"	l
a52	user/grind.asm	/^     a52:	f406                	sd	ra,40(sp)$/;"	l
a52	user/usertests.asm	/^     a52:	c52d                	beqz	a0,abc <writebig+0x104>$/;"	l
a54	user/alarmtest.asm	/^ a54:	4790                	lw	a2,8(a5)$/;"	l
a54	user/grind.asm	/^     a54:	f022                	sd	s0,32(sp)$/;"	l
a54	user/ls.asm	/^ a54:	8552                	mv	a0,s4$/;"	l
a54	user/sh.asm	/^     a54:	6d4080e7          	jalr	1748(ra) # 1124 <fprintf>$/;"	l
a54	user/usertests.asm	/^     a54:	40000793          	li	a5,1024$/;"	l
a56	user/alarmtest.asm	/^ a56:	02061593          	slli	a1,a2,0x20$/;"	l
a56	user/grind.asm	/^     a56:	ec26                	sd	s1,24(sp)$/;"	l
a56	user/ls.asm	/^ a56:	00000097          	auipc	ra,0x0$/;"	l
a58	user/grind.asm	/^     a58:	e84a                	sd	s2,16(sp)$/;"	l
a58	user/sh.asm	/^     a58:	00001517          	auipc	a0,0x1$/;"	l
a58	user/usertests.asm	/^     a58:	0af51d63          	bne	a0,a5,b12 <writebig+0x15a>$/;"	l
a5a	user/alarmtest.asm	/^ a5a:	01c5d713          	srli	a4,a1,0x1c$/;"	l
a5a	user/grind.asm	/^     a5a:	1800                	addi	s0,sp,48$/;"	l
a5a	user/ls.asm	/^ a5a:	b70080e7          	jalr	-1168(ra) # 5c6 <sbrk>$/;"	l
a5c	user/grind.asm	/^     a5c:	00001517          	auipc	a0,0x1$/;"	l
a5c	user/sh.asm	/^     a5c:	91050513          	addi	a0,a0,-1776 # 1368 <malloc+0x15e>$/;"	l
a5c	user/usertests.asm	/^     a5c:	00092603          	lw	a2,0(s2)$/;"	l
a5e	user/alarmtest.asm	/^ a5e:	973e                	add	a4,a4,a5$/;"	l
a5e	user/ls.asm	/^ a5e:	fd5518e3          	bne	a0,s5,a2e <malloc+0xae>$/;"	l
a6	kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe
a6	user/alarmtest.asm	/^  a6:	00001097          	auipc	ra,0x1$/;"	l
a6	user/bttest.asm	/^  a6:	fee79de3          	bne	a5,a4,a0 <memset+0x12>$/;"	l
a6	user/echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	user/forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	user/init.asm	/^  a6:	302080e7          	jalr	770(ra) # 3a4 <open>$/;"	l
a6	user/kill.asm	/^  a6:	6422                	ld	s0,8(sp)$/;"	l
a6	user/ln.asm	/^  a6:	8082                	ret$/;"	l
a6	user/usertests.asm	/^      a6:	4581                	li	a1,0$/;"	l
a6	user/wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	user/zombie.asm	/^  a6:	1602                	slli	a2,a2,0x20$/;"	l
a60	user/alarmtest.asm	/^ a60:	fae68ae3          	beq	a3,a4,a14 <free+0x22>$/;"	l
a60	user/grind.asm	/^     a60:	98c50513          	addi	a0,a0,-1652 # 13e8 <malloc+0x1be>$/;"	l
a60	user/sh.asm	/^     a60:	fffff097          	auipc	ra,0xfffff$/;"	l
a60	user/usertests.asm	/^     a60:	0c961763          	bne	a2,s1,b2e <writebig+0x176>$/;"	l
a62	user/ls.asm	/^ a62:	4501                	li	a0,0$/;"	l
a64	user/alarmtest.asm	/^ a64:	e394                	sd	a3,0(a5)$/;"	l
a64	user/grind.asm	/^     a64:	00000097          	auipc	ra,0x0$/;"	l
a64	user/ls.asm	/^ a64:	bf45                	j	a14 <malloc+0x94>$/;"	l
a64	user/sh.asm	/^     a64:	5f4080e7          	jalr	1524(ra) # 54 <panic>$/;"	l
a64	user/usertests.asm	/^     a64:	2485                	addiw	s1,s1,1$/;"	l
a66	user/alarmtest.asm	/^ a66:	00000717          	auipc	a4,0x0$/;"	l
a66	user/usertests.asm	/^     a66:	bff1                	j	a42 <writebig+0x8a>$/;"	l
a68	user/grind.asm	/^     a68:	3d4080e7          	jalr	980(ra) # e38 <unlink>$/;"	l
a68	user/sh.asm	/^     a68:	7139                	addi	sp,sp,-64$/;"	l
a68	user/usertests.asm	/^     a68:	85d6                	mv	a1,s5$/;"	l
a6a	user/alarmtest.asm	/^ a6a:	30f73923          	sd	a5,786(a4) # d78 <freep>$/;"	l
a6a	user/sh.asm	/^     a6a:	fc06                	sd	ra,56(sp)$/;"	l
a6a	user/usertests.asm	/^     a6a:	00005517          	auipc	a0,0x5$/;"	l
a6c	user/grind.asm	/^     a6c:	00001517          	auipc	a0,0x1$/;"	l
a6c	user/sh.asm	/^     a6c:	f822                	sd	s0,48(sp)$/;"	l
a6e	user/alarmtest.asm	/^ a6e:	6422                	ld	s0,8(sp)$/;"	l
a6e	user/sh.asm	/^     a6e:	f426                	sd	s1,40(sp)$/;"	l
a6e	user/usertests.asm	/^     a6e:	24650513          	addi	a0,a0,582 # 5cb0 <malloc+0x504>$/;"	l
a7	kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe
a70	user/alarmtest.asm	/^ a70:	0141                	addi	sp,sp,16$/;"	l
a70	user/grind.asm	/^     a70:	92c50513          	addi	a0,a0,-1748 # 1398 <malloc+0x16e>$/;"	l
a70	user/sh.asm	/^     a70:	f04a                	sd	s2,32(sp)$/;"	l
a72	user/alarmtest.asm	/^ a72:	8082                	ret$/;"	l
a72	user/sh.asm	/^     a72:	ec4e                	sd	s3,24(sp)$/;"	l
a72	user/usertests.asm	/^     a72:	00005097          	auipc	ra,0x5$/;"	l
a74	user/alarmtest.asm	/^ a74:	7139                	addi	sp,sp,-64$/;"	l
a74	user/grind.asm	/^     a74:	00000097          	auipc	ra,0x0$/;"	l
a74	user/sh.asm	/^     a74:	e852                	sd	s4,16(sp)$/;"	l
a76	user/alarmtest.asm	/^ a76:	fc06                	sd	ra,56(sp)$/;"	l
a76	user/sh.asm	/^     a76:	e456                	sd	s5,8(sp)$/;"	l
a76	user/usertests.asm	/^     a76:	c82080e7          	jalr	-894(ra) # 56f4 <printf>$/;"	l
a78	user/alarmtest.asm	/^ a78:	f822                	sd	s0,48(sp)$/;"	l
a78	user/grind.asm	/^     a78:	3c4080e7          	jalr	964(ra) # e38 <unlink>$/;"	l
a78	user/sh.asm	/^     a78:	0080                	addi	s0,sp,64$/;"	l
a7a	user/alarmtest.asm	/^ a7a:	f426                	sd	s1,40(sp)$/;"	l
a7a	user/sh.asm	/^     a7a:	00001497          	auipc	s1,0x1$/;"	l
a7a	user/usertests.asm	/^     a7a:	4505                	li	a0,1$/;"	l
a7c	user/alarmtest.asm	/^ a7c:	f04a                	sd	s2,32(sp)$/;"	l
a7c	user/grind.asm	/^     a7c:	00000097          	auipc	ra,0x0$/;"	l
a7c	user/usertests.asm	/^     a7c:	00005097          	auipc	ra,0x5$/;"	l
a7e	user/alarmtest.asm	/^ a7e:	ec4e                	sd	s3,24(sp)$/;"	l
a7e	user/sh.asm	/^     a7e:	96e48493          	addi	s1,s1,-1682 # 13e8 <malloc+0x1de>$/;"	l
a8	user/call.asm	/^  a8:	fb7d                	bnez	a4,9e <strlen+0x14>$/;"	l
a8	user/cat.asm	/^  a8:	02099793          	slli	a5,s3,0x20$/;"	l
a8	user/grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	user/grind.asm	/^      a8:	dac080e7          	jalr	-596(ra) # e50 <mkdir>$/;"	l
a8	user/kill.asm	/^  a8:	0141                	addi	sp,sp,16$/;"	l
a8	user/ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	user/ls.asm	/^  a8:	00000097          	auipc	ra,0x0$/;"	l
a8	user/mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/sh.asm	/^      a8:	7179                	addi	sp,sp,-48$/;"	l
a8	user/stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	user/usertests.asm	/^      a8:	00006517          	auipc	a0,0x6$/;"	l
a8	user/wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a8	user/zombie.asm	/^  a8:	9201                	srli	a2,a2,0x20$/;"	l
a80	user/alarmtest.asm	/^ a80:	e852                	sd	s4,16(sp)$/;"	l
a80	user/grind.asm	/^     a80:	364080e7          	jalr	868(ra) # de0 <fork>$/;"	l
a80	user/usertests.asm	/^     a80:	8ee080e7          	jalr	-1810(ra) # 536a <exit>$/;"	l
a82	user/alarmtest.asm	/^ a82:	e456                	sd	s5,8(sp)$/;"	l
a82	user/sh.asm	/^     a82:	4589                	li	a1,2$/;"	l
a84	user/alarmtest.asm	/^ a84:	e05a                	sd	s6,0(sp)$/;"	l
a84	user/grind.asm	/^     a84:	00054e63          	bltz	a0,aa0 <iter+0x50>$/;"	l
a84	user/sh.asm	/^     a84:	8526                	mv	a0,s1$/;"	l
a84	user/usertests.asm	/^     a84:	85a6                	mv	a1,s1$/;"	l
a86	user/alarmtest.asm	/^ a86:	0080                	addi	s0,sp,64$/;"	l
a86	user/sh.asm	/^     a86:	00000097          	auipc	ra,0x0$/;"	l
a86	user/usertests.asm	/^     a86:	00005517          	auipc	a0,0x5$/;"	l
a88	user/alarmtest.asm	/^ a88:	02051493          	slli	s1,a0,0x20$/;"	l
a88	user/grind.asm	/^     a88:	84aa                	mv	s1,a0$/;"	l
a8a	user/grind.asm	/^     a8a:	e905                	bnez	a0,aba <iter+0x6a>$/;"	l
a8a	user/sh.asm	/^     a8a:	382080e7          	jalr	898(ra) # e08 <open>$/;"	l
a8a	user/usertests.asm	/^     a8a:	24a50513          	addi	a0,a0,586 # 5cd0 <malloc+0x524>$/;"	l
a8c	user/alarmtest.asm	/^ a8c:	9081                	srli	s1,s1,0x20$/;"	l
a8c	user/grind.asm	/^     a8c:	47fd                	li	a5,31$/;"	l
a8e	user/alarmtest.asm	/^ a8e:	04bd                	addi	s1,s1,15$/;"	l
a8e	user/grind.asm	/^     a8e:	00001717          	auipc	a4,0x1$/;"	l
a8e	user/sh.asm	/^     a8e:	00054963          	bltz	a0,aa0 <main+0x38>$/;"	l
a8e	user/usertests.asm	/^     a8e:	00005097          	auipc	ra,0x5$/;"	l
a90	user/alarmtest.asm	/^ a90:	8091                	srli	s1,s1,0x4$/;"	l
a92	user/alarmtest.asm	/^ a92:	0014899b          	addiw	s3,s1,1$/;"	l
a92	user/grind.asm	/^     a92:	c0f73d23          	sd	a5,-998(a4) # 16a8 <rand_next>$/;"	l
a92	user/sh.asm	/^     a92:	4789                	li	a5,2$/;"	l
a92	user/usertests.asm	/^     a92:	c66080e7          	jalr	-922(ra) # 56f4 <printf>$/;"	l
a94	user/sh.asm	/^     a94:	fea7d7e3          	bge	a5,a0,a82 <main+0x1a>$/;"	l
a96	user/alarmtest.asm	/^ a96:	0485                	addi	s1,s1,1$/;"	l
a96	user/grind.asm	/^     a96:	4501                	li	a0,0$/;"	l
a96	user/usertests.asm	/^     a96:	4505                	li	a0,1$/;"	l
a98	user/alarmtest.asm	/^ a98:	00000517          	auipc	a0,0x0$/;"	l
a98	user/grind.asm	/^     a98:	fffff097          	auipc	ra,0xfffff$/;"	l
a98	user/sh.asm	/^     a98:	00000097          	auipc	ra,0x0$/;"	l
a98	user/usertests.asm	/^     a98:	00005097          	auipc	ra,0x5$/;"	l
a9c	user/alarmtest.asm	/^ a9c:	2e053503          	ld	a0,736(a0) # d78 <freep>$/;"	l
a9c	user/grind.asm	/^     a9c:	5e0080e7          	jalr	1504(ra) # 78 <go>$/;"	l
a9c	user/sh.asm	/^     a9c:	358080e7          	jalr	856(ra) # df0 <close>$/;"	l
a9c	user/usertests.asm	/^     a9c:	8d2080e7          	jalr	-1838(ra) # 536a <exit>$/;"	l
aa	user/alarmtest.asm	/^  aa:	916080e7          	jalr	-1770(ra) # 9bc <printf>$/;"	l
aa	user/bttest.asm	/^  aa:	6422                	ld	s0,8(sp)$/;"	l
aa	user/call.asm	/^  aa:	6422                	ld	s0,8(sp)$/;"	l
aa	user/echo.asm	/^  aa:	cb91                	beqz	a5,be <strcmp+0x1e>$/;"	l
aa	user/forktest.asm	/^  aa:	2ec080e7          	jalr	748(ra) # 392 <wait>$/;"	l
aa	user/grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	user/init.asm	/^  aa:	bfa5                	j	22 <main+0x22>$/;"	l
aa	user/kill.asm	/^  aa:	8082                	ret$/;"	l
aa	user/ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	user/mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/sh.asm	/^      aa:	f406                	sd	ra,40(sp)$/;"	l
aa	user/stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	user/zombie.asm	/^  aa:	00a60733          	add	a4,a2,a0$/;"	l
aa0	user/alarmtest.asm	/^ aa0:	c515                	beqz	a0,acc <malloc+0x58>$/;"	l
aa0	user/grind.asm	/^     aa0:	00001517          	auipc	a0,0x1$/;"	l
aa0	user/sh.asm	/^     aa0:	00001497          	auipc	s1,0x1$/;"	l
aa0	user/usertests.asm	/^     aa0:	85d6                	mv	a1,s5$/;"	l
aa2	user/alarmtest.asm	/^ aa2:	611c                	ld	a5,0(a0)$/;"	l
aa2	user/usertests.asm	/^     aa2:	00005517          	auipc	a0,0x5$/;"	l
aa4	user/alarmtest.asm	/^ aa4:	4798                	lw	a4,8(a5)$/;"	l
aa4	user/grind.asm	/^     aa4:	96850513          	addi	a0,a0,-1688 # 1408 <malloc+0x1de>$/;"	l
aa4	user/sh.asm	/^     aa4:	a2048493          	addi	s1,s1,-1504 # 14c0 <buf.0>$/;"	l
aa6	user/alarmtest.asm	/^ aa6:	02977f63          	bgeu	a4,s1,ae4 <malloc+0x70>$/;"	l
aa6	user/usertests.asm	/^     aa6:	25650513          	addi	a0,a0,598 # 5cf8 <malloc+0x54c>$/;"	l
aa8	user/grind.asm	/^     aa8:	00000097          	auipc	ra,0x0$/;"	l
aa8	user/sh.asm	/^     aa8:	06300913          	li	s2,99$/;"	l
aaa	user/alarmtest.asm	/^ aaa:	8a4e                	mv	s4,s3$/;"	l
aaa	user/usertests.asm	/^     aaa:	00005097          	auipc	ra,0x5$/;"	l
aac	user/alarmtest.asm	/^ aac:	0009871b          	sext.w	a4,s3$/;"	l
aac	user/grind.asm	/^     aac:	6ca080e7          	jalr	1738(ra) # 1172 <printf>$/;"	l
aac	user/sh.asm	/^     aac:	02000993          	li	s3,32$/;"	l
aae	user/usertests.asm	/^     aae:	c4a080e7          	jalr	-950(ra) # 56f4 <printf>$/;"	l
ab0	user/alarmtest.asm	/^ ab0:	6685                	lui	a3,0x1$/;"	l
ab0	user/grind.asm	/^     ab0:	4505                	li	a0,1$/;"	l
ab0	user/sh.asm	/^     ab0:	00001a17          	auipc	s4,0x1$/;"	l
ab2	user/alarmtest.asm	/^ ab2:	00d77363          	bgeu	a4,a3,ab8 <malloc+0x44>$/;"	l
ab2	user/grind.asm	/^     ab2:	00000097          	auipc	ra,0x0$/;"	l
ab2	user/usertests.asm	/^     ab2:	4505                	li	a0,1$/;"	l
ab4	user/sh.asm	/^     ab4:	a13a0a13          	addi	s4,s4,-1517 # 14c3 <buf.0+0x3>$/;"	l
ab4	user/usertests.asm	/^     ab4:	00005097          	auipc	ra,0x5$/;"	l
ab6	user/alarmtest.asm	/^ ab6:	6a05                	lui	s4,0x1$/;"	l
ab6	user/grind.asm	/^     ab6:	336080e7          	jalr	822(ra) # de8 <exit>$/;"	l
ab8	user/alarmtest.asm	/^ ab8:	000a0b1b          	sext.w	s6,s4$/;"	l
ab8	user/sh.asm	/^     ab8:	00001a97          	auipc	s5,0x1$/;"	l
ab8	user/usertests.asm	/^     ab8:	8b6080e7          	jalr	-1866(ra) # 536a <exit>$/;"	l
aba	user/grind.asm	/^     aba:	00000097          	auipc	ra,0x0$/;"	l
abc	user/alarmtest.asm	/^ abc:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
abc	user/sh.asm	/^     abc:	938a8a93          	addi	s5,s5,-1736 # 13f0 <malloc+0x1e6>$/;"	l
abc	user/usertests.asm	/^     abc:	10b00793          	li	a5,267$/;"	l
abe	user/grind.asm	/^     abe:	326080e7          	jalr	806(ra) # de0 <fork>$/;"	l
ac	user/bttest.asm	/^  ac:	0141                	addi	sp,sp,16$/;"	l
ac	user/call.asm	/^  ac:	0141                	addi	sp,sp,16$/;"	l
ac	user/cat.asm	/^  ac:	01d7d993          	srli	s3,a5,0x1d$/;"	l
ac	user/echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	user/grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	user/grind.asm	/^      ac:	00001517          	auipc	a0,0x1$/;"	l
ac	user/init.asm	/^  ac:	00001517          	auipc	a0,0x1$/;"	l
ac	user/kill.asm	/^  ac:	1141                	addi	sp,sp,-16$/;"	l
ac	user/ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	user/ls.asm	/^  ac:	29c080e7          	jalr	668(ra) # 344 <memset>$/;"	l
ac	user/mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/sh.asm	/^      ac:	f022                	sd	s0,32(sp)$/;"	l
ac	user/stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	user/usertests.asm	/^      ac:	82850513          	addi	a0,a0,-2008 # 58d0 <malloc+0x124>$/;"	l
ac	user/wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac0	user/alarmtest.asm	/^ ac0:	00000917          	auipc	s2,0x0$/;"	l
ac0	user/sh.asm	/^     ac0:	a819                	j	ad6 <main+0x6e>$/;"	l
ac0	user/usertests.asm	/^     ac0:	02f48a63          	beq	s1,a5,af4 <writebig+0x13c>$/;"	l
ac2	user/grind.asm	/^     ac2:	892a                	mv	s2,a0$/;"	l
ac2	user/sh.asm	/^     ac2:	fffff097          	auipc	ra,0xfffff$/;"	l
ac4	user/alarmtest.asm	/^ ac4:	2b890913          	addi	s2,s2,696 # d78 <freep>$/;"	l
ac4	user/grind.asm	/^     ac4:	00054f63          	bltz	a0,ae2 <iter+0x92>$/;"	l
ac4	user/usertests.asm	/^     ac4:	854e                	mv	a0,s3$/;"	l
ac6	user/sh.asm	/^     ac6:	5b8080e7          	jalr	1464(ra) # 7a <fork1>$/;"	l
ac6	user/usertests.asm	/^     ac6:	00005097          	auipc	ra,0x5$/;"	l
ac8	user/alarmtest.asm	/^ ac8:	5afd                	li	s5,-1$/;"	l
ac8	user/grind.asm	/^     ac8:	e915                	bnez	a0,afc <iter+0xac>$/;"	l
aca	user/alarmtest.asm	/^ aca:	a895                	j	b3e <malloc+0xca>$/;"	l
aca	user/grind.asm	/^     aca:	6789                	lui	a5,0x2$/;"	l
aca	user/sh.asm	/^     aca:	c925                	beqz	a0,b3a <main+0xd2>$/;"	l
aca	user/usertests.asm	/^     aca:	8cc080e7          	jalr	-1844(ra) # 5392 <close>$/;"	l
acc	user/alarmtest.asm	/^ acc:	00000797          	auipc	a5,0x0$/;"	l
acc	user/grind.asm	/^     acc:	c0978793          	addi	a5,a5,-1015 # 1c09 <__BSS_END__+0x159>$/;"	l
acc	user/sh.asm	/^     acc:	4501                	li	a0,0$/;"	l
ace	user/sh.asm	/^     ace:	00000097          	auipc	ra,0x0$/;"	l
ace	user/usertests.asm	/^     ace:	00005517          	auipc	a0,0x5$/;"	l
acquire	kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad0	user/alarmtest.asm	/^ ad0:	2b478793          	addi	a5,a5,692 # d80 <base>$/;"	l
ad0	user/grind.asm	/^     ad0:	00001717          	auipc	a4,0x1$/;"	l
ad2	user/sh.asm	/^     ad2:	302080e7          	jalr	770(ra) # dd0 <wait>$/;"	l
ad2	user/usertests.asm	/^     ad2:	1da50513          	addi	a0,a0,474 # 5ca8 <malloc+0x4fc>$/;"	l
ad4	user/alarmtest.asm	/^ ad4:	00000717          	auipc	a4,0x0$/;"	l
ad4	user/grind.asm	/^     ad4:	bcf73c23          	sd	a5,-1064(a4) # 16a8 <rand_next>$/;"	l
ad6	user/sh.asm	/^     ad6:	06400593          	li	a1,100$/;"	l
ad6	user/usertests.asm	/^     ad6:	00005097          	auipc	ra,0x5$/;"	l
ad8	user/alarmtest.asm	/^ ad8:	2af73223          	sd	a5,676(a4) # d78 <freep>$/;"	l
ad8	user/grind.asm	/^     ad8:	4505                	li	a0,1$/;"	l
ada	user/grind.asm	/^     ada:	fffff097          	auipc	ra,0xfffff$/;"	l
ada	user/sh.asm	/^     ada:	8526                	mv	a0,s1$/;"	l
ada	user/usertests.asm	/^     ada:	8e4080e7          	jalr	-1820(ra) # 53ba <unlink>$/;"	l
adc	user/alarmtest.asm	/^ adc:	e39c                	sd	a5,0(a5)$/;"	l
adc	user/sh.asm	/^     adc:	fffff097          	auipc	ra,0xfffff$/;"	l
addr	kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:VRingDesc
addrs	kernel/file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	kernel/fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ade	user/alarmtest.asm	/^ ade:	0007a423          	sw	zero,8(a5)$/;"	l
ade	user/grind.asm	/^     ade:	59e080e7          	jalr	1438(ra) # 78 <go>$/;"	l
ade	user/usertests.asm	/^     ade:	06054663          	bltz	a0,b4a <writebig+0x192>$/;"	l
ae	user/alarmtest.asm	/^  ae:	4505                	li	a0,1$/;"	l
ae	user/bttest.asm	/^  ae:	8082                	ret$/;"	l
ae	user/call.asm	/^  ae:	8082                	ret$/;"	l
ae	user/forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	user/grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	user/kill.asm	/^  ae:	e422                	sd	s0,8(sp)$/;"	l
ae	user/ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	user/sh.asm	/^      ae:	ec26                	sd	s1,24(sp)$/;"	l
ae	user/stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	user/zombie.asm	/^  ae:	00b78023          	sb	a1,0(a5)$/;"	l
ae0	user/sh.asm	/^     ae0:	524080e7          	jalr	1316(ra) # 0 <getcmd>$/;"	l
ae2	user/alarmtest.asm	/^ ae2:	b7e1                	j	aaa <malloc+0x36>$/;"	l
ae2	user/grind.asm	/^     ae2:	00001517          	auipc	a0,0x1$/;"	l
ae2	user/usertests.asm	/^     ae2:	70e2                	ld	ra,56(sp)$/;"	l
ae4	user/alarmtest.asm	/^ ae4:	02e48c63          	beq	s1,a4,b1c <malloc+0xa8>$/;"	l
ae4	user/sh.asm	/^     ae4:	06054763          	bltz	a0,b52 <main+0xea>$/;"	l
ae4	user/usertests.asm	/^     ae4:	7442                	ld	s0,48(sp)$/;"	l
ae6	user/grind.asm	/^     ae6:	92650513          	addi	a0,a0,-1754 # 1408 <malloc+0x1de>$/;"	l
ae6	user/usertests.asm	/^     ae6:	74a2                	ld	s1,40(sp)$/;"	l
ae8	user/alarmtest.asm	/^ ae8:	4137073b          	subw	a4,a4,s3$/;"	l
ae8	user/sh.asm	/^     ae8:	0004c783          	lbu	a5,0(s1)$/;"	l
ae8	user/usertests.asm	/^     ae8:	7902                	ld	s2,32(sp)$/;"	l
aea	user/grind.asm	/^     aea:	00000097          	auipc	ra,0x0$/;"	l
aea	user/usertests.asm	/^     aea:	69e2                	ld	s3,24(sp)$/;"	l
aec	user/alarmtest.asm	/^ aec:	c798                	sw	a4,8(a5)$/;"	l
aec	user/sh.asm	/^     aec:	fd279be3          	bne	a5,s2,ac2 <main+0x5a>$/;"	l
aec	user/usertests.asm	/^     aec:	6a42                	ld	s4,16(sp)$/;"	l
aee	user/alarmtest.asm	/^ aee:	02071693          	slli	a3,a4,0x20$/;"	l
aee	user/grind.asm	/^     aee:	688080e7          	jalr	1672(ra) # 1172 <printf>$/;"	l
aee	user/usertests.asm	/^     aee:	6aa2                	ld	s5,8(sp)$/;"	l
af0	user/sh.asm	/^     af0:	0014c703          	lbu	a4,1(s1)$/;"	l
af0	user/usertests.asm	/^     af0:	6121                	addi	sp,sp,64$/;"	l
af2	user/alarmtest.asm	/^ af2:	01c6d713          	srli	a4,a3,0x1c$/;"	l
af2	user/grind.asm	/^     af2:	4505                	li	a0,1$/;"	l
af2	user/usertests.asm	/^     af2:	8082                	ret$/;"	l
af4	user/grind.asm	/^     af4:	00000097          	auipc	ra,0x0$/;"	l
af4	user/sh.asm	/^     af4:	06400793          	li	a5,100$/;"	l
af4	user/usertests.asm	/^     af4:	10b00593          	li	a1,267$/;"	l
af6	user/alarmtest.asm	/^ af6:	97ba                	add	a5,a5,a4$/;"	l
af8	user/alarmtest.asm	/^ af8:	0137a423          	sw	s3,8(a5)$/;"	l
af8	user/grind.asm	/^     af8:	2f4080e7          	jalr	756(ra) # de8 <exit>$/;"	l
af8	user/sh.asm	/^     af8:	fcf715e3          	bne	a4,a5,ac2 <main+0x5a>$/;"	l
af8	user/usertests.asm	/^     af8:	00005517          	auipc	a0,0x5$/;"	l
afc	user/alarmtest.asm	/^ afc:	00000717          	auipc	a4,0x0$/;"	l
afc	user/grind.asm	/^     afc:	57fd                	li	a5,-1$/;"	l
afc	user/sh.asm	/^     afc:	0024c783          	lbu	a5,2(s1)$/;"	l
afc	user/usertests.asm	/^     afc:	22050513          	addi	a0,a0,544 # 5d18 <malloc+0x56c>$/;"	l
afe	user/grind.asm	/^     afe:	fcf42e23          	sw	a5,-36(s0)$/;"	l
align	kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr
alloc3_desc	kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc_desc	kernel/virtio_disk.c	/^alloc_desc()$/;"	f	file:
allocpid	kernel/proc.c	/^allocpid() {$/;"	f
allocproc	kernel/proc.c	/^allocproc(void)$/;"	f	file:
argaddr	kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f
argc	user/sh.asm	/^  argc = 0;$/;"	d
argfd	kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	kernel/syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	user/usertests.c	/^void argptest(char *s)$/;"	f
argraw	kernel/syscall.c	/^argraw(int n)$/;"	f	file:
argstr	kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f
argv	user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	user/initcode.S	/^argv:$/;"	l
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
atoi	user/ulib.c	/^atoi(const char *s)$/;"	f
avail	kernel/virtio_disk.c	/^  uint16 *avail;$/;"	m	struct:disk	file:
b	kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon8	typeref:struct:disk::__anon8::buf	file:
b	user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	user/alarmtest.asm	/^  b0:	00000097          	auipc	ra,0x0$/;"	l
b0	user/bttest.asm	/^  b0:	1141                	addi	sp,sp,-16$/;"	l
b0	user/call.asm	/^  b0:	4501                	li	a0,0$/;"	l
b0	user/cat.asm	/^  b0:	05c1                	addi	a1,a1,16$/;"	l
b0	user/echo.asm	/^  b0:	00f71763          	bne	a4,a5,be <strcmp+0x1e>$/;"	l
b0	user/forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	user/grind.asm	/^      b0:	26450513          	addi	a0,a0,612 # 1310 <malloc+0xe6>$/;"	l
b0	user/init.asm	/^  b0:	80450513          	addi	a0,a0,-2044 # 8b0 <malloc+0x10a>$/;"	l
b0	user/kill.asm	/^  b0:	0800                	addi	s0,sp,16$/;"	l
b0	user/ls.asm	/^  b0:	84ce                	mv	s1,s3$/;"	l
b0	user/mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/sh.asm	/^      b0:	1800                	addi	s0,sp,48$/;"	l
b0	user/usertests.asm	/^      b0:	00005097          	auipc	ra,0x5$/;"	l
b0	user/wc.asm	/^  b0:	86e6                	mv	a3,s9$/;"	l
b00	user/alarmtest.asm	/^ b00:	26a73e23          	sd	a0,636(a4) # d78 <freep>$/;"	l
b00	user/sh.asm	/^     b00:	fd3791e3          	bne	a5,s3,ac2 <main+0x5a>$/;"	l
b00	user/usertests.asm	/^     b00:	00005097          	auipc	ra,0x5$/;"	l
b02	user/grind.asm	/^     b02:	fdc40513          	addi	a0,s0,-36$/;"	l
b04	user/alarmtest.asm	/^ b04:	01078513          	addi	a0,a5,16$/;"	l
b04	user/sh.asm	/^     b04:	8526                	mv	a0,s1$/;"	l
b04	user/usertests.asm	/^     b04:	bf4080e7          	jalr	-1036(ra) # 56f4 <printf>$/;"	l
b06	user/grind.asm	/^     b06:	00000097          	auipc	ra,0x0$/;"	l
b06	user/sh.asm	/^     b06:	00000097          	auipc	ra,0x0$/;"	l
b08	user/alarmtest.asm	/^ b08:	70e2                	ld	ra,56(sp)$/;"	l
b08	user/usertests.asm	/^     b08:	4505                	li	a0,1$/;"	l
b0a	user/alarmtest.asm	/^ b0a:	7442                	ld	s0,48(sp)$/;"	l
b0a	user/grind.asm	/^     b0a:	2ea080e7          	jalr	746(ra) # df0 <wait>$/;"	l
b0a	user/sh.asm	/^     b0a:	09e080e7          	jalr	158(ra) # ba4 <strlen>$/;"	l
b0a	user/usertests.asm	/^     b0a:	00005097          	auipc	ra,0x5$/;"	l
b0c	user/alarmtest.asm	/^ b0c:	74a2                	ld	s1,40(sp)$/;"	l
b0e	user/alarmtest.asm	/^ b0e:	7902                	ld	s2,32(sp)$/;"	l
b0e	user/grind.asm	/^     b0e:	fdc42783          	lw	a5,-36(s0)$/;"	l
b0e	user/sh.asm	/^     b0e:	fff5079b          	addiw	a5,a0,-1$/;"	l
b0e	user/usertests.asm	/^     b0e:	860080e7          	jalr	-1952(ra) # 536a <exit>$/;"	l
b10	user/alarmtest.asm	/^ b10:	69e2                	ld	s3,24(sp)$/;"	l
b12	user/alarmtest.asm	/^ b12:	6a42                	ld	s4,16(sp)$/;"	l
b12	user/grind.asm	/^     b12:	ef99                	bnez	a5,b30 <iter+0xe0>$/;"	l
b12	user/sh.asm	/^     b12:	1782                	slli	a5,a5,0x20$/;"	l
b12	user/usertests.asm	/^     b12:	85aa                	mv	a1,a0$/;"	l
b14	user/alarmtest.asm	/^ b14:	6aa2                	ld	s5,8(sp)$/;"	l
b14	user/grind.asm	/^     b14:	57fd                	li	a5,-1$/;"	l
b14	user/sh.asm	/^     b14:	9381                	srli	a5,a5,0x20$/;"	l
b14	user/usertests.asm	/^     b14:	00005517          	auipc	a0,0x5$/;"	l
b16	user/alarmtest.asm	/^ b16:	6b02                	ld	s6,0(sp)$/;"	l
b16	user/grind.asm	/^     b16:	fcf42c23          	sw	a5,-40(s0)$/;"	l
b16	user/sh.asm	/^     b16:	97a6                	add	a5,a5,s1$/;"	l
b18	user/alarmtest.asm	/^ b18:	6121                	addi	sp,sp,64$/;"	l
b18	user/sh.asm	/^     b18:	00078023          	sb	zero,0(a5)$/;"	l
b18	user/usertests.asm	/^     b18:	22c50513          	addi	a0,a0,556 # 5d40 <malloc+0x594>$/;"	l
b1a	user/alarmtest.asm	/^ b1a:	8082                	ret$/;"	l
b1a	user/grind.asm	/^     b1a:	fd840513          	addi	a0,s0,-40$/;"	l
b1c	user/alarmtest.asm	/^ b1c:	6398                	ld	a4,0(a5)$/;"	l
b1c	user/sh.asm	/^     b1c:	8552                	mv	a0,s4$/;"	l
b1c	user/usertests.asm	/^     b1c:	00005097          	auipc	ra,0x5$/;"	l
b1e	user/alarmtest.asm	/^ b1e:	e118                	sd	a4,0(a0)$/;"	l
b1e	user/grind.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	user/sh.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b2	user/bttest.asm	/^  b2:	e422                	sd	s0,8(sp)$/;"	l
b2	user/call.asm	/^  b2:	bfe5                	j	aa <strlen+0x20>$/;"	l
b2	user/cat.asm	/^  b2:	99ae                	add	s3,s3,a1$/;"	l
b2	user/grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	user/kill.asm	/^  b2:	00054783          	lbu	a5,0(a0)$/;"	l
b2	user/ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	user/ls.asm	/^  b2:	bf69                	j	4c <fmtname+0x4c>$/;"	l
b2	user/mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/sh.asm	/^      b2:	c10d                	beqz	a0,d4 <runcmd+0x2c>$/;"	l
b2	user/stressfs.asm	/^  b2:	2f2080e7          	jalr	754(ra) # 3a0 <close>$/;"	l
b2	user/wc.asm	/^  b2:	8662                	mv	a2,s8$/;"	l
b2	user/zombie.asm	/^  b2:	0785                	addi	a5,a5,1$/;"	l
b20	user/alarmtest.asm	/^ b20:	bff1                	j	afc <malloc+0x88>$/;"	l
b20	user/usertests.asm	/^     b20:	bd8080e7          	jalr	-1064(ra) # 56f4 <printf>$/;"	l
b22	user/alarmtest.asm	/^ b22:	01652423          	sw	s6,8(a0)$/;"	l
b22	user/grind.asm	/^     b22:	2d2080e7          	jalr	722(ra) # df0 <wait>$/;"	l
b22	user/sh.asm	/^     b22:	31a080e7          	jalr	794(ra) # e38 <chdir>$/;"	l
b24	user/usertests.asm	/^     b24:	4505                	li	a0,1$/;"	l
b26	user/alarmtest.asm	/^ b26:	0541                	addi	a0,a0,16$/;"	l
b26	user/grind.asm	/^     b26:	4501                	li	a0,0$/;"	l
b26	user/sh.asm	/^     b26:	fa0558e3          	bgez	a0,ad6 <main+0x6e>$/;"	l
b26	user/usertests.asm	/^     b26:	00005097          	auipc	ra,0x5$/;"	l
b28	user/alarmtest.asm	/^ b28:	00000097          	auipc	ra,0x0$/;"	l
b28	user/grind.asm	/^     b28:	00000097          	auipc	ra,0x0$/;"	l
b2a	user/sh.asm	/^     b2a:	8652                	mv	a2,s4$/;"	l
b2a	user/usertests.asm	/^     b2a:	844080e7          	jalr	-1980(ra) # 536a <exit>$/;"	l
b2c	user/alarmtest.asm	/^ b2c:	eca080e7          	jalr	-310(ra) # 9f2 <free>$/;"	l
b2c	user/grind.asm	/^     b2c:	2c0080e7          	jalr	704(ra) # de8 <exit>$/;"	l
b2c	user/sh.asm	/^     b2c:	85d6                	mv	a1,s5$/;"	l
b2e	user/sh.asm	/^     b2e:	4509                	li	a0,2$/;"	l
b2e	user/usertests.asm	/^     b2e:	85a6                	mv	a1,s1$/;"	l
b30	user/alarmtest.asm	/^ b30:	00093503          	ld	a0,0(s2)$/;"	l
b30	user/grind.asm	/^     b30:	8526                	mv	a0,s1$/;"	l
b30	user/sh.asm	/^     b30:	00000097          	auipc	ra,0x0$/;"	l
b30	user/usertests.asm	/^     b30:	00005517          	auipc	a0,0x5$/;"	l
b32	user/grind.asm	/^     b32:	00000097          	auipc	ra,0x0$/;"	l
b34	user/alarmtest.asm	/^ b34:	d971                	beqz	a0,b08 <malloc+0x94>$/;"	l
b34	user/sh.asm	/^     b34:	5f4080e7          	jalr	1524(ra) # 1124 <fprintf>$/;"	l
b34	user/usertests.asm	/^     b34:	22850513          	addi	a0,a0,552 # 5d58 <malloc+0x5ac>$/;"	l
b36	user/alarmtest.asm	/^ b36:	611c                	ld	a5,0(a0)$/;"	l
b36	user/grind.asm	/^     b36:	2e6080e7          	jalr	742(ra) # e18 <kill>$/;"	l
b38	user/alarmtest.asm	/^ b38:	4798                	lw	a4,8(a5)$/;"	l
b38	user/sh.asm	/^     b38:	bf79                	j	ad6 <main+0x6e>$/;"	l
b38	user/usertests.asm	/^     b38:	00005097          	auipc	ra,0x5$/;"	l
b3a	user/alarmtest.asm	/^ b3a:	fa9775e3          	bgeu	a4,s1,ae4 <malloc+0x70>$/;"	l
b3a	user/grind.asm	/^     b3a:	854a                	mv	a0,s2$/;"	l
b3a	user/sh.asm	/^     b3a:	00001517          	auipc	a0,0x1$/;"	l
b3c	user/grind.asm	/^     b3c:	00000097          	auipc	ra,0x0$/;"	l
b3c	user/usertests.asm	/^     b3c:	bbc080e7          	jalr	-1092(ra) # 56f4 <printf>$/;"	l
b3e	user/alarmtest.asm	/^ b3e:	00093703          	ld	a4,0(s2)$/;"	l
b3e	user/sh.asm	/^     b3e:	98650513          	addi	a0,a0,-1658 # 14c0 <buf.0>$/;"	l
b4	user/alarmtest.asm	/^  b4:	582080e7          	jalr	1410(ra) # 632 <exit>$/;"	l
b4	user/bttest.asm	/^  b4:	0800                	addi	s0,sp,16$/;"	l
b4	user/call.asm	/^  b4:	1141                	addi	sp,sp,-16$/;"	l
b4	user/cat.asm	/^  b4:	4581                	li	a1,0$/;"	l
b4	user/echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	user/grind.asm	/^      b4:	00001097          	auipc	ra,0x1$/;"	l
b4	user/init.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	user/ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/ls.asm	/^  b4:	d9010113          	addi	sp,sp,-624$/;"	l
b4	user/sh.asm	/^      b4:	84aa                	mv	s1,a0$/;"	l
b4	user/usertests.asm	/^      b4:	2fa080e7          	jalr	762(ra) # 53aa <open>$/;"	l
b4	user/wc.asm	/^  b4:	85de                	mv	a1,s7$/;"	l
b4	user/zombie.asm	/^  b4:	fee79de3          	bne	a5,a4,ae <memset+0x12>$/;"	l
b40	user/grind.asm	/^     b40:	2dc080e7          	jalr	732(ra) # e18 <kill>$/;"	l
b40	user/usertests.asm	/^     b40:	4505                	li	a0,1$/;"	l
b42	user/alarmtest.asm	/^ b42:	853e                	mv	a0,a5$/;"	l
b42	user/sh.asm	/^     b42:	00000097          	auipc	ra,0x0$/;"	l
b42	user/usertests.asm	/^     b42:	00005097          	auipc	ra,0x5$/;"	l
b44	user/alarmtest.asm	/^ b44:	fef719e3          	bne	a4,a5,b36 <malloc+0xc2>$/;"	l
b44	user/grind.asm	/^     b44:	bfc1                	j	b14 <iter+0xc4>$/;"	l
b46	user/grind.asm	/^     b46:	1141                	addi	sp,sp,-16$/;"	l
b46	user/sh.asm	/^     b46:	e9e080e7          	jalr	-354(ra) # 9e0 <parsecmd>$/;"	l
b46	user/usertests.asm	/^     b46:	828080e7          	jalr	-2008(ra) # 536a <exit>$/;"	l
b48	user/alarmtest.asm	/^ b48:	8552                	mv	a0,s4$/;"	l
b48	user/grind.asm	/^     b48:	e406                	sd	ra,8(sp)$/;"	l
b4a	user/alarmtest.asm	/^ b4a:	00000097          	auipc	ra,0x0$/;"	l
b4a	user/grind.asm	/^     b4a:	e022                	sd	s0,0(sp)$/;"	l
b4a	user/sh.asm	/^     b4a:	fffff097          	auipc	ra,0xfffff$/;"	l
b4a	user/usertests.asm	/^     b4a:	85d6                	mv	a1,s5$/;"	l
b4c	user/grind.asm	/^     b4c:	0800                	addi	s0,sp,16$/;"	l
b4c	user/usertests.asm	/^     b4c:	00005517          	auipc	a0,0x5$/;"	l
b4e	user/alarmtest.asm	/^ b4e:	b70080e7          	jalr	-1168(ra) # 6ba <sbrk>$/;"	l
b4e	user/grind.asm	/^     b4e:	a811                	j	b62 <main+0x1c>$/;"	l
b4e	user/sh.asm	/^     b4e:	55e080e7          	jalr	1374(ra) # a8 <runcmd>$/;"	l
b50	user/grind.asm	/^     b50:	00000097          	auipc	ra,0x0$/;"	l
b50	user/usertests.asm	/^     b50:	23450513          	addi	a0,a0,564 # 5d80 <malloc+0x5d4>$/;"	l
b52	user/alarmtest.asm	/^ b52:	fd5518e3          	bne	a0,s5,b22 <malloc+0xae>$/;"	l
b52	user/sh.asm	/^     b52:	4501                	li	a0,0$/;"	l
b54	user/grind.asm	/^     b54:	f00080e7          	jalr	-256(ra) # a50 <iter>$/;"	l
b54	user/sh.asm	/^     b54:	00000097          	auipc	ra,0x0$/;"	l
b54	user/usertests.asm	/^     b54:	00005097          	auipc	ra,0x5$/;"	l
b56	user/alarmtest.asm	/^ b56:	4501                	li	a0,0$/;"	l
b58	user/alarmtest.asm	/^ b58:	bf45                	j	b08 <malloc+0x94>$/;"	l
b58	user/grind.asm	/^     b58:	4551                	li	a0,20$/;"	l
b58	user/sh.asm	/^     b58:	274080e7          	jalr	628(ra) # dc8 <exit>$/;"	l
b58	user/usertests.asm	/^     b58:	ba0080e7          	jalr	-1120(ra) # 56f4 <printf>$/;"	l
b5a	user/grind.asm	/^     b5a:	00000097          	auipc	ra,0x0$/;"	l
b5c	user/sh.asm	/^     b5c:	1141                	addi	sp,sp,-16$/;"	l
b5c	user/usertests.asm	/^     b5c:	4505                	li	a0,1$/;"	l
b5e	user/grind.asm	/^     b5e:	31e080e7          	jalr	798(ra) # e78 <sleep>$/;"	l
b5e	user/sh.asm	/^     b5e:	e422                	sd	s0,8(sp)$/;"	l
b5e	user/usertests.asm	/^     b5e:	00005097          	auipc	ra,0x5$/;"	l
b6	user/bttest.asm	/^  b6:	00054783          	lbu	a5,0(a0)$/;"	l
b6	user/call.asm	/^  b6:	e422                	sd	s0,8(sp)$/;"	l
b6	user/cat.asm	/^  b6:	00093503          	ld	a0,0(s2)$/;"	l
b6	user/echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	user/grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	user/kill.asm	/^  b6:	cf91                	beqz	a5,d2 <strlen+0x26>$/;"	l
b6	user/ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	user/mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/sh.asm	/^      b6:	4118                	lw	a4,0(a0)$/;"	l
b6	user/stressfs.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	user/wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b60	user/sh.asm	/^     b60:	0800                	addi	s0,sp,16$/;"	l
b62	user/grind.asm	/^     b62:	00000097          	auipc	ra,0x0$/;"	l
b62	user/sh.asm	/^     b62:	87aa                	mv	a5,a0$/;"	l
b62	user/usertests.asm	/^     b62:	80c080e7          	jalr	-2036(ra) # 536a <exit>$/;"	l
b64	user/sh.asm	/^     b64:	0585                	addi	a1,a1,1$/;"	l
b66	user/grind.asm	/^     b66:	27e080e7          	jalr	638(ra) # de0 <fork>$/;"	l
b66	user/sh.asm	/^     b66:	0785                	addi	a5,a5,1$/;"	l
b66	user/usertests.asm	/^     b66:	7179                	addi	sp,sp,-48$/;"	l
b68	user/sh.asm	/^     b68:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b68	user/usertests.asm	/^     b68:	f406                	sd	ra,40(sp)$/;"	l
b6a	user/grind.asm	/^     b6a:	d17d                	beqz	a0,b50 <main+0xa>$/;"	l
b6a	user/usertests.asm	/^     b6a:	f022                	sd	s0,32(sp)$/;"	l
b6c	user/grind.asm	/^     b6c:	fea056e3          	blez	a0,b58 <main+0x12>$/;"	l
b6c	user/sh.asm	/^     b6c:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b6c	user/usertests.asm	/^     b6c:	ec26                	sd	s1,24(sp)$/;"	l
b6e	user/usertests.asm	/^     b6e:	e84a                	sd	s2,16(sp)$/;"	l
b70	user/grind.asm	/^     b70:	4501                	li	a0,0$/;"	l
b70	user/sh.asm	/^     b70:	fb75                	bnez	a4,b64 <strcpy+0x8>$/;"	l
b70	user/usertests.asm	/^     b70:	e44e                	sd	s3,8(sp)$/;"	l
b72	user/grind.asm	/^     b72:	00000097          	auipc	ra,0x0$/;"	l
b72	user/sh.asm	/^     b72:	6422                	ld	s0,8(sp)$/;"	l
b72	user/usertests.asm	/^     b72:	1800                	addi	s0,sp,48$/;"	l
b74	user/sh.asm	/^     b74:	0141                	addi	sp,sp,16$/;"	l
b74	user/usertests.asm	/^     b74:	89aa                	mv	s3,a0$/;"	l
b76	user/grind.asm	/^     b76:	27e080e7          	jalr	638(ra) # df0 <wait>$/;"	l
b76	user/sh.asm	/^     b76:	8082                	ret$/;"	l
b76	user/usertests.asm	/^     b76:	20200593          	li	a1,514$/;"	l
b78	user/sh.asm	/^     b78:	1141                	addi	sp,sp,-16$/;"	l
b7a	user/grind.asm	/^     b7a:	bff9                	j	b58 <main+0x12>$/;"	l
b7a	user/sh.asm	/^     b7a:	e422                	sd	s0,8(sp)$/;"	l
b7a	user/usertests.asm	/^     b7a:	00005517          	auipc	a0,0x5$/;"	l
b7c	user/grind.asm	/^     b7c:	1141                	addi	sp,sp,-16$/;"	l
b7c	user/sh.asm	/^     b7c:	0800                	addi	s0,sp,16$/;"	l
b7e	user/grind.asm	/^     b7e:	e422                	sd	s0,8(sp)$/;"	l
b7e	user/sh.asm	/^     b7e:	00054783          	lbu	a5,0(a0)$/;"	l
b7e	user/usertests.asm	/^     b7e:	21e50513          	addi	a0,a0,542 # 5d98 <malloc+0x5ec>$/;"	l
b8	user/alarmtest.asm	/^  b8:	7139                	addi	sp,sp,-64$/;"	l
b8	user/call.asm	/^  b8:	0800                	addi	s0,sp,16$/;"	l
b8	user/echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	user/forktest.asm	/^  b8:	3ec50513          	addi	a0,a0,1004 # 4a0 <sigreturn+0x6e>$/;"	l
b8	user/grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	user/grind.asm	/^      b8:	da4080e7          	jalr	-604(ra) # e58 <chdir>$/;"	l
b8	user/init.asm	/^  b8:	63a080e7          	jalr	1594(ra) # 6ee <printf>$/;"	l
b8	user/kill.asm	/^  b8:	0505                	addi	a0,a0,1$/;"	l
b8	user/ln.asm	/^  b8:	4685                	li	a3,1$/;"	l
b8	user/ls.asm	/^  b8:	26113423          	sd	ra,616(sp)$/;"	l
b8	user/sh.asm	/^      b8:	4795                	li	a5,5$/;"	l
b8	user/usertests.asm	/^      b8:	02054663          	bltz	a0,e4 <opentest+0x4a>$/;"	l
b8	user/zombie.asm	/^  b8:	6422                	ld	s0,8(sp)$/;"	l
b80	user/grind.asm	/^     b80:	0800                	addi	s0,sp,16$/;"	l
b82	user/grind.asm	/^     b82:	87aa                	mv	a5,a0$/;"	l
b82	user/sh.asm	/^     b82:	cb91                	beqz	a5,b96 <strcmp+0x1e>$/;"	l
b82	user/usertests.asm	/^     b82:	00005097          	auipc	ra,0x5$/;"	l
b84	user/grind.asm	/^     b84:	0585                	addi	a1,a1,1$/;"	l
b84	user/sh.asm	/^     b84:	0005c703          	lbu	a4,0(a1)$/;"	l
b86	user/grind.asm	/^     b86:	0785                	addi	a5,a5,1$/;"	l
b86	user/usertests.asm	/^     b86:	828080e7          	jalr	-2008(ra) # 53aa <open>$/;"	l
b88	user/grind.asm	/^     b88:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b88	user/sh.asm	/^     b88:	00f71763          	bne	a4,a5,b96 <strcmp+0x1e>$/;"	l
b8a	user/usertests.asm	/^     b8a:	0e054563          	bltz	a0,c74 <unlinkread+0x10e>$/;"	l
b8c	user/grind.asm	/^     b8c:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b8c	user/sh.asm	/^     b8c:	0505                	addi	a0,a0,1$/;"	l
b8e	user/sh.asm	/^     b8e:	0585                	addi	a1,a1,1$/;"	l
b8e	user/usertests.asm	/^     b8e:	84aa                	mv	s1,a0$/;"	l
b90	user/grind.asm	/^     b90:	fb75                	bnez	a4,b84 <strcpy+0x8>$/;"	l
b90	user/sh.asm	/^     b90:	00054783          	lbu	a5,0(a0)$/;"	l
b90	user/usertests.asm	/^     b90:	4615                	li	a2,5$/;"	l
b92	user/grind.asm	/^     b92:	6422                	ld	s0,8(sp)$/;"	l
b92	user/usertests.asm	/^     b92:	00005597          	auipc	a1,0x5$/;"	l
b94	user/grind.asm	/^     b94:	0141                	addi	sp,sp,16$/;"	l
b94	user/sh.asm	/^     b94:	fbe5                	bnez	a5,b84 <strcmp+0xc>$/;"	l
b96	user/grind.asm	/^     b96:	8082                	ret$/;"	l
b96	user/sh.asm	/^     b96:	0005c503          	lbu	a0,0(a1)$/;"	l
b96	user/usertests.asm	/^     b96:	23658593          	addi	a1,a1,566 # 5dc8 <malloc+0x61c>$/;"	l
b98	user/grind.asm	/^     b98:	1141                	addi	sp,sp,-16$/;"	l
b9a	user/grind.asm	/^     b9a:	e422                	sd	s0,8(sp)$/;"	l
b9a	user/sh.asm	/^     b9a:	40a7853b          	subw	a0,a5,a0$/;"	l
b9a	user/usertests.asm	/^     b9a:	00004097          	auipc	ra,0x4$/;"	l
b9c	user/grind.asm	/^     b9c:	0800                	addi	s0,sp,16$/;"	l
b9e	user/grind.asm	/^     b9e:	00054783          	lbu	a5,0(a0)$/;"	l
b9e	user/sh.asm	/^     b9e:	6422                	ld	s0,8(sp)$/;"	l
b9e	user/usertests.asm	/^     b9e:	7f0080e7          	jalr	2032(ra) # 538a <write>$/;"	l
ba	user/alarmtest.asm	/^  ba:	fc06                	sd	ra,56(sp)$/;"	l
ba	user/bttest.asm	/^  ba:	cb99                	beqz	a5,d0 <strchr+0x20>$/;"	l
ba	user/call.asm	/^  ba:	ca19                	beqz	a2,d0 <memset+0x1c>$/;"	l
ba	user/cat.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	user/grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	user/kill.asm	/^  ba:	87aa                	mv	a5,a0$/;"	l
ba	user/ln.asm	/^  ba:	9e89                	subw	a3,a3,a0$/;"	l
ba	user/mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/sh.asm	/^      ba:	02e7e263          	bltu	a5,a4,de <runcmd+0x36>$/;"	l
ba	user/stressfs.asm	/^  ba:	81250513          	addi	a0,a0,-2030 # 8c8 <malloc+0x10e>$/;"	l
ba	user/wc.asm	/^  ba:	89250513          	addi	a0,a0,-1902 # 948 <malloc+0x104>$/;"	l
ba	user/zombie.asm	/^  ba:	0141                	addi	sp,sp,16$/;"	l
ba0	user/sh.asm	/^     ba0:	0141                	addi	sp,sp,16$/;"	l
ba2	user/grind.asm	/^     ba2:	cb91                	beqz	a5,bb6 <strcmp+0x1e>$/;"	l
ba2	user/sh.asm	/^     ba2:	8082                	ret$/;"	l
ba2	user/usertests.asm	/^     ba2:	8526                	mv	a0,s1$/;"	l
ba4	user/grind.asm	/^     ba4:	0005c703          	lbu	a4,0(a1)$/;"	l
ba4	user/sh.asm	/^     ba4:	1141                	addi	sp,sp,-16$/;"	l
ba4	user/usertests.asm	/^     ba4:	00004097          	auipc	ra,0x4$/;"	l
ba6	user/sh.asm	/^     ba6:	e422                	sd	s0,8(sp)$/;"	l
ba8	user/grind.asm	/^     ba8:	00f71763          	bne	a4,a5,bb6 <strcmp+0x1e>$/;"	l
ba8	user/sh.asm	/^     ba8:	0800                	addi	s0,sp,16$/;"	l
ba8	user/usertests.asm	/^     ba8:	7ee080e7          	jalr	2030(ra) # 5392 <close>$/;"	l
baa	user/sh.asm	/^     baa:	00054783          	lbu	a5,0(a0)$/;"	l
bac	user/grind.asm	/^     bac:	0505                	addi	a0,a0,1$/;"	l
bac	user/usertests.asm	/^     bac:	4589                	li	a1,2$/;"	l
backcmd	user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
backtrace	kernel/printf.c	/^void backtrace(void){$/;"	f
bad	kernel/kernel.asm	/^ bad:$/;"	l
badarg	user/usertests.c	/^badarg(char *s)$/;"	f
badwrite	user/usertests.c	/^badwrite(char *s)$/;"	f
bae	user/grind.asm	/^     bae:	0585                	addi	a1,a1,1$/;"	l
bae	user/sh.asm	/^     bae:	cf91                	beqz	a5,bca <strlen+0x26>$/;"	l
bae	user/usertests.asm	/^     bae:	00005517          	auipc	a0,0x5$/;"	l
balloc	kernel/fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs/mkfs.c	/^balloc(int used)$/;"	f
base	user/umalloc.c	/^static Header base;$/;"	v	file:
bb0	user/grind.asm	/^     bb0:	00054783          	lbu	a5,0(a0)$/;"	l
bb0	user/sh.asm	/^     bb0:	0505                	addi	a0,a0,1$/;"	l
bb2	user/sh.asm	/^     bb2:	87aa                	mv	a5,a0$/;"	l
bb2	user/usertests.asm	/^     bb2:	1ea50513          	addi	a0,a0,490 # 5d98 <malloc+0x5ec>$/;"	l
bb4	user/grind.asm	/^     bb4:	fbe5                	bnez	a5,ba4 <strcmp+0xc>$/;"	l
bb4	user/sh.asm	/^     bb4:	4685                	li	a3,1$/;"	l
bb6	user/grind.asm	/^     bb6:	0005c503          	lbu	a0,0(a1)$/;"	l
bb6	user/sh.asm	/^     bb6:	9e89                	subw	a3,a3,a0$/;"	l
bb6	user/usertests.asm	/^     bb6:	00004097          	auipc	ra,0x4$/;"	l
bb8	user/sh.asm	/^     bb8:	00f6853b          	addw	a0,a3,a5$/;"	l
bba	user/grind.asm	/^     bba:	40a7853b          	subw	a0,a5,a0$/;"	l
bba	user/usertests.asm	/^     bba:	7f4080e7          	jalr	2036(ra) # 53aa <open>$/;"	l
bbc	user/sh.asm	/^     bbc:	0785                	addi	a5,a5,1$/;"	l
bbe	user/grind.asm	/^     bbe:	6422                	ld	s0,8(sp)$/;"	l
bbe	user/sh.asm	/^     bbe:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bbe	user/usertests.asm	/^     bbe:	84aa                	mv	s1,a0$/;"	l
bc	user/alarmtest.asm	/^  bc:	f822                	sd	s0,48(sp)$/;"	l
bc	user/bttest.asm	/^  bc:	00f58763          	beq	a1,a5,ca <strchr+0x1a>$/;"	l
bc	user/call.asm	/^  bc:	87aa                	mv	a5,a0$/;"	l
bc	user/echo.asm	/^  bc:	fbe5                	bnez	a5,ac <strcmp+0xc>$/;"	l
bc	user/forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	user/grind.asm	/^      bc:	cd11                	beqz	a0,d8 <go+0x60>$/;"	l
bc	user/init.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	user/kill.asm	/^  bc:	4685                	li	a3,1$/;"	l
bc	user/ln.asm	/^  bc:	00f6853b          	addw	a0,a3,a5$/;"	l
bc	user/ls.asm	/^  bc:	26813023          	sd	s0,608(sp)$/;"	l
bc	user/mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/usertests.asm	/^      bc:	00005097          	auipc	ra,0x5$/;"	l
bc	user/zombie.asm	/^  bc:	8082                	ret$/;"	l
bc0	user/grind.asm	/^     bc0:	0141                	addi	sp,sp,16$/;"	l
bc0	user/usertests.asm	/^     bc0:	0c054863          	bltz	a0,c90 <unlinkread+0x12a>$/;"	l
bc2	user/grind.asm	/^     bc2:	8082                	ret$/;"	l
bc2	user/sh.asm	/^     bc2:	fb7d                	bnez	a4,bb8 <strlen+0x14>$/;"	l
bc4	user/grind.asm	/^     bc4:	1141                	addi	sp,sp,-16$/;"	l
bc4	user/sh.asm	/^     bc4:	6422                	ld	s0,8(sp)$/;"	l
bc4	user/usertests.asm	/^     bc4:	00005517          	auipc	a0,0x5$/;"	l
bc6	user/grind.asm	/^     bc6:	e422                	sd	s0,8(sp)$/;"	l
bc6	user/sh.asm	/^     bc6:	0141                	addi	sp,sp,16$/;"	l
bc8	user/grind.asm	/^     bc8:	0800                	addi	s0,sp,16$/;"	l
bc8	user/sh.asm	/^     bc8:	8082                	ret$/;"	l
bc8	user/usertests.asm	/^     bc8:	1d450513          	addi	a0,a0,468 # 5d98 <malloc+0x5ec>$/;"	l
bca	user/grind.asm	/^     bca:	00054783          	lbu	a5,0(a0)$/;"	l
bca	user/sh.asm	/^     bca:	4501                	li	a0,0$/;"	l
bcache	kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon7
bcc	user/sh.asm	/^     bcc:	bfe5                	j	bc4 <strlen+0x20>$/;"	l
bcc	user/usertests.asm	/^     bcc:	00004097          	auipc	ra,0x4$/;"	l
bce	user/grind.asm	/^     bce:	cf91                	beqz	a5,bea <strlen+0x26>$/;"	l
bce	user/sh.asm	/^     bce:	1141                	addi	sp,sp,-16$/;"	l
bcmd	user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	user/grind.asm	/^     bd0:	0505                	addi	a0,a0,1$/;"	l
bd0	user/sh.asm	/^     bd0:	e422                	sd	s0,8(sp)$/;"	l
bd0	user/usertests.asm	/^     bd0:	7ee080e7          	jalr	2030(ra) # 53ba <unlink>$/;"	l
bd2	user/grind.asm	/^     bd2:	87aa                	mv	a5,a0$/;"	l
bd2	user/sh.asm	/^     bd2:	0800                	addi	s0,sp,16$/;"	l
bd4	user/grind.asm	/^     bd4:	4685                	li	a3,1$/;"	l
bd4	user/sh.asm	/^     bd4:	ca19                	beqz	a2,bea <memset+0x1c>$/;"	l
bd4	user/usertests.asm	/^     bd4:	ed61                	bnez	a0,cac <unlinkread+0x146>$/;"	l
bd6	user/grind.asm	/^     bd6:	9e89                	subw	a3,a3,a0$/;"	l
bd6	user/sh.asm	/^     bd6:	87aa                	mv	a5,a0$/;"	l
bd6	user/usertests.asm	/^     bd6:	20200593          	li	a1,514$/;"	l
bd8	user/grind.asm	/^     bd8:	00f6853b          	addw	a0,a3,a5$/;"	l
bd8	user/sh.asm	/^     bd8:	1602                	slli	a2,a2,0x20$/;"	l
bda	user/sh.asm	/^     bda:	9201                	srli	a2,a2,0x20$/;"	l
bda	user/usertests.asm	/^     bda:	00005517          	auipc	a0,0x5$/;"	l
bdc	user/grind.asm	/^     bdc:	0785                	addi	a5,a5,1$/;"	l
bdc	user/sh.asm	/^     bdc:	00a60733          	add	a4,a2,a0$/;"	l
bde	user/grind.asm	/^     bde:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bde	user/usertests.asm	/^     bde:	1be50513          	addi	a0,a0,446 # 5d98 <malloc+0x5ec>$/;"	l
be	user/alarmtest.asm	/^  be:	f426                	sd	s1,40(sp)$/;"	l
be	user/call.asm	/^  be:	1602                	slli	a2,a2,0x20$/;"	l
be	user/cat.asm	/^  be:	310080e7          	jalr	784(ra) # 3ca <open>$/;"	l
be	user/echo.asm	/^  be:	0005c503          	lbu	a0,0(a1)$/;"	l
be	user/grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/grind.asm	/^      be:	00001517          	auipc	a0,0x1$/;"	l
be	user/init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/kill.asm	/^  be:	9e89                	subw	a3,a3,a0$/;"	l
be	user/mkdir.asm	/^  be:	8082                	ret$/;"	l
be	user/rm.asm	/^  be:	8082                	ret$/;"	l
be	user/sh.asm	/^      be:	00056783          	lwu	a5,0(a0)$/;"	l
be	user/stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/zombie.asm	/^  be:	1141                	addi	sp,sp,-16$/;"	l
be0	user/sh.asm	/^     be0:	00b78023          	sb	a1,0(a5)$/;"	l
be2	user/grind.asm	/^     be2:	fb7d                	bnez	a4,bd8 <strlen+0x14>$/;"	l
be2	user/usertests.asm	/^     be2:	00004097          	auipc	ra,0x4$/;"	l
be4	user/grind.asm	/^     be4:	6422                	ld	s0,8(sp)$/;"	l
be4	user/sh.asm	/^     be4:	0785                	addi	a5,a5,1$/;"	l
be6	user/grind.asm	/^     be6:	0141                	addi	sp,sp,16$/;"	l
be6	user/sh.asm	/^     be6:	fee79de3          	bne	a5,a4,be0 <memset+0x12>$/;"	l
be6	user/usertests.asm	/^     be6:	7c8080e7          	jalr	1992(ra) # 53aa <open>$/;"	l
be8	user/grind.asm	/^     be8:	8082                	ret$/;"	l
bea	user/grind.asm	/^     bea:	4501                	li	a0,0$/;"	l
bea	user/sh.asm	/^     bea:	6422                	ld	s0,8(sp)$/;"	l
bea	user/usertests.asm	/^     bea:	892a                	mv	s2,a0$/;"	l
bec	user/grind.asm	/^     bec:	bfe5                	j	be4 <strlen+0x20>$/;"	l
bec	user/sh.asm	/^     bec:	0141                	addi	sp,sp,16$/;"	l
bec	user/usertests.asm	/^     bec:	460d                	li	a2,3$/;"	l
bee	user/grind.asm	/^     bee:	1141                	addi	sp,sp,-16$/;"	l
bee	user/sh.asm	/^     bee:	8082                	ret$/;"	l
bee	user/usertests.asm	/^     bee:	00005597          	auipc	a1,0x5$/;"	l
begin_op	kernel/log.c	/^begin_op(void)$/;"	f
bf0	user/grind.asm	/^     bf0:	e422                	sd	s0,8(sp)$/;"	l
bf0	user/sh.asm	/^     bf0:	1141                	addi	sp,sp,-16$/;"	l
bf2	user/grind.asm	/^     bf2:	0800                	addi	s0,sp,16$/;"	l
bf2	user/sh.asm	/^     bf2:	e422                	sd	s0,8(sp)$/;"	l
bf2	user/usertests.asm	/^     bf2:	22258593          	addi	a1,a1,546 # 5e10 <malloc+0x664>$/;"	l
bf4	user/grind.asm	/^     bf4:	ca19                	beqz	a2,c0a <memset+0x1c>$/;"	l
bf4	user/sh.asm	/^     bf4:	0800                	addi	s0,sp,16$/;"	l
bf6	user/grind.asm	/^     bf6:	87aa                	mv	a5,a0$/;"	l
bf6	user/sh.asm	/^     bf6:	00054783          	lbu	a5,0(a0)$/;"	l
bf6	user/usertests.asm	/^     bf6:	00004097          	auipc	ra,0x4$/;"	l
bf8	user/grind.asm	/^     bf8:	1602                	slli	a2,a2,0x20$/;"	l
bfa	user/grind.asm	/^     bfa:	9201                	srli	a2,a2,0x20$/;"	l
bfa	user/sh.asm	/^     bfa:	cb99                	beqz	a5,c10 <strchr+0x20>$/;"	l
bfa	user/usertests.asm	/^     bfa:	794080e7          	jalr	1940(ra) # 538a <write>$/;"	l
bfc	user/grind.asm	/^     bfc:	00a60733          	add	a4,a2,a0$/;"	l
bfc	user/sh.asm	/^     bfc:	00f58763          	beq	a1,a5,c0a <strchr+0x1a>$/;"	l
bfe	user/usertests.asm	/^     bfe:	854a                	mv	a0,s2$/;"	l
bfree	kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	user/usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	user/usertests.c	/^bigdir(char *s)$/;"	f
bigfile	user/usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	user/usertests.c	/^bigwrite(char *s)$/;"	f
binit	kernel/bio.c	/^binit(void)$/;"	f
block	kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bp	kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	user/alarmtest.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/bttest.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/call.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bpin	kernel/bio.c	/^bpin(struct buf *b) {$/;"	f
bread	kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
brelse	kernel/bio.c	/^brelse(struct buf *b)$/;"	f
bsstest	user/usertests.c	/^bsstest(char *s)$/;"	f
buf	gradelib.py	/^            buf = bytearray()$/;"	v	class:shell_script.setup_call_on_line.context
buf	kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon7	typeref:struct:__anon7::buf	file:
buf	kernel/buf.h	/^struct buf {$/;"	s
buf	kernel/console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon3	file:
buf	user/cat.c	/^char buf[512];$/;"	v
buf	user/grep.c	/^char buf[1024];$/;"	v
buf	user/usertests.c	/^char buf[BUFSZ];$/;"	v
buf	user/wc.c	/^char buf[512];$/;"	v
bunpin	kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f
bwrite	kernel/bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF];$/;"	d
c	kernel/kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	user/alarmtest.asm	/^   c:	d687a783          	lw	a5,-664(a5) # d70 <count>$/;"	l
c	user/call.asm	/^   c:	8082                	ret$/;"	l
c	user/cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	user/grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	user/init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	user/kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	user/ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	user/ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	user/usertests.asm	/^       c:	4505                	li	a0,1$/;"	l
c	user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	user/wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	user/zombie.asm	/^   c:	286080e7          	jalr	646(ra) # 28e <fork>$/;"	l
c0	user/alarmtest.asm	/^  c0:	f04a                	sd	s2,32(sp)$/;"	l
c0	user/bttest.asm	/^  c0:	0505                	addi	a0,a0,1$/;"	l
c0	user/call.asm	/^  c0:	9201                	srli	a2,a2,0x20$/;"	l
c0	user/forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	user/kill.asm	/^  c0:	00f6853b          	addw	a0,a3,a5$/;"	l
c0	user/ln.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	user/ls.asm	/^  c0:	24913c23          	sd	s1,600(sp)$/;"	l
c0	user/mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/usertests.asm	/^      c0:	2d6080e7          	jalr	726(ra) # 5392 <close>$/;"	l
c0	user/zombie.asm	/^  c0:	e422                	sd	s0,8(sp)$/;"	l
c00	user/grind.asm	/^     c00:	00b78023          	sb	a1,0(a5)$/;"	l
c00	user/sh.asm	/^     c00:	0505                	addi	a0,a0,1$/;"	l
c00	user/usertests.asm	/^     c00:	00004097          	auipc	ra,0x4$/;"	l
c02	user/sh.asm	/^     c02:	00054783          	lbu	a5,0(a0)$/;"	l
c04	user/grind.asm	/^     c04:	0785                	addi	a5,a5,1$/;"	l
c04	user/usertests.asm	/^     c04:	792080e7          	jalr	1938(ra) # 5392 <close>$/;"	l
c06	user/grind.asm	/^     c06:	fee79de3          	bne	a5,a4,c00 <memset+0x12>$/;"	l
c06	user/sh.asm	/^     c06:	fbfd                	bnez	a5,bfc <strchr+0xc>$/;"	l
c08	user/sh.asm	/^     c08:	4501                	li	a0,0$/;"	l
c08	user/usertests.asm	/^     c08:	660d                	lui	a2,0x3$/;"	l
c0a	user/grind.asm	/^     c0a:	6422                	ld	s0,8(sp)$/;"	l
c0a	user/sh.asm	/^     c0a:	6422                	ld	s0,8(sp)$/;"	l
c0a	user/usertests.asm	/^     c0a:	0000b597          	auipc	a1,0xb$/;"	l
c0c	user/grind.asm	/^     c0c:	0141                	addi	sp,sp,16$/;"	l
c0c	user/sh.asm	/^     c0c:	0141                	addi	sp,sp,16$/;"	l
c0e	user/grind.asm	/^     c0e:	8082                	ret$/;"	l
c0e	user/sh.asm	/^     c0e:	8082                	ret$/;"	l
c0e	user/usertests.asm	/^     c0e:	b8658593          	addi	a1,a1,-1146 # b790 <buf>$/;"	l
c10	user/grind.asm	/^     c10:	1141                	addi	sp,sp,-16$/;"	l
c10	user/sh.asm	/^     c10:	4501                	li	a0,0$/;"	l
c12	user/grind.asm	/^     c12:	e422                	sd	s0,8(sp)$/;"	l
c12	user/sh.asm	/^     c12:	bfe5                	j	c0a <strchr+0x1a>$/;"	l
c12	user/usertests.asm	/^     c12:	8526                	mv	a0,s1$/;"	l
c14	user/grind.asm	/^     c14:	0800                	addi	s0,sp,16$/;"	l
c14	user/sh.asm	/^     c14:	711d                	addi	sp,sp,-96$/;"	l
c14	user/usertests.asm	/^     c14:	00004097          	auipc	ra,0x4$/;"	l
c16	user/grind.asm	/^     c16:	00054783          	lbu	a5,0(a0)$/;"	l
c16	user/sh.asm	/^     c16:	ec86                	sd	ra,88(sp)$/;"	l
c18	user/sh.asm	/^     c18:	e8a2                	sd	s0,80(sp)$/;"	l
c18	user/usertests.asm	/^     c18:	76e080e7          	jalr	1902(ra) # 5382 <read>$/;"	l
c1a	user/grind.asm	/^     c1a:	cb99                	beqz	a5,c30 <strchr+0x20>$/;"	l
c1a	user/sh.asm	/^     c1a:	e4a6                	sd	s1,72(sp)$/;"	l
c1c	user/grind.asm	/^     c1c:	00f58763          	beq	a1,a5,c2a <strchr+0x1a>$/;"	l
c1c	user/sh.asm	/^     c1c:	e0ca                	sd	s2,64(sp)$/;"	l
c1c	user/usertests.asm	/^     c1c:	4795                	li	a5,5$/;"	l
c1e	user/sh.asm	/^     c1e:	fc4e                	sd	s3,56(sp)$/;"	l
c1e	user/usertests.asm	/^     c1e:	0af51563          	bne	a0,a5,cc8 <unlinkread+0x162>$/;"	l
c2	user/alarmtest.asm	/^  c2:	ec4e                	sd	s3,24(sp)$/;"	l
c2	user/bttest.asm	/^  c2:	00054783          	lbu	a5,0(a0)$/;"	l
c2	user/call.asm	/^  c2:	00a60733          	add	a4,a2,a0$/;"	l
c2	user/cat.asm	/^  c2:	84aa                	mv	s1,a0$/;"	l
c2	user/echo.asm	/^  c2:	40a7853b          	subw	a0,a5,a0$/;"	l
c2	user/grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	user/grind.asm	/^      c2:	25a50513          	addi	a0,a0,602 # 1318 <malloc+0xee>$/;"	l
c2	user/init.asm	/^  c2:	2a6080e7          	jalr	678(ra) # 364 <exit>$/;"	l
c2	user/ln.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	user/mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/sh.asm	/^      c2:	078a                	slli	a5,a5,0x2$/;"	l
c2	user/stressfs.asm	/^  c2:	644080e7          	jalr	1604(ra) # 702 <printf>$/;"	l
c2	user/wc.asm	/^  c2:	6ce080e7          	jalr	1742(ra) # 78c <printf>$/;"	l
c2	user/zombie.asm	/^  c2:	0800                	addi	s0,sp,16$/;"	l
c20	user/grind.asm	/^     c20:	0505                	addi	a0,a0,1$/;"	l
c20	user/sh.asm	/^     c20:	f852                	sd	s4,48(sp)$/;"	l
c22	user/grind.asm	/^     c22:	00054783          	lbu	a5,0(a0)$/;"	l
c22	user/sh.asm	/^     c22:	f456                	sd	s5,40(sp)$/;"	l
c22	user/usertests.asm	/^     c22:	0000b717          	auipc	a4,0xb$/;"	l
c24	user/sh.asm	/^     c24:	f05a                	sd	s6,32(sp)$/;"	l
c26	user/grind.asm	/^     c26:	fbfd                	bnez	a5,c1c <strchr+0xc>$/;"	l
c26	user/sh.asm	/^     c26:	ec5e                	sd	s7,24(sp)$/;"	l
c26	user/usertests.asm	/^     c26:	b6e74703          	lbu	a4,-1170(a4) # b790 <buf>$/;"	l
c28	user/grind.asm	/^     c28:	4501                	li	a0,0$/;"	l
c28	user/sh.asm	/^     c28:	1080                	addi	s0,sp,96$/;"	l
c2a	user/grind.asm	/^     c2a:	6422                	ld	s0,8(sp)$/;"	l
c2a	user/sh.asm	/^     c2a:	8baa                	mv	s7,a0$/;"	l
c2a	user/usertests.asm	/^     c2a:	06800793          	li	a5,104$/;"	l
c2c	user/grind.asm	/^     c2c:	0141                	addi	sp,sp,16$/;"	l
c2c	user/sh.asm	/^     c2c:	8a2e                	mv	s4,a1$/;"	l
c2e	user/grind.asm	/^     c2e:	8082                	ret$/;"	l
c2e	user/sh.asm	/^     c2e:	892a                	mv	s2,a0$/;"	l
c2e	user/usertests.asm	/^     c2e:	0af71b63          	bne	a4,a5,ce4 <unlinkread+0x17e>$/;"	l
c30	user/grind.asm	/^     c30:	4501                	li	a0,0$/;"	l
c30	user/sh.asm	/^     c30:	4481                	li	s1,0$/;"	l
c32	user/grind.asm	/^     c32:	bfe5                	j	c2a <strchr+0x1a>$/;"	l
c32	user/sh.asm	/^     c32:	4aa9                	li	s5,10$/;"	l
c32	user/usertests.asm	/^     c32:	4629                	li	a2,10$/;"	l
c34	user/grind.asm	/^     c34:	711d                	addi	sp,sp,-96$/;"	l
c34	user/sh.asm	/^     c34:	4b35                	li	s6,13$/;"	l
c34	user/usertests.asm	/^     c34:	0000b597          	auipc	a1,0xb$/;"	l
c36	user/grind.asm	/^     c36:	ec86                	sd	ra,88(sp)$/;"	l
c36	user/sh.asm	/^     c36:	89a6                	mv	s3,s1$/;"	l
c38	user/grind.asm	/^     c38:	e8a2                	sd	s0,80(sp)$/;"	l
c38	user/sh.asm	/^     c38:	2485                	addiw	s1,s1,1$/;"	l
c38	user/usertests.asm	/^     c38:	b5c58593          	addi	a1,a1,-1188 # b790 <buf>$/;"	l
c3a	user/grind.asm	/^     c3a:	e4a6                	sd	s1,72(sp)$/;"	l
c3a	user/sh.asm	/^     c3a:	0344d863          	bge	s1,s4,c6a <gets+0x56>$/;"	l
c3c	user/grind.asm	/^     c3c:	e0ca                	sd	s2,64(sp)$/;"	l
c3c	user/usertests.asm	/^     c3c:	8526                	mv	a0,s1$/;"	l
c3e	user/grind.asm	/^     c3e:	fc4e                	sd	s3,56(sp)$/;"	l
c3e	user/sh.asm	/^     c3e:	4605                	li	a2,1$/;"	l
c3e	user/usertests.asm	/^     c3e:	00004097          	auipc	ra,0x4$/;"	l
c4	user/alarmtest.asm	/^  c4:	e852                	sd	s4,16(sp)$/;"	l
c4	user/cat.asm	/^  c4:	02054d63          	bltz	a0,fe <main+0x74>$/;"	l
c4	user/forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	user/kill.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	user/ls.asm	/^  c4:	25213823          	sd	s2,592(sp)$/;"	l
c4	user/mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/sh.asm	/^      c4:	00001717          	auipc	a4,0x1$/;"	l
c4	user/usertests.asm	/^      c4:	4581                	li	a1,0$/;"	l
c4	user/zombie.asm	/^  c4:	00054783          	lbu	a5,0(a0)$/;"	l
c40	user/grind.asm	/^     c40:	f852                	sd	s4,48(sp)$/;"	l
c40	user/sh.asm	/^     c40:	faf40593          	addi	a1,s0,-81$/;"	l
c42	user/grind.asm	/^     c42:	f456                	sd	s5,40(sp)$/;"	l
c42	user/usertests.asm	/^     c42:	74c080e7          	jalr	1868(ra) # 538a <write>$/;"	l
c44	user/grind.asm	/^     c44:	f05a                	sd	s6,32(sp)$/;"	l
c44	user/sh.asm	/^     c44:	4501                	li	a0,0$/;"	l
c46	user/grind.asm	/^     c46:	ec5e                	sd	s7,24(sp)$/;"	l
c46	user/sh.asm	/^     c46:	00000097          	auipc	ra,0x0$/;"	l
c46	user/usertests.asm	/^     c46:	47a9                	li	a5,10$/;"	l
c48	user/grind.asm	/^     c48:	1080                	addi	s0,sp,96$/;"	l
c48	user/usertests.asm	/^     c48:	0af51c63          	bne	a0,a5,d00 <unlinkread+0x19a>$/;"	l
c4a	user/grind.asm	/^     c4a:	8baa                	mv	s7,a0$/;"	l
c4a	user/sh.asm	/^     c4a:	19a080e7          	jalr	410(ra) # de0 <read>$/;"	l
c4c	user/grind.asm	/^     c4c:	8a2e                	mv	s4,a1$/;"	l
c4c	user/usertests.asm	/^     c4c:	8526                	mv	a0,s1$/;"	l
c4e	user/grind.asm	/^     c4e:	892a                	mv	s2,a0$/;"	l
c4e	user/sh.asm	/^     c4e:	00a05e63          	blez	a0,c6a <gets+0x56>$/;"	l
c4e	user/usertests.asm	/^     c4e:	00004097          	auipc	ra,0x4$/;"	l
c50	user/grind.asm	/^     c50:	4481                	li	s1,0$/;"	l
c52	user/grind.asm	/^     c52:	4aa9                	li	s5,10$/;"	l
c52	user/sh.asm	/^     c52:	faf44783          	lbu	a5,-81(s0)$/;"	l
c52	user/usertests.asm	/^     c52:	744080e7          	jalr	1860(ra) # 5392 <close>$/;"	l
c54	user/grind.asm	/^     c54:	4b35                	li	s6,13$/;"	l
c56	user/grind.asm	/^     c56:	89a6                	mv	s3,s1$/;"	l
c56	user/sh.asm	/^     c56:	00f90023          	sb	a5,0(s2)$/;"	l
c56	user/usertests.asm	/^     c56:	00005517          	auipc	a0,0x5$/;"	l
c58	user/grind.asm	/^     c58:	2485                	addiw	s1,s1,1$/;"	l
c5a	user/grind.asm	/^     c5a:	0344d863          	bge	s1,s4,c8a <gets+0x56>$/;"	l
c5a	user/sh.asm	/^     c5a:	01578763          	beq	a5,s5,c68 <gets+0x54>$/;"	l
c5a	user/usertests.asm	/^     c5a:	14250513          	addi	a0,a0,322 # 5d98 <malloc+0x5ec>$/;"	l
c5e	user/grind.asm	/^     c5e:	4605                	li	a2,1$/;"	l
c5e	user/sh.asm	/^     c5e:	0905                	addi	s2,s2,1$/;"	l
c5e	user/usertests.asm	/^     c5e:	00004097          	auipc	ra,0x4$/;"	l
c6	user/alarmtest.asm	/^  c6:	e456                	sd	s5,8(sp)$/;"	l
c6	user/bttest.asm	/^  c6:	fbfd                	bnez	a5,bc <strchr+0xc>$/;"	l
c6	user/call.asm	/^  c6:	00b78023          	sb	a1,0(a5)$/;"	l
c6	user/echo.asm	/^  c6:	6422                	ld	s0,8(sp)$/;"	l
c6	user/forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	user/grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	user/grind.asm	/^      c6:	00001097          	auipc	ra,0x1$/;"	l
c6	user/init.asm	/^  c6:	00001597          	auipc	a1,0x1$/;"	l
c6	user/kill.asm	/^  c6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c6	user/ln.asm	/^  c6:	fb7d                	bnez	a4,bc <strlen+0x14>$/;"	l
c6	user/mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	user/usertests.asm	/^      c6:	00006517          	auipc	a0,0x6$/;"	l
c6	user/wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c60	user/grind.asm	/^     c60:	faf40593          	addi	a1,s0,-81$/;"	l
c60	user/sh.asm	/^     c60:	fd679be3          	bne	a5,s6,c36 <gets+0x22>$/;"	l
c62	user/usertests.asm	/^     c62:	75c080e7          	jalr	1884(ra) # 53ba <unlink>$/;"	l
c64	user/grind.asm	/^     c64:	4501                	li	a0,0$/;"	l
c64	user/sh.asm	/^     c64:	89a6                	mv	s3,s1$/;"	l
c66	user/grind.asm	/^     c66:	00000097          	auipc	ra,0x0$/;"	l
c66	user/sh.asm	/^     c66:	a011                	j	c6a <gets+0x56>$/;"	l
c66	user/usertests.asm	/^     c66:	70a2                	ld	ra,40(sp)$/;"	l
c68	user/sh.asm	/^     c68:	89a6                	mv	s3,s1$/;"	l
c68	user/usertests.asm	/^     c68:	7402                	ld	s0,32(sp)$/;"	l
c6a	user/grind.asm	/^     c6a:	19a080e7          	jalr	410(ra) # e00 <read>$/;"	l
c6a	user/sh.asm	/^     c6a:	99de                	add	s3,s3,s7$/;"	l
c6a	user/usertests.asm	/^     c6a:	64e2                	ld	s1,24(sp)$/;"	l
c6c	user/sh.asm	/^     c6c:	00098023          	sb	zero,0(s3)$/;"	l
c6c	user/usertests.asm	/^     c6c:	6942                	ld	s2,16(sp)$/;"	l
c6e	user/grind.asm	/^     c6e:	00a05e63          	blez	a0,c8a <gets+0x56>$/;"	l
c6e	user/usertests.asm	/^     c6e:	69a2                	ld	s3,8(sp)$/;"	l
c70	user/sh.asm	/^     c70:	855e                	mv	a0,s7$/;"	l
c70	user/usertests.asm	/^     c70:	6145                	addi	sp,sp,48$/;"	l
c72	user/grind.asm	/^     c72:	faf44783          	lbu	a5,-81(s0)$/;"	l
c72	user/sh.asm	/^     c72:	60e6                	ld	ra,88(sp)$/;"	l
c72	user/usertests.asm	/^     c72:	8082                	ret$/;"	l
c74	user/sh.asm	/^     c74:	6446                	ld	s0,80(sp)$/;"	l
c74	user/usertests.asm	/^     c74:	85ce                	mv	a1,s3$/;"	l
c76	user/grind.asm	/^     c76:	00f90023          	sb	a5,0(s2)$/;"	l
c76	user/sh.asm	/^     c76:	64a6                	ld	s1,72(sp)$/;"	l
c76	user/usertests.asm	/^     c76:	00005517          	auipc	a0,0x5$/;"	l
c78	user/sh.asm	/^     c78:	6906                	ld	s2,64(sp)$/;"	l
c7a	user/grind.asm	/^     c7a:	01578763          	beq	a5,s5,c88 <gets+0x54>$/;"	l
c7a	user/sh.asm	/^     c7a:	79e2                	ld	s3,56(sp)$/;"	l
c7a	user/usertests.asm	/^     c7a:	13250513          	addi	a0,a0,306 # 5da8 <malloc+0x5fc>$/;"	l
c7c	user/sh.asm	/^     c7c:	7a42                	ld	s4,48(sp)$/;"	l
c7e	user/grind.asm	/^     c7e:	0905                	addi	s2,s2,1$/;"	l
c7e	user/sh.asm	/^     c7e:	7aa2                	ld	s5,40(sp)$/;"	l
c7e	user/usertests.asm	/^     c7e:	00005097          	auipc	ra,0x5$/;"	l
c8	user/alarmtest.asm	/^  c8:	0080                	addi	s0,sp,64$/;"	l
c8	user/bttest.asm	/^  c8:	4501                	li	a0,0$/;"	l
c8	user/cat.asm	/^  c8:	00000097          	auipc	ra,0x0$/;"	l
c8	user/echo.asm	/^  c8:	0141                	addi	sp,sp,16$/;"	l
c8	user/forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	user/grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	user/ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	user/ls.asm	/^  c8:	25313423          	sd	s3,584(sp)$/;"	l
c8	user/sh.asm	/^      c8:	33c70713          	addi	a4,a4,828 # 1400 <malloc+0x1f6>$/;"	l
c8	user/stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	user/wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	user/zombie.asm	/^  c8:	cb99                	beqz	a5,de <strchr+0x20>$/;"	l
c80	user/grind.asm	/^     c80:	fd679be3          	bne	a5,s6,c56 <gets+0x22>$/;"	l
c80	user/sh.asm	/^     c80:	7b02                	ld	s6,32(sp)$/;"	l
c82	user/sh.asm	/^     c82:	6be2                	ld	s7,24(sp)$/;"	l
c82	user/usertests.asm	/^     c82:	a76080e7          	jalr	-1418(ra) # 56f4 <printf>$/;"	l
c84	user/grind.asm	/^     c84:	89a6                	mv	s3,s1$/;"	l
c84	user/sh.asm	/^     c84:	6125                	addi	sp,sp,96$/;"	l
c86	user/grind.asm	/^     c86:	a011                	j	c8a <gets+0x56>$/;"	l
c86	user/sh.asm	/^     c86:	8082                	ret$/;"	l
c86	user/usertests.asm	/^     c86:	4505                	li	a0,1$/;"	l
c88	user/grind.asm	/^     c88:	89a6                	mv	s3,s1$/;"	l
c88	user/sh.asm	/^     c88:	1101                	addi	sp,sp,-32$/;"	l
c88	user/usertests.asm	/^     c88:	00004097          	auipc	ra,0x4$/;"	l
c8a	user/grind.asm	/^     c8a:	99de                	add	s3,s3,s7$/;"	l
c8a	user/sh.asm	/^     c8a:	ec06                	sd	ra,24(sp)$/;"	l
c8c	user/grind.asm	/^     c8c:	00098023          	sb	zero,0(s3)$/;"	l
c8c	user/sh.asm	/^     c8c:	e822                	sd	s0,16(sp)$/;"	l
c8c	user/usertests.asm	/^     c8c:	6e2080e7          	jalr	1762(ra) # 536a <exit>$/;"	l
c8e	user/sh.asm	/^     c8e:	e426                	sd	s1,8(sp)$/;"	l
c90	user/grind.asm	/^     c90:	855e                	mv	a0,s7$/;"	l
c90	user/sh.asm	/^     c90:	e04a                	sd	s2,0(sp)$/;"	l
c90	user/usertests.asm	/^     c90:	85ce                	mv	a1,s3$/;"	l
c92	user/grind.asm	/^     c92:	60e6                	ld	ra,88(sp)$/;"	l
c92	user/sh.asm	/^     c92:	1000                	addi	s0,sp,32$/;"	l
c92	user/usertests.asm	/^     c92:	00005517          	auipc	a0,0x5$/;"	l
c94	user/grind.asm	/^     c94:	6446                	ld	s0,80(sp)$/;"	l
c94	user/sh.asm	/^     c94:	892e                	mv	s2,a1$/;"	l
c96	user/grind.asm	/^     c96:	64a6                	ld	s1,72(sp)$/;"	l
c96	user/sh.asm	/^     c96:	4581                	li	a1,0$/;"	l
c96	user/usertests.asm	/^     c96:	13e50513          	addi	a0,a0,318 # 5dd0 <malloc+0x624>$/;"	l
c98	user/grind.asm	/^     c98:	6906                	ld	s2,64(sp)$/;"	l
c98	user/sh.asm	/^     c98:	00000097          	auipc	ra,0x0$/;"	l
c9a	user/grind.asm	/^     c9a:	79e2                	ld	s3,56(sp)$/;"	l
c9a	user/usertests.asm	/^     c9a:	00005097          	auipc	ra,0x5$/;"	l
c9c	user/grind.asm	/^     c9c:	7a42                	ld	s4,48(sp)$/;"	l
c9c	user/sh.asm	/^     c9c:	170080e7          	jalr	368(ra) # e08 <open>$/;"	l
c9e	user/grind.asm	/^     c9e:	7aa2                	ld	s5,40(sp)$/;"	l
c9e	user/usertests.asm	/^     c9e:	a5a080e7          	jalr	-1446(ra) # 56f4 <printf>$/;"	l
ca	user/alarmtest.asm	/^  ca:	00001517          	auipc	a0,0x1$/;"	l
ca	user/bttest.asm	/^  ca:	6422                	ld	s0,8(sp)$/;"	l
ca	user/call.asm	/^  ca:	0785                	addi	a5,a5,1$/;"	l
ca	user/echo.asm	/^  ca:	8082                	ret$/;"	l
ca	user/forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	user/grep.asm	/^  ca:	8082                	ret$/;"	l
ca	user/grind.asm	/^      ca:	0ac080e7          	jalr	172(ra) # 1172 <printf>$/;"	l
ca	user/init.asm	/^  ca:	8ba58593          	addi	a1,a1,-1862 # 980 <argv>$/;"	l
ca	user/kill.asm	/^  ca:	fb7d                	bnez	a4,c0 <strlen+0x14>$/;"	l
ca	user/ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	user/mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/usertests.asm	/^      ca:	82a50513          	addi	a0,a0,-2006 # 58f0 <malloc+0x144>$/;"	l
ca	user/wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca	user/zombie.asm	/^  ca:	00f58763          	beq	a1,a5,d8 <strchr+0x1a>$/;"	l
ca0	user/grind.asm	/^     ca0:	7b02                	ld	s6,32(sp)$/;"	l
ca0	user/sh.asm	/^     ca0:	02054563          	bltz	a0,cca <stat+0x42>$/;"	l
ca2	user/grind.asm	/^     ca2:	6be2                	ld	s7,24(sp)$/;"	l
ca2	user/usertests.asm	/^     ca2:	4505                	li	a0,1$/;"	l
ca4	user/grind.asm	/^     ca4:	6125                	addi	sp,sp,96$/;"	l
ca4	user/sh.asm	/^     ca4:	84aa                	mv	s1,a0$/;"	l
ca4	user/usertests.asm	/^     ca4:	00004097          	auipc	ra,0x4$/;"	l
ca6	user/grind.asm	/^     ca6:	8082                	ret$/;"	l
ca6	user/sh.asm	/^     ca6:	85ca                	mv	a1,s2$/;"	l
ca8	user/grind.asm	/^     ca8:	1101                	addi	sp,sp,-32$/;"	l
ca8	user/sh.asm	/^     ca8:	00000097          	auipc	ra,0x0$/;"	l
ca8	user/usertests.asm	/^     ca8:	6c6080e7          	jalr	1734(ra) # 536a <exit>$/;"	l
caa	user/grind.asm	/^     caa:	ec06                	sd	ra,24(sp)$/;"	l
cac	user/grind.asm	/^     cac:	e822                	sd	s0,16(sp)$/;"	l
cac	user/sh.asm	/^     cac:	178080e7          	jalr	376(ra) # e20 <fstat>$/;"	l
cac	user/usertests.asm	/^     cac:	85ce                	mv	a1,s3$/;"	l
cae	user/grind.asm	/^     cae:	e426                	sd	s1,8(sp)$/;"	l
cae	user/usertests.asm	/^     cae:	00005517          	auipc	a0,0x5$/;"	l
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int fd)$/;"	f
cb0	user/grind.asm	/^     cb0:	e04a                	sd	s2,0(sp)$/;"	l
cb0	user/sh.asm	/^     cb0:	892a                	mv	s2,a0$/;"	l
cb2	user/grind.asm	/^     cb2:	1000                	addi	s0,sp,32$/;"	l
cb2	user/sh.asm	/^     cb2:	8526                	mv	a0,s1$/;"	l
cb2	user/usertests.asm	/^     cb2:	14250513          	addi	a0,a0,322 # 5df0 <malloc+0x644>$/;"	l
cb4	user/grind.asm	/^     cb4:	892e                	mv	s2,a1$/;"	l
cb4	user/sh.asm	/^     cb4:	00000097          	auipc	ra,0x0$/;"	l
cb6	user/grind.asm	/^     cb6:	4581                	li	a1,0$/;"	l
cb6	user/usertests.asm	/^     cb6:	00005097          	auipc	ra,0x5$/;"	l
cb8	user/grind.asm	/^     cb8:	00000097          	auipc	ra,0x0$/;"	l
cb8	user/sh.asm	/^     cb8:	13c080e7          	jalr	316(ra) # df0 <close>$/;"	l
cba	user/usertests.asm	/^     cba:	a3e080e7          	jalr	-1474(ra) # 56f4 <printf>$/;"	l
cbc	user/grind.asm	/^     cbc:	170080e7          	jalr	368(ra) # e28 <open>$/;"	l
cbc	user/sh.asm	/^     cbc:	854a                	mv	a0,s2$/;"	l
cbe	user/sh.asm	/^     cbe:	60e2                	ld	ra,24(sp)$/;"	l
cbe	user/usertests.asm	/^     cbe:	4505                	li	a0,1$/;"	l
cbuf	kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	user/alarmtest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/bttest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/bttest.asm	/^  cc:	0141                	addi	sp,sp,16$/;"	l
cc	user/call.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/call.asm	/^  cc:	fee79de3          	bne	a5,a4,c6 <memset+0x12>$/;"	l
cc	user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^  cc:	f38080e7          	jalr	-200(ra) # 0 <cat>$/;"	l
cc	user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/echo.asm	/^  cc:	1141                	addi	sp,sp,-16$/;"	l
cc	user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	user/grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^  cc:	6422                	ld	s0,8(sp)$/;"	l
cc	user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ln.asm	/^  cc:	8082                	ret$/;"	l
cc	user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ls.asm	/^  cc:	25413023          	sd	s4,576(sp)$/;"	l
cc	user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/sh.asm	/^      cc:	97ba                	add	a5,a5,a4$/;"	l
cc	user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	user/usertests.asm	/^    cc = 1;$/;"	d
cc	user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	user/grind.asm	/^     cc0:	02054563          	bltz	a0,cea <stat+0x42>$/;"	l
cc0	user/sh.asm	/^     cc0:	6442                	ld	s0,16(sp)$/;"	l
cc0	user/usertests.asm	/^     cc0:	00004097          	auipc	ra,0x4$/;"	l
cc2	user/sh.asm	/^     cc2:	64a2                	ld	s1,8(sp)$/;"	l
cc4	user/grind.asm	/^     cc4:	84aa                	mv	s1,a0$/;"	l
cc4	user/sh.asm	/^     cc4:	6902                	ld	s2,0(sp)$/;"	l
cc4	user/usertests.asm	/^     cc4:	6aa080e7          	jalr	1706(ra) # 536a <exit>$/;"	l
cc6	user/grind.asm	/^     cc6:	85ca                	mv	a1,s2$/;"	l
cc6	user/sh.asm	/^     cc6:	6105                	addi	sp,sp,32$/;"	l
cc8	user/grind.asm	/^     cc8:	00000097          	auipc	ra,0x0$/;"	l
cc8	user/sh.asm	/^     cc8:	8082                	ret$/;"	l
cc8	user/usertests.asm	/^     cc8:	85ce                	mv	a1,s3$/;"	l
cca	user/sh.asm	/^     cca:	597d                	li	s2,-1$/;"	l
cca	user/usertests.asm	/^     cca:	00005517          	auipc	a0,0x5$/;"	l
ccc	user/grind.asm	/^     ccc:	178080e7          	jalr	376(ra) # e40 <fstat>$/;"	l
ccc	user/sh.asm	/^     ccc:	bfc5                	j	cbc <stat+0x34>$/;"	l
cce	user/sh.asm	/^     cce:	1141                	addi	sp,sp,-16$/;"	l
cce	user/usertests.asm	/^     cce:	14e50513          	addi	a0,a0,334 # 5e18 <malloc+0x66c>$/;"	l
cd0	user/grind.asm	/^     cd0:	892a                	mv	s2,a0$/;"	l
cd0	user/sh.asm	/^     cd0:	e422                	sd	s0,8(sp)$/;"	l
cd2	user/grind.asm	/^     cd2:	8526                	mv	a0,s1$/;"	l
cd2	user/sh.asm	/^     cd2:	0800                	addi	s0,sp,16$/;"	l
cd2	user/usertests.asm	/^     cd2:	00005097          	auipc	ra,0x5$/;"	l
cd4	user/grind.asm	/^     cd4:	00000097          	auipc	ra,0x0$/;"	l
cd4	user/sh.asm	/^     cd4:	00054683          	lbu	a3,0(a0)$/;"	l
cd6	user/usertests.asm	/^     cd6:	a22080e7          	jalr	-1502(ra) # 56f4 <printf>$/;"	l
cd8	user/grind.asm	/^     cd8:	13c080e7          	jalr	316(ra) # e10 <close>$/;"	l
cd8	user/sh.asm	/^     cd8:	fd06879b          	addiw	a5,a3,-48$/;"	l
cda	user/usertests.asm	/^     cda:	4505                	li	a0,1$/;"	l
cdc	user/grind.asm	/^     cdc:	854a                	mv	a0,s2$/;"	l
cdc	user/sh.asm	/^     cdc:	0ff7f793          	zext.b	a5,a5$/;"	l
cdc	user/usertests.asm	/^     cdc:	00004097          	auipc	ra,0x4$/;"	l
cde	user/grind.asm	/^     cde:	60e2                	ld	ra,24(sp)$/;"	l
ce	user/alarmtest.asm	/^  ce:	ad650513          	addi	a0,a0,-1322 # ba0 <malloc+0x12c>$/;"	l
ce	user/bttest.asm	/^  ce:	8082                	ret$/;"	l
ce	user/echo.asm	/^  ce:	e422                	sd	s0,8(sp)$/;"	l
ce	user/forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	user/grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	user/grind.asm	/^      ce:	4505                	li	a0,1$/;"	l
ce	user/init.asm	/^  ce:	00000517          	auipc	a0,0x0$/;"	l
ce	user/kill.asm	/^  ce:	0141                	addi	sp,sp,16$/;"	l
ce	user/ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	user/mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/sh.asm	/^      ce:	439c                	lw	a5,0(a5)$/;"	l
ce	user/usertests.asm	/^      ce:	00005097          	auipc	ra,0x5$/;"	l
ce	user/wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	user/zombie.asm	/^  ce:	0505                	addi	a0,a0,1$/;"	l
ce0	user/grind.asm	/^     ce0:	6442                	ld	s0,16(sp)$/;"	l
ce0	user/sh.asm	/^     ce0:	4625                	li	a2,9$/;"	l
ce0	user/usertests.asm	/^     ce0:	68e080e7          	jalr	1678(ra) # 536a <exit>$/;"	l
ce2	user/grind.asm	/^     ce2:	64a2                	ld	s1,8(sp)$/;"	l
ce2	user/sh.asm	/^     ce2:	02f66863          	bltu	a2,a5,d12 <atoi+0x44>$/;"	l
ce4	user/grind.asm	/^     ce4:	6902                	ld	s2,0(sp)$/;"	l
ce4	user/usertests.asm	/^     ce4:	85ce                	mv	a1,s3$/;"	l
ce6	user/grind.asm	/^     ce6:	6105                	addi	sp,sp,32$/;"	l
ce6	user/sh.asm	/^     ce6:	872a                	mv	a4,a0$/;"	l
ce6	user/usertests.asm	/^     ce6:	00005517          	auipc	a0,0x5$/;"	l
ce8	user/grind.asm	/^     ce8:	8082                	ret$/;"	l
ce8	user/sh.asm	/^     ce8:	4501                	li	a0,0$/;"	l
cea	user/grind.asm	/^     cea:	597d                	li	s2,-1$/;"	l
cea	user/sh.asm	/^     cea:	0705                	addi	a4,a4,1$/;"	l
cea	user/usertests.asm	/^     cea:	15250513          	addi	a0,a0,338 # 5e38 <malloc+0x68c>$/;"	l
cec	user/grind.asm	/^     cec:	bfc5                	j	cdc <stat+0x34>$/;"	l
cec	user/sh.asm	/^     cec:	0025179b          	slliw	a5,a0,0x2$/;"	l
cee	user/grind.asm	/^     cee:	1141                	addi	sp,sp,-16$/;"	l
cee	user/usertests.asm	/^     cee:	00005097          	auipc	ra,0x5$/;"	l
cf0	user/grind.asm	/^     cf0:	e422                	sd	s0,8(sp)$/;"	l
cf0	user/sh.asm	/^     cf0:	9fa9                	addw	a5,a5,a0$/;"	l
cf2	user/grind.asm	/^     cf2:	0800                	addi	s0,sp,16$/;"	l
cf2	user/sh.asm	/^     cf2:	0017979b          	slliw	a5,a5,0x1$/;"	l
cf2	user/usertests.asm	/^     cf2:	a06080e7          	jalr	-1530(ra) # 56f4 <printf>$/;"	l
cf4	user/grind.asm	/^     cf4:	00054683          	lbu	a3,0(a0)$/;"	l
cf6	user/sh.asm	/^     cf6:	9fb5                	addw	a5,a5,a3$/;"	l
cf6	user/usertests.asm	/^     cf6:	4505                	li	a0,1$/;"	l
cf8	user/grind.asm	/^     cf8:	fd06879b          	addiw	a5,a3,-48$/;"	l
cf8	user/sh.asm	/^     cf8:	fd07851b          	addiw	a0,a5,-48$/;"	l
cf8	user/usertests.asm	/^     cf8:	00004097          	auipc	ra,0x4$/;"	l
cfc	user/grind.asm	/^     cfc:	0ff7f793          	zext.b	a5,a5$/;"	l
cfc	user/sh.asm	/^     cfc:	00074683          	lbu	a3,0(a4)$/;"	l
cfc	user/usertests.asm	/^     cfc:	672080e7          	jalr	1650(ra) # 536a <exit>$/;"	l
ch	kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	user/cat.asm	/^char buf[512];$/;"	l
char	user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	user/wc.asm	/^char buf[512];$/;"	l
chdir	user/alarmtest.asm	/^chdir:$/;"	l
chdir	user/bttest.asm	/^chdir:$/;"	l
chdir	user/call.asm	/^chdir:$/;"	l
chdir	user/cat.asm	/^chdir:$/;"	l
chdir	user/echo.asm	/^chdir:$/;"	l
chdir	user/forktest.asm	/^chdir:$/;"	l
chdir	user/grep.asm	/^chdir:$/;"	l
chdir	user/grind.asm	/^chdir:$/;"	l
chdir	user/init.asm	/^chdir:$/;"	l
chdir	user/kill.asm	/^chdir:$/;"	l
chdir	user/ln.asm	/^chdir:$/;"	l
chdir	user/ls.asm	/^chdir:$/;"	l
chdir	user/mkdir.asm	/^chdir:$/;"	l
chdir	user/rm.asm	/^chdir:$/;"	l
chdir	user/sh.asm	/^chdir:$/;"	l
chdir	user/stressfs.asm	/^chdir:$/;"	l
chdir	user/usertests.asm	/^chdir:$/;"	l
chdir	user/usys.S	/^chdir:$/;"	l
chdir	user/wc.asm	/^chdir:$/;"	l
chdir	user/zombie.asm	/^chdir:$/;"	l
check_answers	gradelib.py	/^def check_answers(file, n=10):$/;"	f
check_time	gradelib.py	/^def check_time():$/;"	f
clockintr	kernel/trap.c	/^clockintr()$/;"	f
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	user/alarmtest.asm	/^close:$/;"	l
close	user/bttest.asm	/^close:$/;"	l
close	user/call.asm	/^close:$/;"	l
close	user/cat.asm	/^close:$/;"	l
close	user/echo.asm	/^close:$/;"	l
close	user/forktest.asm	/^close:$/;"	l
close	user/grep.asm	/^close:$/;"	l
close	user/grind.asm	/^close:$/;"	l
close	user/init.asm	/^close:$/;"	l
close	user/kill.asm	/^close:$/;"	l
close	user/ln.asm	/^close:$/;"	l
close	user/ls.asm	/^close:$/;"	l
close	user/mkdir.asm	/^close:$/;"	l
close	user/rm.asm	/^close:$/;"	l
close	user/sh.asm	/^close:$/;"	l
close	user/stressfs.asm	/^close:$/;"	l
close	user/usertests.asm	/^close:$/;"	l
close	user/usys.S	/^close:$/;"	l
close	user/wc.asm	/^close:$/;"	l
close	user/zombie.asm	/^close:$/;"	l
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
color	gradelib.py	/^def color(name, text):$/;"	f
commit	kernel/log.c	/^commit()$/;"	f	file:
committing	kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	user/usertests.c	/^concreate(char *s)$/;"	f
cons	kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anon3
consoleinit	kernel/console.c	/^consoleinit(void)$/;"	f
consoleintr	kernel/console.c	/^consoleintr(int c)$/;"	f
consoleread	kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f
consolewrite	kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f
consputc	kernel/console.c	/^consputc(int c)$/;"	f
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
context	gradelib.py	/^        class context:$/;"	c	function:shell_script.setup_call_on_line
context	kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	kernel/proc.h	/^  struct context context;     \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:cpu::context
context	kernel/proc.h	/^struct context {$/;"	s
continuous	user/usertests.asm	/^    continuous = 1;$/;"	d
continuous	user/usertests.asm	/^    continuous = 2;$/;"	d
copyin	kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f
copyin	user/usertests.c	/^copyin(char *s)$/;"	f
copyinstr	kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f
copyinstr1	user/usertests.c	/^copyinstr1(char *s)$/;"	f
copyinstr2	user/usertests.c	/^copyinstr2(char *s)$/;"	f
copyinstr3	user/usertests.c	/^copyinstr3(char *s)$/;"	f
copyout	kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f
copyout	user/usertests.c	/^copyout(char *s)$/;"	f
count	user/alarmtest.asm	/^    count = 0;$/;"	d
count	user/alarmtest.asm	/^  count = 0;$/;"	d
count	user/alarmtest.asm	/^  count = count + 1;$/;"	d
count	user/alarmtest.c	/^volatile static int count;$/;"	v	file:
countfree	user/usertests.c	/^countfree()$/;"	f
cpu	kernel/proc.h	/^struct cpu {$/;"	s
cpu	kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpuid	kernel/proc.c	/^cpuid()$/;"	f
cpus	kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
create	kernel/sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	user/usertests.c	/^createdelete(char *s)$/;"	f
createtest	user/usertests.c	/^createtest(char *s)$/;"	f
cwd	kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	kernel/kernel.asm	/^  d = dst;$/;"	d
d0	user/bttest.asm	/^  d0:	4501                	li	a0,0$/;"	l
d0	user/call.asm	/^  d0:	6422                	ld	s0,8(sp)$/;"	l
d0	user/cat.asm	/^  d0:	8526                	mv	a0,s1$/;"	l
d0	user/echo.asm	/^  d0:	0800                	addi	s0,sp,16$/;"	l
d0	user/forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	user/grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	user/grind.asm	/^      d0:	00001097          	auipc	ra,0x1$/;"	l
d0	user/kill.asm	/^  d0:	8082                	ret$/;"	l
d0	user/ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	user/ls.asm	/^  d0:	23513c23          	sd	s5,568(sp)$/;"	l
d0	user/mkdir.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	user/rm.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	user/sh.asm	/^      d0:	97ba                	add	a5,a5,a4$/;"	l
d0	user/stressfs.asm	/^  d0:	2ec080e7          	jalr	748(ra) # 3b8 <open>$/;"	l
d0	user/wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d0	user/zombie.asm	/^  d0:	00054783          	lbu	a5,0(a0)$/;"	l
d00	user/grind.asm	/^     d00:	4625                	li	a2,9$/;"	l
d00	user/sh.asm	/^     d00:	fd06879b          	addiw	a5,a3,-48$/;"	l
d00	user/usertests.asm	/^     d00:	85ce                	mv	a1,s3$/;"	l
d02	user/grind.asm	/^     d02:	02f66863          	bltu	a2,a5,d32 <atoi+0x44>$/;"	l
d02	user/usertests.asm	/^     d02:	00005517          	auipc	a0,0x5$/;"	l
d04	user/sh.asm	/^     d04:	0ff7f793          	zext.b	a5,a5$/;"	l
d06	user/grind.asm	/^     d06:	872a                	mv	a4,a0$/;"	l
d06	user/usertests.asm	/^     d06:	15650513          	addi	a0,a0,342 # 5e58 <malloc+0x6ac>$/;"	l
d08	user/grind.asm	/^     d08:	4501                	li	a0,0$/;"	l
d08	user/sh.asm	/^     d08:	fef671e3          	bgeu	a2,a5,cea <atoi+0x1c>$/;"	l
d0a	user/grind.asm	/^     d0a:	0705                	addi	a4,a4,1$/;"	l
d0a	user/usertests.asm	/^     d0a:	00005097          	auipc	ra,0x5$/;"	l
d0c	user/grind.asm	/^     d0c:	0025179b          	slliw	a5,a0,0x2$/;"	l
d0c	user/sh.asm	/^     d0c:	6422                	ld	s0,8(sp)$/;"	l
d0e	user/sh.asm	/^     d0e:	0141                	addi	sp,sp,16$/;"	l
d0e	user/usertests.asm	/^     d0e:	9ea080e7          	jalr	-1558(ra) # 56f4 <printf>$/;"	l
d10	user/grind.asm	/^     d10:	9fa9                	addw	a5,a5,a0$/;"	l
d10	user/sh.asm	/^     d10:	8082                	ret$/;"	l
d12	user/grind.asm	/^     d12:	0017979b          	slliw	a5,a5,0x1$/;"	l
d12	user/sh.asm	/^     d12:	4501                	li	a0,0$/;"	l
d12	user/usertests.asm	/^     d12:	4505                	li	a0,1$/;"	l
d14	user/sh.asm	/^     d14:	bfe5                	j	d0c <atoi+0x3e>$/;"	l
d14	user/usertests.asm	/^     d14:	00004097          	auipc	ra,0x4$/;"	l
d16	user/grind.asm	/^     d16:	9fb5                	addw	a5,a5,a3$/;"	l
d16	user/sh.asm	/^     d16:	1141                	addi	sp,sp,-16$/;"	l
d18	user/grind.asm	/^     d18:	fd07851b          	addiw	a0,a5,-48$/;"	l
d18	user/sh.asm	/^     d18:	e422                	sd	s0,8(sp)$/;"	l
d18	user/usertests.asm	/^     d18:	656080e7          	jalr	1622(ra) # 536a <exit>$/;"	l
d1a	user/sh.asm	/^     d1a:	0800                	addi	s0,sp,16$/;"	l
d1c	user/grind.asm	/^     d1c:	00074683          	lbu	a3,0(a4)$/;"	l
d1c	user/sh.asm	/^     d1c:	02b57463          	bgeu	a0,a1,d44 <memmove+0x2e>$/;"	l
d1c	user/usertests.asm	/^     d1c:	1101                	addi	sp,sp,-32$/;"	l
d1e	user/usertests.asm	/^     d1e:	ec06                	sd	ra,24(sp)$/;"	l
d2	user/alarmtest.asm	/^  d2:	00001097          	auipc	ra,0x1$/;"	l
d2	user/bttest.asm	/^  d2:	bfe5                	j	ca <strchr+0x1a>$/;"	l
d2	user/call.asm	/^  d2:	0141                	addi	sp,sp,16$/;"	l
d2	user/cat.asm	/^  d2:	00000097          	auipc	ra,0x0$/;"	l
d2	user/echo.asm	/^  d2:	00054783          	lbu	a5,0(a0)$/;"	l
d2	user/grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	user/init.asm	/^  d2:	7fa50513          	addi	a0,a0,2042 # 8c8 <malloc+0x122>$/;"	l
d2	user/kill.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	user/ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	user/mkdir.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	user/rm.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	user/sh.asm	/^      d2:	8782                	jr	a5$/;"	l
d2	user/usertests.asm	/^      d2:	2dc080e7          	jalr	732(ra) # 53aa <open>$/;"	l
d2	user/wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d20	user/grind.asm	/^     d20:	fd06879b          	addiw	a5,a3,-48$/;"	l
d20	user/sh.asm	/^     d20:	00c05f63          	blez	a2,d3e <memmove+0x28>$/;"	l
d20	user/usertests.asm	/^     d20:	e822                	sd	s0,16(sp)$/;"	l
d22	user/usertests.asm	/^     d22:	e426                	sd	s1,8(sp)$/;"	l
d24	user/grind.asm	/^     d24:	0ff7f793          	zext.b	a5,a5$/;"	l
d24	user/sh.asm	/^     d24:	1602                	slli	a2,a2,0x20$/;"	l
d24	user/usertests.asm	/^     d24:	e04a                	sd	s2,0(sp)$/;"	l
d26	user/sh.asm	/^     d26:	9201                	srli	a2,a2,0x20$/;"	l
d26	user/usertests.asm	/^     d26:	1000                	addi	s0,sp,32$/;"	l
d28	user/grind.asm	/^     d28:	fef671e3          	bgeu	a2,a5,d0a <atoi+0x1c>$/;"	l
d28	user/sh.asm	/^     d28:	00c507b3          	add	a5,a0,a2$/;"	l
d28	user/usertests.asm	/^     d28:	892a                	mv	s2,a0$/;"	l
d2a	user/usertests.asm	/^     d2a:	00005517          	auipc	a0,0x5$/;"	l
d2c	user/grind.asm	/^     d2c:	6422                	ld	s0,8(sp)$/;"	l
d2c	user/sh.asm	/^     d2c:	872a                	mv	a4,a0$/;"	l
d2e	user/grind.asm	/^     d2e:	0141                	addi	sp,sp,16$/;"	l
d2e	user/sh.asm	/^     d2e:	0585                	addi	a1,a1,1$/;"	l
d2e	user/usertests.asm	/^     d2e:	14e50513          	addi	a0,a0,334 # 5e78 <malloc+0x6cc>$/;"	l
d30	user/grind.asm	/^     d30:	8082                	ret$/;"	l
d30	user/sh.asm	/^     d30:	0705                	addi	a4,a4,1$/;"	l
d32	user/grind.asm	/^     d32:	4501                	li	a0,0$/;"	l
d32	user/sh.asm	/^     d32:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d32	user/usertests.asm	/^     d32:	00004097          	auipc	ra,0x4$/;"	l
d34	user/grind.asm	/^     d34:	bfe5                	j	d2c <atoi+0x3e>$/;"	l
d36	user/grind.asm	/^     d36:	1141                	addi	sp,sp,-16$/;"	l
d36	user/sh.asm	/^     d36:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d36	user/usertests.asm	/^     d36:	688080e7          	jalr	1672(ra) # 53ba <unlink>$/;"	l
d38	user/grind.asm	/^     d38:	e422                	sd	s0,8(sp)$/;"	l
d3a	user/grind.asm	/^     d3a:	0800                	addi	s0,sp,16$/;"	l
d3a	user/sh.asm	/^     d3a:	fee79ae3          	bne	a5,a4,d2e <memmove+0x18>$/;"	l
d3a	user/usertests.asm	/^     d3a:	00005517          	auipc	a0,0x5$/;"	l
d3c	user/grind.asm	/^     d3c:	02b57463          	bgeu	a0,a1,d64 <memmove+0x2e>$/;"	l
d3e	user/sh.asm	/^     d3e:	6422                	ld	s0,8(sp)$/;"	l
d3e	user/usertests.asm	/^     d3e:	14650513          	addi	a0,a0,326 # 5e80 <malloc+0x6d4>$/;"	l
d4	user/bttest.asm	/^  d4:	711d                	addi	sp,sp,-96$/;"	l
d4	user/call.asm	/^  d4:	8082                	ret$/;"	l
d4	user/forktest.asm	/^  d4:	3a050513          	addi	a0,a0,928 # 470 <sigreturn+0x3e>$/;"	l
d4	user/grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	user/grind.asm	/^      d4:	d18080e7          	jalr	-744(ra) # de8 <exit>$/;"	l
d4	user/kill.asm	/^  d4:	bfe5                	j	cc <strlen+0x20>$/;"	l
d4	user/ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	user/ls.asm	/^  d4:	1c80                	addi	s0,sp,624$/;"	l
d4	user/mkdir.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	user/rm.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	user/sh.asm	/^      d4:	4505                	li	a0,1$/;"	l
d4	user/stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	user/wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	user/zombie.asm	/^  d4:	fbfd                	bnez	a5,ca <strchr+0xc>$/;"	l
d40	user/grind.asm	/^     d40:	00c05f63          	blez	a2,d5e <memmove+0x28>$/;"	l
d40	user/sh.asm	/^     d40:	0141                	addi	sp,sp,16$/;"	l
d42	user/sh.asm	/^     d42:	8082                	ret$/;"	l
d42	user/usertests.asm	/^     d42:	00004097          	auipc	ra,0x4$/;"	l
d44	user/grind.asm	/^     d44:	1602                	slli	a2,a2,0x20$/;"	l
d44	user/sh.asm	/^     d44:	00c50733          	add	a4,a0,a2$/;"	l
d46	user/grind.asm	/^     d46:	9201                	srli	a2,a2,0x20$/;"	l
d46	user/usertests.asm	/^     d46:	678080e7          	jalr	1656(ra) # 53ba <unlink>$/;"	l
d48	user/grind.asm	/^     d48:	00c507b3          	add	a5,a0,a2$/;"	l
d48	user/sh.asm	/^     d48:	95b2                	add	a1,a1,a2$/;"	l
d4a	user/sh.asm	/^     d4a:	fec05ae3          	blez	a2,d3e <memmove+0x28>$/;"	l
d4a	user/usertests.asm	/^     d4a:	20200593          	li	a1,514$/;"	l
d4c	user/grind.asm	/^     d4c:	872a                	mv	a4,a0$/;"	l
d4e	user/grind.asm	/^     d4e:	0585                	addi	a1,a1,1$/;"	l
d4e	user/sh.asm	/^     d4e:	fff6079b          	addiw	a5,a2,-1$/;"	l
d4e	user/usertests.asm	/^     d4e:	00005517          	auipc	a0,0x5$/;"	l
d50	user/grind.asm	/^     d50:	0705                	addi	a4,a4,1$/;"	l
d52	user/grind.asm	/^     d52:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d52	user/sh.asm	/^     d52:	1782                	slli	a5,a5,0x20$/;"	l
d52	user/usertests.asm	/^     d52:	12a50513          	addi	a0,a0,298 # 5e78 <malloc+0x6cc>$/;"	l
d54	user/sh.asm	/^     d54:	9381                	srli	a5,a5,0x20$/;"	l
d56	user/grind.asm	/^     d56:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d56	user/sh.asm	/^     d56:	fff7c793          	not	a5,a5$/;"	l
d56	user/usertests.asm	/^     d56:	00004097          	auipc	ra,0x4$/;"	l
d5a	user/grind.asm	/^     d5a:	fee79ae3          	bne	a5,a4,d4e <memmove+0x18>$/;"	l
d5a	user/sh.asm	/^     d5a:	97ba                	add	a5,a5,a4$/;"	l
d5a	user/usertests.asm	/^     d5a:	654080e7          	jalr	1620(ra) # 53aa <open>$/;"	l
d5c	user/sh.asm	/^     d5c:	15fd                	addi	a1,a1,-1$/;"	l
d5e	user/grind.asm	/^     d5e:	6422                	ld	s0,8(sp)$/;"	l
d5e	user/sh.asm	/^     d5e:	177d                	addi	a4,a4,-1$/;"	l
d5e	user/usertests.asm	/^     d5e:	10054763          	bltz	a0,e6c <linktest+0x150>$/;"	l
d6	user/alarmtest.asm	/^  d6:	8ea080e7          	jalr	-1814(ra) # 9bc <printf>$/;"	l
d6	user/bttest.asm	/^  d6:	ec86                	sd	ra,88(sp)$/;"	l
d6	user/call.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	user/cat.asm	/^  d6:	2e0080e7          	jalr	736(ra) # 3b2 <close>$/;"	l
d6	user/echo.asm	/^  d6:	cf91                	beqz	a5,f2 <strlen+0x26>$/;"	l
d6	user/grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	user/init.asm	/^  d6:	00000097          	auipc	ra,0x0$/;"	l
d6	user/kill.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	user/ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	user/ls.asm	/^  d6:	892a                	mv	s2,a0$/;"	l
d6	user/sh.asm	/^      d6:	00001097          	auipc	ra,0x1$/;"	l
d6	user/stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	user/usertests.asm	/^      d6:	02055563          	bgez	a0,100 <opentest+0x66>$/;"	l
d6	user/wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d6	user/zombie.asm	/^  d6:	4501                	li	a0,0$/;"	l
d60	user/grind.asm	/^     d60:	0141                	addi	sp,sp,16$/;"	l
d60	user/sh.asm	/^     d60:	0005c683          	lbu	a3,0(a1)$/;"	l
d62	user/grind.asm	/^     d62:	8082                	ret$/;"	l
d62	user/usertests.asm	/^     d62:	84aa                	mv	s1,a0$/;"	l
d64	user/grind.asm	/^     d64:	00c50733          	add	a4,a0,a2$/;"	l
d64	user/sh.asm	/^     d64:	00d70023          	sb	a3,0(a4)$/;"	l
d64	user/usertests.asm	/^     d64:	4615                	li	a2,5$/;"	l
d66	user/usertests.asm	/^     d66:	00005597          	auipc	a1,0x5$/;"	l
d68	user/grind.asm	/^     d68:	95b2                	add	a1,a1,a2$/;"	l
d68	user/sh.asm	/^     d68:	fee79ae3          	bne	a5,a4,d5c <memmove+0x46>$/;"	l
d6a	user/grind.asm	/^     d6a:	fec05ae3          	blez	a2,d5e <memmove+0x28>$/;"	l
d6a	user/usertests.asm	/^     d6a:	06258593          	addi	a1,a1,98 # 5dc8 <malloc+0x61c>$/;"	l
d6c	user/sh.asm	/^     d6c:	bfc9                	j	d3e <memmove+0x28>$/;"	l
d6e	user/grind.asm	/^     d6e:	fff6079b          	addiw	a5,a2,-1$/;"	l
d6e	user/sh.asm	/^     d6e:	1141                	addi	sp,sp,-16$/;"	l
d6e	user/usertests.asm	/^     d6e:	00004097          	auipc	ra,0x4$/;"	l
d70	user/sh.asm	/^     d70:	e422                	sd	s0,8(sp)$/;"	l
d72	user/grind.asm	/^     d72:	1782                	slli	a5,a5,0x20$/;"	l
d72	user/sh.asm	/^     d72:	0800                	addi	s0,sp,16$/;"	l
d72	user/usertests.asm	/^     d72:	61c080e7          	jalr	1564(ra) # 538a <write>$/;"	l
d74	user/grind.asm	/^     d74:	9381                	srli	a5,a5,0x20$/;"	l
d74	user/sh.asm	/^     d74:	ca05                	beqz	a2,da4 <memcmp+0x36>$/;"	l
d76	user/grind.asm	/^     d76:	fff7c793          	not	a5,a5$/;"	l
d76	user/sh.asm	/^     d76:	fff6069b          	addiw	a3,a2,-1$/;"	l
d76	user/usertests.asm	/^     d76:	4795                	li	a5,5$/;"	l
d78	user/usertests.asm	/^     d78:	10f51863          	bne	a0,a5,e88 <linktest+0x16c>$/;"	l
d7a	user/grind.asm	/^     d7a:	97ba                	add	a5,a5,a4$/;"	l
d7a	user/sh.asm	/^     d7a:	1682                	slli	a3,a3,0x20$/;"	l
d7c	user/grind.asm	/^     d7c:	15fd                	addi	a1,a1,-1$/;"	l
d7c	user/sh.asm	/^     d7c:	9281                	srli	a3,a3,0x20$/;"	l
d7c	user/usertests.asm	/^     d7c:	8526                	mv	a0,s1$/;"	l
d7e	user/grind.asm	/^     d7e:	177d                	addi	a4,a4,-1$/;"	l
d7e	user/sh.asm	/^     d7e:	0685                	addi	a3,a3,1$/;"	l
d7e	user/usertests.asm	/^     d7e:	00004097          	auipc	ra,0x4$/;"	l
d8	user/bttest.asm	/^  d8:	e8a2                	sd	s0,80(sp)$/;"	l
d8	user/call.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	user/echo.asm	/^  d8:	0505                	addi	a0,a0,1$/;"	l
d8	user/forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	user/grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	user/grind.asm	/^      d8:	00001517          	auipc	a0,0x1$/;"	l
d8	user/kill.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	user/ln.asm	/^  d8:	ca19                	beqz	a2,ee <memset+0x1c>$/;"	l
d8	user/ls.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	user/mkdir.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	user/rm.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	user/stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	user/wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d8	user/zombie.asm	/^  d8:	6422                	ld	s0,8(sp)$/;"	l
d80	user/grind.asm	/^     d80:	0005c683          	lbu	a3,0(a1)$/;"	l
d80	user/sh.asm	/^     d80:	96aa                	add	a3,a3,a0$/;"	l
d82	user/sh.asm	/^     d82:	00054783          	lbu	a5,0(a0)$/;"	l
d82	user/usertests.asm	/^     d82:	614080e7          	jalr	1556(ra) # 5392 <close>$/;"	l
d84	user/grind.asm	/^     d84:	00d70023          	sb	a3,0(a4)$/;"	l
d86	user/sh.asm	/^     d86:	0005c703          	lbu	a4,0(a1)$/;"	l
d86	user/usertests.asm	/^     d86:	00005597          	auipc	a1,0x5$/;"	l
d88	user/grind.asm	/^     d88:	fee79ae3          	bne	a5,a4,d7c <memmove+0x46>$/;"	l
d8a	user/sh.asm	/^     d8a:	00e79863          	bne	a5,a4,d9a <memcmp+0x2c>$/;"	l
d8a	user/usertests.asm	/^     d8a:	0fa58593          	addi	a1,a1,250 # 5e80 <malloc+0x6d4>$/;"	l
d8c	user/grind.asm	/^     d8c:	bfc9                	j	d5e <memmove+0x28>$/;"	l
d8e	user/grind.asm	/^     d8e:	1141                	addi	sp,sp,-16$/;"	l
d8e	user/sh.asm	/^     d8e:	0505                	addi	a0,a0,1$/;"	l
d8e	user/usertests.asm	/^     d8e:	00005517          	auipc	a0,0x5$/;"	l
d90	user/grind.asm	/^     d90:	e422                	sd	s0,8(sp)$/;"	l
d90	user/sh.asm	/^     d90:	0585                	addi	a1,a1,1$/;"	l
d92	user/grind.asm	/^     d92:	0800                	addi	s0,sp,16$/;"	l
d92	user/sh.asm	/^     d92:	fed518e3          	bne	a0,a3,d82 <memcmp+0x14>$/;"	l
d92	user/usertests.asm	/^     d92:	0ea50513          	addi	a0,a0,234 # 5e78 <malloc+0x6cc>$/;"	l
d94	user/grind.asm	/^     d94:	ca05                	beqz	a2,dc4 <memcmp+0x36>$/;"	l
d96	user/grind.asm	/^     d96:	fff6069b          	addiw	a3,a2,-1$/;"	l
d96	user/sh.asm	/^     d96:	4501                	li	a0,0$/;"	l
d96	user/usertests.asm	/^     d96:	00004097          	auipc	ra,0x4$/;"	l
d98	user/sh.asm	/^     d98:	a019                	j	d9e <memcmp+0x30>$/;"	l
d9a	user/grind.asm	/^     d9a:	1682                	slli	a3,a3,0x20$/;"	l
d9a	user/sh.asm	/^     d9a:	40e7853b          	subw	a0,a5,a4$/;"	l
d9a	user/usertests.asm	/^     d9a:	634080e7          	jalr	1588(ra) # 53ca <link>$/;"	l
d9c	user/grind.asm	/^     d9c:	9281                	srli	a3,a3,0x20$/;"	l
d9e	user/grind.asm	/^     d9e:	0685                	addi	a3,a3,1$/;"	l
d9e	user/sh.asm	/^     d9e:	6422                	ld	s0,8(sp)$/;"	l
d9e	user/usertests.asm	/^     d9e:	10054363          	bltz	a0,ea4 <linktest+0x188>$/;"	l
da	user/alarmtest.asm	/^  da:	00001797          	auipc	a5,0x1$/;"	l
da	user/bttest.asm	/^  da:	e4a6                	sd	s1,72(sp)$/;"	l
da	user/call.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	user/cat.asm	/^  da:	0921                	addi	s2,s2,8$/;"	l
da	user/echo.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	user/grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	user/init.asm	/^  da:	2c6080e7          	jalr	710(ra) # 39c <exec>$/;"	l
da	user/kill.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	user/ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	user/ls.asm	/^  da:	00000097          	auipc	ra,0x0$/;"	l
da	user/mkdir.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	user/rm.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	user/sh.asm	/^      da:	cf2080e7          	jalr	-782(ra) # dc8 <exit>$/;"	l
da	user/usertests.asm	/^      da:	60e2                	ld	ra,24(sp)$/;"	l
da	user/wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	user/zombie.asm	/^  da:	0141                	addi	sp,sp,16$/;"	l
da0	user/grind.asm	/^     da0:	96aa                	add	a3,a3,a0$/;"	l
da0	user/sh.asm	/^     da0:	0141                	addi	sp,sp,16$/;"	l
da2	user/grind.asm	/^     da2:	00054783          	lbu	a5,0(a0)$/;"	l
da2	user/sh.asm	/^     da2:	8082                	ret$/;"	l
da2	user/usertests.asm	/^     da2:	00005517          	auipc	a0,0x5$/;"	l
da4	user/sh.asm	/^     da4:	4501                	li	a0,0$/;"	l
da6	user/grind.asm	/^     da6:	0005c703          	lbu	a4,0(a1)$/;"	l
da6	user/sh.asm	/^     da6:	bfe5                	j	d9e <memcmp+0x30>$/;"	l
da6	user/usertests.asm	/^     da6:	0d650513          	addi	a0,a0,214 # 5e78 <malloc+0x6cc>$/;"	l
da8	user/sh.asm	/^     da8:	1141                	addi	sp,sp,-16$/;"	l
daa	user/grind.asm	/^     daa:	00e79863          	bne	a5,a4,dba <memcmp+0x2c>$/;"	l
daa	user/sh.asm	/^     daa:	e406                	sd	ra,8(sp)$/;"	l
daa	user/usertests.asm	/^     daa:	00004097          	auipc	ra,0x4$/;"	l
dac	user/sh.asm	/^     dac:	e022                	sd	s0,0(sp)$/;"	l
dae	user/grind.asm	/^     dae:	0505                	addi	a0,a0,1$/;"	l
dae	user/sh.asm	/^     dae:	0800                	addi	s0,sp,16$/;"	l
dae	user/usertests.asm	/^     dae:	610080e7          	jalr	1552(ra) # 53ba <unlink>$/;"	l
data	kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	kernel/date.h	/^  uint day;$/;"	m	struct:rtcdate
db0	user/grind.asm	/^     db0:	0585                	addi	a1,a1,1$/;"	l
db0	user/sh.asm	/^     db0:	00000097          	auipc	ra,0x0$/;"	l
db2	user/grind.asm	/^     db2:	fed518e3          	bne	a0,a3,da2 <memcmp+0x14>$/;"	l
db2	user/usertests.asm	/^     db2:	4581                	li	a1,0$/;"	l
db4	user/sh.asm	/^     db4:	f66080e7          	jalr	-154(ra) # d16 <memmove>$/;"	l
db4	user/usertests.asm	/^     db4:	00005517          	auipc	a0,0x5$/;"	l
db6	user/grind.asm	/^     db6:	4501                	li	a0,0$/;"	l
db8	user/grind.asm	/^     db8:	a019                	j	dbe <memcmp+0x30>$/;"	l
db8	user/sh.asm	/^     db8:	60a2                	ld	ra,8(sp)$/;"	l
db8	user/usertests.asm	/^     db8:	0c450513          	addi	a0,a0,196 # 5e78 <malloc+0x6cc>$/;"	l
dba	user/grind.asm	/^     dba:	40e7853b          	subw	a0,a5,a4$/;"	l
dba	user/sh.asm	/^     dba:	6402                	ld	s0,0(sp)$/;"	l
dbc	user/sh.asm	/^     dbc:	0141                	addi	sp,sp,16$/;"	l
dbc	user/usertests.asm	/^     dbc:	00004097          	auipc	ra,0x4$/;"	l
dbe	user/grind.asm	/^     dbe:	6422                	ld	s0,8(sp)$/;"	l
dbe	user/sh.asm	/^     dbe:	8082                	ret$/;"	l
dc	user/bttest.asm	/^  dc:	e0ca                	sd	s2,64(sp)$/;"	l
dc	user/call.asm	/^  dc:	00054783          	lbu	a5,0(a0)$/;"	l
dc	user/cat.asm	/^  dc:	fd391ce3          	bne	s2,s3,b4 <main+0x2a>$/;"	l
dc	user/echo.asm	/^  dc:	4685                	li	a3,1$/;"	l
dc	user/forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	user/grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	user/grind.asm	/^      dc:	25850513          	addi	a0,a0,600 # 1330 <malloc+0x106>$/;"	l
dc	user/kill.asm	/^  dc:	ca19                	beqz	a2,f2 <memset+0x1c>$/;"	l
dc	user/ln.asm	/^  dc:	1602                	slli	a2,a2,0x20$/;"	l
dc	user/stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	user/usertests.asm	/^      dc:	6442                	ld	s0,16(sp)$/;"	l
dc	user/wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	user/zombie.asm	/^  dc:	8082                	ret$/;"	l
dc0	user/grind.asm	/^     dc0:	0141                	addi	sp,sp,16$/;"	l
dc0	user/sh.asm	/^     dc0:	4885                	li	a7,1$/;"	l
dc0	user/usertests.asm	/^     dc0:	5ee080e7          	jalr	1518(ra) # 53aa <open>$/;"	l
dc2	user/grind.asm	/^     dc2:	8082                	ret$/;"	l
dc2	user/sh.asm	/^     dc2:	00000073          	ecall$/;"	l
dc4	user/grind.asm	/^     dc4:	4501                	li	a0,0$/;"	l
dc4	user/usertests.asm	/^     dc4:	0e055e63          	bgez	a0,ec0 <linktest+0x1a4>$/;"	l
dc6	user/grind.asm	/^     dc6:	bfe5                	j	dbe <memcmp+0x30>$/;"	l
dc6	user/sh.asm	/^     dc6:	8082                	ret$/;"	l
dc8	user/grind.asm	/^     dc8:	1141                	addi	sp,sp,-16$/;"	l
dc8	user/sh.asm	/^     dc8:	4889                	li	a7,2$/;"	l
dc8	user/usertests.asm	/^     dc8:	4581                	li	a1,0$/;"	l
dca	user/grind.asm	/^     dca:	e406                	sd	ra,8(sp)$/;"	l
dca	user/sh.asm	/^     dca:	00000073          	ecall$/;"	l
dca	user/usertests.asm	/^     dca:	00005517          	auipc	a0,0x5$/;"	l
dcc	user/grind.asm	/^     dcc:	e022                	sd	s0,0(sp)$/;"	l
dce	user/grind.asm	/^     dce:	0800                	addi	s0,sp,16$/;"	l
dce	user/sh.asm	/^     dce:	8082                	ret$/;"	l
dce	user/usertests.asm	/^     dce:	0b650513          	addi	a0,a0,182 # 5e80 <malloc+0x6d4>$/;"	l
dd0	user/grind.asm	/^     dd0:	00000097          	auipc	ra,0x0$/;"	l
dd0	user/sh.asm	/^     dd0:	488d                	li	a7,3$/;"	l
dd2	user/sh.asm	/^     dd2:	00000073          	ecall$/;"	l
dd2	user/usertests.asm	/^     dd2:	00004097          	auipc	ra,0x4$/;"	l
dd4	user/grind.asm	/^     dd4:	f66080e7          	jalr	-154(ra) # d36 <memmove>$/;"	l
dd6	user/sh.asm	/^     dd6:	8082                	ret$/;"	l
dd6	user/usertests.asm	/^     dd6:	5d8080e7          	jalr	1496(ra) # 53aa <open>$/;"	l
dd8	user/grind.asm	/^     dd8:	60a2                	ld	ra,8(sp)$/;"	l
dd8	user/sh.asm	/^     dd8:	4891                	li	a7,4$/;"	l
dda	user/grind.asm	/^     dda:	6402                	ld	s0,0(sp)$/;"	l
dda	user/sh.asm	/^     dda:	00000073          	ecall$/;"	l
dda	user/usertests.asm	/^     dda:	84aa                	mv	s1,a0$/;"	l
ddc	user/grind.asm	/^     ddc:	0141                	addi	sp,sp,16$/;"	l
ddc	user/usertests.asm	/^     ddc:	10054063          	bltz	a0,edc <linktest+0x1c0>$/;"	l
dde	user/grind.asm	/^     dde:	8082                	ret$/;"	l
dde	user/sh.asm	/^     dde:	8082                	ret$/;"	l
de	user/alarmtest.asm	/^  de:	c807ab23          	sw	zero,-874(a5) # d70 <count>$/;"	l
de	user/bttest.asm	/^  de:	fc4e                	sd	s3,56(sp)$/;"	l
de	user/echo.asm	/^  de:	9e89                	subw	a3,a3,a0$/;"	l
de	user/init.asm	/^  de:	00000517          	auipc	a0,0x0$/;"	l
de	user/kill.asm	/^  de:	87aa                	mv	a5,a0$/;"	l
de	user/ln.asm	/^  de:	9201                	srli	a2,a2,0x20$/;"	l
de	user/ls.asm	/^  de:	4a4080e7          	jalr	1188(ra) # 57e <open>$/;"	l
de	user/mkdir.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	user/rm.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	user/sh.asm	/^      de:	00001517          	auipc	a0,0x1$/;"	l
de	user/usertests.asm	/^      de:	64a2                	ld	s1,8(sp)$/;"	l
de	user/wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de	user/zombie.asm	/^  de:	4501                	li	a0,0$/;"	l
de0	user/grind.asm	/^     de0:	4885                	li	a7,1$/;"	l
de0	user/sh.asm	/^     de0:	4895                	li	a7,5$/;"	l
de0	user/usertests.asm	/^     de0:	660d                	lui	a2,0x3$/;"	l
de2	user/grind.asm	/^     de2:	00000073          	ecall$/;"	l
de2	user/sh.asm	/^     de2:	00000073          	ecall$/;"	l
de2	user/usertests.asm	/^     de2:	0000b597          	auipc	a1,0xb$/;"	l
de6	user/grind.asm	/^     de6:	8082                	ret$/;"	l
de6	user/sh.asm	/^     de6:	8082                	ret$/;"	l
de6	user/usertests.asm	/^     de6:	9ae58593          	addi	a1,a1,-1618 # b790 <buf>$/;"	l
de8	user/grind.asm	/^     de8:	4889                	li	a7,2$/;"	l
de8	user/sh.asm	/^     de8:	48c1                	li	a7,16$/;"	l
dea	user/grind.asm	/^     dea:	00000073          	ecall$/;"	l
dea	user/sh.asm	/^     dea:	00000073          	ecall$/;"	l
dea	user/usertests.asm	/^     dea:	00004097          	auipc	ra,0x4$/;"	l
dee	user/grind.asm	/^     dee:	8082                	ret$/;"	l
dee	user/sh.asm	/^     dee:	8082                	ret$/;"	l
dee	user/usertests.asm	/^     dee:	598080e7          	jalr	1432(ra) # 5382 <read>$/;"	l
desc	kernel/virtio_disk.c	/^  struct VRingDesc *desc;$/;"	m	struct:disk	typeref:struct:disk::VRingDesc	file:
dev	kernel/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	kernel/log.c	/^  int dev;$/;"	m	struct:log	file:
dev	kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devintr	kernel/trap.c	/^devintr()$/;"	f
devsw	kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	kernel/file.h	/^struct devsw {$/;"	s
df0	user/grind.asm	/^     df0:	488d                	li	a7,3$/;"	l
df0	user/sh.asm	/^     df0:	48d5                	li	a7,21$/;"	l
df2	user/grind.asm	/^     df2:	00000073          	ecall$/;"	l
df2	user/sh.asm	/^     df2:	00000073          	ecall$/;"	l
df2	user/usertests.asm	/^     df2:	4795                	li	a5,5$/;"	l
df4	user/usertests.asm	/^     df4:	10f51263          	bne	a0,a5,ef8 <linktest+0x1dc>$/;"	l
df6	user/grind.asm	/^     df6:	8082                	ret$/;"	l
df6	user/sh.asm	/^     df6:	8082                	ret$/;"	l
df8	user/grind.asm	/^     df8:	4891                	li	a7,4$/;"	l
df8	user/sh.asm	/^     df8:	4899                	li	a7,6$/;"	l
df8	user/usertests.asm	/^     df8:	8526                	mv	a0,s1$/;"	l
dfa	user/grind.asm	/^     dfa:	00000073          	ecall$/;"	l
dfa	user/sh.asm	/^     dfa:	00000073          	ecall$/;"	l
dfa	user/usertests.asm	/^     dfa:	00004097          	auipc	ra,0x4$/;"	l
dfe	user/grind.asm	/^     dfe:	8082                	ret$/;"	l
dfe	user/sh.asm	/^     dfe:	8082                	ret$/;"	l
dfe	user/usertests.asm	/^     dfe:	598080e7          	jalr	1432(ra) # 5392 <close>$/;"	l
digits	kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
digits	user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dinode	kernel/fs.h	/^struct dinode {$/;"	s
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	kernel/fs.h	/^struct dirent {$/;"	s
dirfile	user/usertests.c	/^dirfile(char *s)$/;"	f
dirlink	kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	user/usertests.c	/^void dirtest(char *s)$/;"	f
disk	kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf
disk	kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	kernel/virtio_disk.c	/^} __attribute__ ((aligned (PGSIZE))) disk;$/;"	v	typeref:struct:disk	file:
do_commit	kernel/kernel.asm	/^    do_commit = 1;$/;"	d
do_rand	user/grind.c	/^do_rand(unsigned long *ctx)$/;"	f
dst	user/alarmtest.asm	/^  dst = vdst;$/;"	d
dst	user/bttest.asm	/^  dst = vdst;$/;"	d
dst	user/call.asm	/^  dst = vdst;$/;"	d
dst	user/cat.asm	/^  dst = vdst;$/;"	d
dst	user/echo.asm	/^  dst = vdst;$/;"	d
dst	user/forktest.asm	/^  dst = vdst;$/;"	d
dst	user/grep.asm	/^  dst = vdst;$/;"	d
dst	user/grind.asm	/^  dst = vdst;$/;"	d
dst	user/init.asm	/^  dst = vdst;$/;"	d
dst	user/kill.asm	/^  dst = vdst;$/;"	d
dst	user/ln.asm	/^  dst = vdst;$/;"	d
dst	user/ls.asm	/^  dst = vdst;$/;"	d
dst	user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	user/rm.asm	/^  dst = vdst;$/;"	d
dst	user/sh.asm	/^  dst = vdst;$/;"	d
dst	user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	user/usertests.asm	/^  dst = vdst;$/;"	d
dst	user/wc.asm	/^  dst = vdst;$/;"	d
dst	user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	user/alarmtest.asm	/^dup:$/;"	l
dup	user/bttest.asm	/^dup:$/;"	l
dup	user/call.asm	/^dup:$/;"	l
dup	user/cat.asm	/^dup:$/;"	l
dup	user/echo.asm	/^dup:$/;"	l
dup	user/forktest.asm	/^dup:$/;"	l
dup	user/grep.asm	/^dup:$/;"	l
dup	user/grind.asm	/^dup:$/;"	l
dup	user/init.asm	/^dup:$/;"	l
dup	user/kill.asm	/^dup:$/;"	l
dup	user/ln.asm	/^dup:$/;"	l
dup	user/ls.asm	/^dup:$/;"	l
dup	user/mkdir.asm	/^dup:$/;"	l
dup	user/rm.asm	/^dup:$/;"	l
dup	user/sh.asm	/^dup:$/;"	l
dup	user/stressfs.asm	/^dup:$/;"	l
dup	user/usertests.asm	/^dup:$/;"	l
dup	user/usys.S	/^dup:$/;"	l
dup	user/wc.asm	/^dup:$/;"	l
dup	user/zombie.asm	/^dup:$/;"	l
e	kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon3	file:
e	user/bttest.asm	/^   e:	30e080e7          	jalr	782(ra) # 318 <sleep>$/;"	l
e	user/call.asm	/^   e:	1141                	addi	sp,sp,-16$/;"	l
e	user/cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	user/echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	user/kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	user/ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	user/mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	user/usertests.asm	/^       e:	057e                	slli	a0,a0,0x1f$/;"	l
e	user/wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	user/bttest.asm	/^  e0:	f852                	sd	s4,48(sp)$/;"	l
e0	user/call.asm	/^  e0:	cb99                	beqz	a5,f6 <strchr+0x20>$/;"	l
e0	user/cat.asm	/^  e0:	4501                	li	a0,0$/;"	l
e0	user/echo.asm	/^  e0:	00f6853b          	addw	a0,a3,a5$/;"	l
e0	user/forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	user/grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	user/grind.asm	/^      e0:	00001097          	auipc	ra,0x1$/;"	l
e0	user/kill.asm	/^  e0:	1602                	slli	a2,a2,0x20$/;"	l
e0	user/ln.asm	/^  e0:	00a60733          	add	a4,a2,a0$/;"	l
e0	user/mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	user/usertests.asm	/^      e0:	6105                	addi	sp,sp,32$/;"	l
e0	user/wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	user/zombie.asm	/^  e0:	bfe5                	j	d8 <strchr+0x1a>$/;"	l
e00	user/grind.asm	/^     e00:	4895                	li	a7,5$/;"	l
e00	user/sh.asm	/^     e00:	489d                	li	a7,7$/;"	l
e02	user/grind.asm	/^     e02:	00000073          	ecall$/;"	l
e02	user/sh.asm	/^     e02:	00000073          	ecall$/;"	l
e02	user/usertests.asm	/^     e02:	00005597          	auipc	a1,0x5$/;"	l
e06	user/grind.asm	/^     e06:	8082                	ret$/;"	l
e06	user/sh.asm	/^     e06:	8082                	ret$/;"	l
e06	user/usertests.asm	/^     e06:	07e58593          	addi	a1,a1,126 # 5e80 <malloc+0x6d4>$/;"	l
e08	user/grind.asm	/^     e08:	48c1                	li	a7,16$/;"	l
e08	user/sh.asm	/^     e08:	48bd                	li	a7,15$/;"	l
e0a	user/grind.asm	/^     e0a:	00000073          	ecall$/;"	l
e0a	user/sh.asm	/^     e0a:	00000073          	ecall$/;"	l
e0a	user/usertests.asm	/^     e0a:	852e                	mv	a0,a1$/;"	l
e0c	user/usertests.asm	/^     e0c:	00004097          	auipc	ra,0x4$/;"	l
e0e	user/grind.asm	/^     e0e:	8082                	ret$/;"	l
e0e	user/sh.asm	/^     e0e:	8082                	ret$/;"	l
e10	user/grind.asm	/^     e10:	48d5                	li	a7,21$/;"	l
e10	user/sh.asm	/^     e10:	48c5                	li	a7,17$/;"	l
e10	user/usertests.asm	/^     e10:	5be080e7          	jalr	1470(ra) # 53ca <link>$/;"	l
e12	user/grind.asm	/^     e12:	00000073          	ecall$/;"	l
e12	user/sh.asm	/^     e12:	00000073          	ecall$/;"	l
e14	user/usertests.asm	/^     e14:	10055063          	bgez	a0,f14 <linktest+0x1f8>$/;"	l
e16	user/grind.asm	/^     e16:	8082                	ret$/;"	l
e16	user/sh.asm	/^     e16:	8082                	ret$/;"	l
e18	user/grind.asm	/^     e18:	4899                	li	a7,6$/;"	l
e18	user/sh.asm	/^     e18:	48c9                	li	a7,18$/;"	l
e18	user/usertests.asm	/^     e18:	00005517          	auipc	a0,0x5$/;"	l
e1a	user/grind.asm	/^     e1a:	00000073          	ecall$/;"	l
e1a	user/sh.asm	/^     e1a:	00000073          	ecall$/;"	l
e1c	user/usertests.asm	/^     e1c:	06850513          	addi	a0,a0,104 # 5e80 <malloc+0x6d4>$/;"	l
e1e	user/grind.asm	/^     e1e:	8082                	ret$/;"	l
e1e	user/sh.asm	/^     e1e:	8082                	ret$/;"	l
e2	user/alarmtest.asm	/^  e2:	00000597          	auipc	a1,0x0$/;"	l
e2	user/bttest.asm	/^  e2:	f456                	sd	s5,40(sp)$/;"	l
e2	user/call.asm	/^  e2:	00f58763          	beq	a1,a5,f0 <strchr+0x1a>$/;"	l
e2	user/cat.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/init.asm	/^  e2:	7f250513          	addi	a0,a0,2034 # 8d0 <malloc+0x12a>$/;"	l
e2	user/kill.asm	/^  e2:	9201                	srli	a2,a2,0x20$/;"	l
e2	user/ls.asm	/^  e2:	06054f63          	bltz	a0,160 <ls+0xac>$/;"	l
e2	user/mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/sh.asm	/^      e2:	22a50513          	addi	a0,a0,554 # 1308 <malloc+0xfe>$/;"	l
e2	user/stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/usertests.asm	/^      e2:	8082                	ret$/;"	l
e2	user/wc.asm	/^  e2:	8082                	ret$/;"	l
e2	user/zombie.asm	/^  e2:	711d                	addi	sp,sp,-96$/;"	l
e20	user/grind.asm	/^     e20:	489d                	li	a7,7$/;"	l
e20	user/sh.asm	/^     e20:	48a1                	li	a7,8$/;"	l
e20	user/usertests.asm	/^     e20:	00004097          	auipc	ra,0x4$/;"	l
e22	user/grind.asm	/^     e22:	00000073          	ecall$/;"	l
e22	user/sh.asm	/^     e22:	00000073          	ecall$/;"	l
e24	user/usertests.asm	/^     e24:	59a080e7          	jalr	1434(ra) # 53ba <unlink>$/;"	l
e26	user/grind.asm	/^     e26:	8082                	ret$/;"	l
e26	user/sh.asm	/^     e26:	8082                	ret$/;"	l
e28	user/grind.asm	/^     e28:	48bd                	li	a7,15$/;"	l
e28	user/sh.asm	/^     e28:	48cd                	li	a7,19$/;"	l
e28	user/usertests.asm	/^     e28:	00005597          	auipc	a1,0x5$/;"	l
e2a	user/grind.asm	/^     e2a:	00000073          	ecall$/;"	l
e2a	user/sh.asm	/^     e2a:	00000073          	ecall$/;"	l
e2c	user/usertests.asm	/^     e2c:	05058593          	addi	a1,a1,80 # 5e78 <malloc+0x6cc>$/;"	l
e2e	user/grind.asm	/^     e2e:	8082                	ret$/;"	l
e2e	user/sh.asm	/^     e2e:	8082                	ret$/;"	l
e30	user/grind.asm	/^     e30:	48c5                	li	a7,17$/;"	l
e30	user/sh.asm	/^     e30:	48d1                	li	a7,20$/;"	l
e30	user/usertests.asm	/^     e30:	00005517          	auipc	a0,0x5$/;"	l
e32	user/grind.asm	/^     e32:	00000073          	ecall$/;"	l
e32	user/sh.asm	/^     e32:	00000073          	ecall$/;"	l
e34	user/usertests.asm	/^     e34:	05050513          	addi	a0,a0,80 # 5e80 <malloc+0x6d4>$/;"	l
e36	user/grind.asm	/^     e36:	8082                	ret$/;"	l
e36	user/sh.asm	/^     e36:	8082                	ret$/;"	l
e38	user/grind.asm	/^     e38:	48c9                	li	a7,18$/;"	l
e38	user/sh.asm	/^     e38:	48a5                	li	a7,9$/;"	l
e38	user/usertests.asm	/^     e38:	00004097          	auipc	ra,0x4$/;"	l
e3a	user/grind.asm	/^     e3a:	00000073          	ecall$/;"	l
e3a	user/sh.asm	/^     e3a:	00000073          	ecall$/;"	l
e3c	user/usertests.asm	/^     e3c:	592080e7          	jalr	1426(ra) # 53ca <link>$/;"	l
e3e	user/grind.asm	/^     e3e:	8082                	ret$/;"	l
e3e	user/sh.asm	/^     e3e:	8082                	ret$/;"	l
e4	user/bttest.asm	/^  e4:	f05a                	sd	s6,32(sp)$/;"	l
e4	user/echo.asm	/^  e4:	0785                	addi	a5,a5,1$/;"	l
e4	user/grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	user/grind.asm	/^      e4:	d78080e7          	jalr	-648(ra) # e58 <chdir>$/;"	l
e4	user/kill.asm	/^  e4:	00a60733          	add	a4,a2,a0$/;"	l
e4	user/ln.asm	/^  e4:	00b78023          	sb	a1,0(a5)$/;"	l
e4	user/mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	user/rm.asm	/^  e4:	8082                	ret$/;"	l
e4	user/usertests.asm	/^      e4:	85a6                	mv	a1,s1$/;"	l
e4	user/wc.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	user/zombie.asm	/^  e4:	ec86                	sd	ra,88(sp)$/;"	l
e40	user/grind.asm	/^     e40:	48a1                	li	a7,8$/;"	l
e40	user/sh.asm	/^     e40:	48a9                	li	a7,10$/;"	l
e40	user/usertests.asm	/^     e40:	0e055863          	bgez	a0,f30 <linktest+0x214>$/;"	l
e42	user/grind.asm	/^     e42:	00000073          	ecall$/;"	l
e42	user/sh.asm	/^     e42:	00000073          	ecall$/;"	l
e44	user/usertests.asm	/^     e44:	00005597          	auipc	a1,0x5$/;"	l
e46	user/grind.asm	/^     e46:	8082                	ret$/;"	l
e46	user/sh.asm	/^     e46:	8082                	ret$/;"	l
e48	user/grind.asm	/^     e48:	48cd                	li	a7,19$/;"	l
e48	user/sh.asm	/^     e48:	48ad                	li	a7,11$/;"	l
e48	user/usertests.asm	/^     e48:	03458593          	addi	a1,a1,52 # 5e78 <malloc+0x6cc>$/;"	l
e4a	user/grind.asm	/^     e4a:	00000073          	ecall$/;"	l
e4a	user/sh.asm	/^     e4a:	00000073          	ecall$/;"	l
e4c	user/usertests.asm	/^     e4c:	00005517          	auipc	a0,0x5$/;"	l
e4e	user/grind.asm	/^     e4e:	8082                	ret$/;"	l
e4e	user/sh.asm	/^     e4e:	8082                	ret$/;"	l
e50	user/grind.asm	/^     e50:	48d1                	li	a7,20$/;"	l
e50	user/sh.asm	/^     e50:	48b1                	li	a7,12$/;"	l
e50	user/usertests.asm	/^     e50:	13c50513          	addi	a0,a0,316 # 5f88 <malloc+0x7dc>$/;"	l
e52	user/grind.asm	/^     e52:	00000073          	ecall$/;"	l
e52	user/sh.asm	/^     e52:	00000073          	ecall$/;"	l
e54	user/usertests.asm	/^     e54:	00004097          	auipc	ra,0x4$/;"	l
e56	user/grind.asm	/^     e56:	8082                	ret$/;"	l
e56	user/sh.asm	/^     e56:	8082                	ret$/;"	l
e58	user/grind.asm	/^     e58:	48a5                	li	a7,9$/;"	l
e58	user/sh.asm	/^     e58:	48b5                	li	a7,13$/;"	l
e58	user/usertests.asm	/^     e58:	576080e7          	jalr	1398(ra) # 53ca <link>$/;"	l
e5a	user/grind.asm	/^     e5a:	00000073          	ecall$/;"	l
e5a	user/sh.asm	/^     e5a:	00000073          	ecall$/;"	l
e5c	user/usertests.asm	/^     e5c:	0e055863          	bgez	a0,f4c <linktest+0x230>$/;"	l
e5e	user/grind.asm	/^     e5e:	8082                	ret$/;"	l
e5e	user/sh.asm	/^     e5e:	8082                	ret$/;"	l
e6	user/alarmtest.asm	/^  e6:	f1e58593          	addi	a1,a1,-226 # 0 <periodic>$/;"	l
e6	user/bttest.asm	/^  e6:	ec5e                	sd	s7,24(sp)$/;"	l
e6	user/call.asm	/^  e6:	0505                	addi	a0,a0,1$/;"	l
e6	user/cat.asm	/^  e6:	2a8080e7          	jalr	680(ra) # 38a <exit>$/;"	l
e6	user/echo.asm	/^  e6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e6	user/forktest.asm	/^  e6:	2a8080e7          	jalr	680(ra) # 38a <exit>$/;"	l
e6	user/init.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	user/ls.asm	/^  e6:	84aa                	mv	s1,a0$/;"	l
e6	user/mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/sh.asm	/^      e6:	00000097          	auipc	ra,0x0$/;"	l
e6	user/stressfs.asm	/^  e6:	2ae080e7          	jalr	686(ra) # 390 <read>$/;"	l
e6	user/usertests.asm	/^      e6:	00005517          	auipc	a0,0x5$/;"	l
e6	user/zombie.asm	/^  e6:	e8a2                	sd	s0,80(sp)$/;"	l
e60	user/grind.asm	/^     e60:	48a9                	li	a7,10$/;"	l
e60	user/sh.asm	/^     e60:	48b9                	li	a7,14$/;"	l
e60	user/usertests.asm	/^     e60:	60e2                	ld	ra,24(sp)$/;"	l
e62	user/grind.asm	/^     e62:	00000073          	ecall$/;"	l
e62	user/sh.asm	/^     e62:	00000073          	ecall$/;"	l
e62	user/usertests.asm	/^     e62:	6442                	ld	s0,16(sp)$/;"	l
e64	user/usertests.asm	/^     e64:	64a2                	ld	s1,8(sp)$/;"	l
e66	user/grind.asm	/^     e66:	8082                	ret$/;"	l
e66	user/sh.asm	/^     e66:	8082                	ret$/;"	l
e66	user/usertests.asm	/^     e66:	6902                	ld	s2,0(sp)$/;"	l
e68	user/grind.asm	/^     e68:	48ad                	li	a7,11$/;"	l
e68	user/sh.asm	/^     e68:	48d9                	li	a7,22$/;"	l
e68	user/usertests.asm	/^     e68:	6105                	addi	sp,sp,32$/;"	l
e6a	user/grind.asm	/^     e6a:	00000073          	ecall$/;"	l
e6a	user/sh.asm	/^     e6a:	00000073          	ecall$/;"	l
e6a	user/usertests.asm	/^     e6a:	8082                	ret$/;"	l
e6c	user/usertests.asm	/^     e6c:	85ca                	mv	a1,s2$/;"	l
e6e	user/grind.asm	/^     e6e:	8082                	ret$/;"	l
e6e	user/sh.asm	/^     e6e:	8082                	ret$/;"	l
e6e	user/usertests.asm	/^     e6e:	00005517          	auipc	a0,0x5$/;"	l
e70	user/grind.asm	/^     e70:	48b1                	li	a7,12$/;"	l
e70	user/sh.asm	/^     e70:	48dd                	li	a7,23$/;"	l
e72	user/grind.asm	/^     e72:	00000073          	ecall$/;"	l
e72	user/sh.asm	/^     e72:	00000073          	ecall$/;"	l
e72	user/usertests.asm	/^     e72:	01a50513          	addi	a0,a0,26 # 5e88 <malloc+0x6dc>$/;"	l
e76	user/grind.asm	/^     e76:	8082                	ret$/;"	l
e76	user/sh.asm	/^     e76:	8082                	ret$/;"	l
e76	user/usertests.asm	/^     e76:	00005097          	auipc	ra,0x5$/;"	l
e78	user/grind.asm	/^     e78:	48b5                	li	a7,13$/;"	l
e78	user/sh.asm	/^     e78:	1101                	addi	sp,sp,-32$/;"	l
e7a	user/grind.asm	/^     e7a:	00000073          	ecall$/;"	l
e7a	user/sh.asm	/^     e7a:	ec06                	sd	ra,24(sp)$/;"	l
e7a	user/usertests.asm	/^     e7a:	87e080e7          	jalr	-1922(ra) # 56f4 <printf>$/;"	l
e7c	user/sh.asm	/^     e7c:	e822                	sd	s0,16(sp)$/;"	l
e7e	user/grind.asm	/^     e7e:	8082                	ret$/;"	l
e7e	user/sh.asm	/^     e7e:	1000                	addi	s0,sp,32$/;"	l
e7e	user/usertests.asm	/^     e7e:	4505                	li	a0,1$/;"	l
e8	user/bttest.asm	/^  e8:	1080                	addi	s0,sp,96$/;"	l
e8	user/call.asm	/^  e8:	00054783          	lbu	a5,0(a0)$/;"	l
e8	user/grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	user/grind.asm	/^      e8:	00001997          	auipc	s3,0x1$/;"	l
e8	user/kill.asm	/^  e8:	00b78023          	sb	a1,0(a5)$/;"	l
e8	user/ln.asm	/^  e8:	0785                	addi	a5,a5,1$/;"	l
e8	user/ls.asm	/^  e8:	d9840593          	addi	a1,s0,-616$/;"	l
e8	user/mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/wc.asm	/^  e8:	85450513          	addi	a0,a0,-1964 # 938 <malloc+0xf4>$/;"	l
e8	user/zombie.asm	/^  e8:	e4a6                	sd	s1,72(sp)$/;"	l
e80	user/grind.asm	/^     e80:	48b9                	li	a7,14$/;"	l
e80	user/sh.asm	/^     e80:	feb407a3          	sb	a1,-17(s0)$/;"	l
e80	user/usertests.asm	/^     e80:	00004097          	auipc	ra,0x4$/;"	l
e82	user/grind.asm	/^     e82:	00000073          	ecall$/;"	l
e84	user/sh.asm	/^     e84:	4605                	li	a2,1$/;"	l
e84	user/usertests.asm	/^     e84:	4ea080e7          	jalr	1258(ra) # 536a <exit>$/;"	l
e86	user/grind.asm	/^     e86:	8082                	ret$/;"	l
e86	user/sh.asm	/^     e86:	fef40593          	addi	a1,s0,-17$/;"	l
e88	user/grind.asm	/^     e88:	48d9                	li	a7,22$/;"	l
e88	user/usertests.asm	/^     e88:	85ca                	mv	a1,s2$/;"	l
e8a	user/grind.asm	/^     e8a:	00000073          	ecall$/;"	l
e8a	user/sh.asm	/^     e8a:	00000097          	auipc	ra,0x0$/;"	l
e8a	user/usertests.asm	/^     e8a:	00005517          	auipc	a0,0x5$/;"	l
e8e	user/grind.asm	/^     e8e:	8082                	ret$/;"	l
e8e	user/sh.asm	/^     e8e:	f5e080e7          	jalr	-162(ra) # de8 <write>$/;"	l
e8e	user/usertests.asm	/^     e8e:	01650513          	addi	a0,a0,22 # 5ea0 <malloc+0x6f4>$/;"	l
e90	user/grind.asm	/^     e90:	48dd                	li	a7,23$/;"	l
e92	user/grind.asm	/^     e92:	00000073          	ecall$/;"	l
e92	user/sh.asm	/^     e92:	60e2                	ld	ra,24(sp)$/;"	l
e92	user/usertests.asm	/^     e92:	00005097          	auipc	ra,0x5$/;"	l
e94	user/sh.asm	/^     e94:	6442                	ld	s0,16(sp)$/;"	l
e96	user/grind.asm	/^     e96:	8082                	ret$/;"	l
e96	user/sh.asm	/^     e96:	6105                	addi	sp,sp,32$/;"	l
e96	user/usertests.asm	/^     e96:	862080e7          	jalr	-1950(ra) # 56f4 <printf>$/;"	l
e98	user/grind.asm	/^     e98:	1101                	addi	sp,sp,-32$/;"	l
e98	user/sh.asm	/^     e98:	8082                	ret$/;"	l
e9a	user/grind.asm	/^     e9a:	ec06                	sd	ra,24(sp)$/;"	l
e9a	user/sh.asm	/^     e9a:	7139                	addi	sp,sp,-64$/;"	l
e9a	user/usertests.asm	/^     e9a:	4505                	li	a0,1$/;"	l
e9c	user/grind.asm	/^     e9c:	e822                	sd	s0,16(sp)$/;"	l
e9c	user/sh.asm	/^     e9c:	fc06                	sd	ra,56(sp)$/;"	l
e9c	user/usertests.asm	/^     e9c:	00004097          	auipc	ra,0x4$/;"	l
e9e	user/grind.asm	/^     e9e:	1000                	addi	s0,sp,32$/;"	l
e9e	user/sh.asm	/^     e9e:	f822                	sd	s0,48(sp)$/;"	l
ea	user/alarmtest.asm	/^  ea:	4509                	li	a0,2$/;"	l
ea	user/bttest.asm	/^  ea:	8baa                	mv	s7,a0$/;"	l
ea	user/cat.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	user/echo.asm	/^  ea:	fb7d                	bnez	a4,e0 <strlen+0x14>$/;"	l
ea	user/forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	user/grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	user/init.asm	/^  ea:	608080e7          	jalr	1544(ra) # 6ee <printf>$/;"	l
ea	user/ln.asm	/^  ea:	fee79de3          	bne	a5,a4,e4 <memset+0x12>$/;"	l
ea	user/mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/sh.asm	/^      ea:	f6e080e7          	jalr	-146(ra) # 54 <panic>$/;"	l
ea	user/stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	user/usertests.asm	/^      ea:	7f250513          	addi	a0,a0,2034 # 58d8 <malloc+0x12c>$/;"	l
ea	user/zombie.asm	/^  ea:	e0ca                	sd	s2,64(sp)$/;"	l
ea0	user/grind.asm	/^     ea0:	feb407a3          	sb	a1,-17(s0)$/;"	l
ea0	user/sh.asm	/^     ea0:	f426                	sd	s1,40(sp)$/;"	l
ea0	user/usertests.asm	/^     ea0:	4ce080e7          	jalr	1230(ra) # 536a <exit>$/;"	l
ea2	user/sh.asm	/^     ea2:	f04a                	sd	s2,32(sp)$/;"	l
ea4	user/grind.asm	/^     ea4:	4605                	li	a2,1$/;"	l
ea4	user/sh.asm	/^     ea4:	ec4e                	sd	s3,24(sp)$/;"	l
ea4	user/usertests.asm	/^     ea4:	85ca                	mv	a1,s2$/;"	l
ea6	user/grind.asm	/^     ea6:	fef40593          	addi	a1,s0,-17$/;"	l
ea6	user/sh.asm	/^     ea6:	0080                	addi	s0,sp,64$/;"	l
ea6	user/usertests.asm	/^     ea6:	00005517          	auipc	a0,0x5$/;"	l
ea8	user/sh.asm	/^     ea8:	84aa                	mv	s1,a0$/;"	l
eaa	user/grind.asm	/^     eaa:	00000097          	auipc	ra,0x0$/;"	l
eaa	user/sh.asm	/^     eaa:	c299                	beqz	a3,eb0 <printint+0x16>$/;"	l
eaa	user/usertests.asm	/^     eaa:	01250513          	addi	a0,a0,18 # 5eb8 <malloc+0x70c>$/;"	l
eac	user/sh.asm	/^     eac:	0805c963          	bltz	a1,f3e <printint+0xa4>$/;"	l
eae	user/grind.asm	/^     eae:	f5e080e7          	jalr	-162(ra) # e08 <write>$/;"	l
eae	user/usertests.asm	/^     eae:	00005097          	auipc	ra,0x5$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	user/sh.asm	/^     eb0:	2581                	sext.w	a1,a1$/;"	l
eb2	user/grind.asm	/^     eb2:	60e2                	ld	ra,24(sp)$/;"	l
eb2	user/sh.asm	/^     eb2:	4881                	li	a7,0$/;"	l
eb2	user/usertests.asm	/^     eb2:	846080e7          	jalr	-1978(ra) # 56f4 <printf>$/;"	l
eb4	user/grind.asm	/^     eb4:	6442                	ld	s0,16(sp)$/;"	l
eb4	user/sh.asm	/^     eb4:	fc040693          	addi	a3,s0,-64$/;"	l
eb6	user/grind.asm	/^     eb6:	6105                	addi	sp,sp,32$/;"	l
eb6	user/usertests.asm	/^     eb6:	4505                	li	a0,1$/;"	l
eb8	user/grind.asm	/^     eb8:	8082                	ret$/;"	l
eb8	user/sh.asm	/^     eb8:	4701                	li	a4,0$/;"	l
eb8	user/usertests.asm	/^     eb8:	00004097          	auipc	ra,0x4$/;"	l
eba	user/grind.asm	/^     eba:	7139                	addi	sp,sp,-64$/;"	l
eba	user/sh.asm	/^     eba:	2601                	sext.w	a2,a2$/;"	l
ebc	user/grind.asm	/^     ebc:	fc06                	sd	ra,56(sp)$/;"	l
ebc	user/sh.asm	/^     ebc:	00000517          	auipc	a0,0x0$/;"	l
ebc	user/usertests.asm	/^     ebc:	4b2080e7          	jalr	1202(ra) # 536a <exit>$/;"	l
ebe	user/grind.asm	/^     ebe:	f822                	sd	s0,48(sp)$/;"	l
ec	user/alarmtest.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/bttest.asm	/^  ec:	8a2e                	mv	s4,a1$/;"	l
ec	user/call.asm	/^  ec:	fbfd                	bnez	a5,e2 <strchr+0xc>$/;"	l
ec	user/cat.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/echo.asm	/^  ec:	6422                	ld	s0,8(sp)$/;"	l
ec	user/grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/grind.asm	/^      ec:	25898993          	addi	s3,s3,600 # 1340 <malloc+0x116>$/;"	l
ec	user/kill.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	user/ls.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	user/wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/zombie.asm	/^  ec:	fc4e                	sd	s3,56(sp)$/;"	l
ec0	user/grind.asm	/^     ec0:	f426                	sd	s1,40(sp)$/;"	l
ec0	user/sh.asm	/^     ec0:	5d450513          	addi	a0,a0,1492 # 1490 <digits>$/;"	l
ec0	user/usertests.asm	/^     ec0:	85ca                	mv	a1,s2$/;"	l
ec2	user/grind.asm	/^     ec2:	f04a                	sd	s2,32(sp)$/;"	l
ec2	user/usertests.asm	/^     ec2:	00005517          	auipc	a0,0x5$/;"	l
ec4	user/grind.asm	/^     ec4:	ec4e                	sd	s3,24(sp)$/;"	l
ec4	user/sh.asm	/^     ec4:	883a                	mv	a6,a4$/;"	l
ec6	user/grind.asm	/^     ec6:	0080                	addi	s0,sp,64$/;"	l
ec6	user/sh.asm	/^     ec6:	2705                	addiw	a4,a4,1$/;"	l
ec6	user/usertests.asm	/^     ec6:	01650513          	addi	a0,a0,22 # 5ed8 <malloc+0x72c>$/;"	l
ec8	user/grind.asm	/^     ec8:	84aa                	mv	s1,a0$/;"	l
ec8	user/sh.asm	/^     ec8:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
eca	user/grind.asm	/^     eca:	c299                	beqz	a3,ed0 <printint+0x16>$/;"	l
eca	user/usertests.asm	/^     eca:	00005097          	auipc	ra,0x5$/;"	l
ecc	user/grind.asm	/^     ecc:	0805c963          	bltz	a1,f5e <printint+0xa4>$/;"	l
ecc	user/sh.asm	/^     ecc:	1782                	slli	a5,a5,0x20$/;"	l
ece	user/sh.asm	/^     ece:	9381                	srli	a5,a5,0x20$/;"	l
ece	user/usertests.asm	/^     ece:	82a080e7          	jalr	-2006(ra) # 56f4 <printf>$/;"	l
ecmd	user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	user/grind.asm	/^     ed0:	2581                	sext.w	a1,a1$/;"	l
ed0	user/sh.asm	/^     ed0:	97aa                	add	a5,a5,a0$/;"	l
ed2	user/grind.asm	/^     ed2:	4881                	li	a7,0$/;"	l
ed2	user/sh.asm	/^     ed2:	0007c783          	lbu	a5,0(a5)$/;"	l
ed2	user/usertests.asm	/^     ed2:	4505                	li	a0,1$/;"	l
ed4	user/grind.asm	/^     ed4:	fc040693          	addi	a3,s0,-64$/;"	l
ed4	user/usertests.asm	/^     ed4:	00004097          	auipc	ra,0x4$/;"	l
ed6	user/sh.asm	/^     ed6:	00f68023          	sb	a5,0(a3)$/;"	l
ed8	user/grind.asm	/^     ed8:	4701                	li	a4,0$/;"	l
ed8	user/usertests.asm	/^     ed8:	496080e7          	jalr	1174(ra) # 536a <exit>$/;"	l
eda	user/grind.asm	/^     eda:	2601                	sext.w	a2,a2$/;"	l
eda	user/sh.asm	/^     eda:	0005879b          	sext.w	a5,a1$/;"	l
edc	user/grind.asm	/^     edc:	00000517          	auipc	a0,0x0$/;"	l
edc	user/usertests.asm	/^     edc:	85ca                	mv	a1,s2$/;"	l
ede	user/sh.asm	/^     ede:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
ede	user/usertests.asm	/^     ede:	00005517          	auipc	a0,0x5$/;"	l
ee	user/bttest.asm	/^  ee:	892a                	mv	s2,a0$/;"	l
ee	user/call.asm	/^  ee:	4501                	li	a0,0$/;"	l
ee	user/echo.asm	/^  ee:	0141                	addi	sp,sp,16$/;"	l
ee	user/forktest.asm	/^  ee:	39e50513          	addi	a0,a0,926 # 488 <sigreturn+0x56>$/;"	l
ee	user/init.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	user/kill.asm	/^  ee:	fee79de3          	bne	a5,a4,e8 <memset+0x12>$/;"	l
ee	user/ln.asm	/^  ee:	6422                	ld	s0,8(sp)$/;"	l
ee	user/mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/sh.asm	/^      ee:	6508                	ld	a0,8(a0)$/;"	l
ee	user/stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	user/usertests.asm	/^      ee:	00005097          	auipc	ra,0x5$/;"	l
ee	user/zombie.asm	/^  ee:	f852                	sd	s4,48(sp)$/;"	l
ee0	user/grind.asm	/^     ee0:	7b450513          	addi	a0,a0,1972 # 1690 <digits>$/;"	l
ee2	user/sh.asm	/^     ee2:	0685                	addi	a3,a3,1$/;"	l
ee2	user/usertests.asm	/^     ee2:	02a50513          	addi	a0,a0,42 # 5f08 <malloc+0x75c>$/;"	l
ee4	user/grind.asm	/^     ee4:	883a                	mv	a6,a4$/;"	l
ee4	user/sh.asm	/^     ee4:	fec7f0e3          	bgeu	a5,a2,ec4 <printint+0x2a>$/;"	l
ee6	user/grind.asm	/^     ee6:	2705                	addiw	a4,a4,1$/;"	l
ee6	user/usertests.asm	/^     ee6:	00005097          	auipc	ra,0x5$/;"	l
ee8	user/grind.asm	/^     ee8:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
ee8	user/sh.asm	/^     ee8:	00088c63          	beqz	a7,f00 <printint+0x66>$/;"	l
eea	user/usertests.asm	/^     eea:	80e080e7          	jalr	-2034(ra) # 56f4 <printf>$/;"	l
eec	user/grind.asm	/^     eec:	1782                	slli	a5,a5,0x20$/;"	l
eec	user/sh.asm	/^     eec:	fd070793          	addi	a5,a4,-48$/;"	l
eee	user/grind.asm	/^     eee:	9381                	srli	a5,a5,0x20$/;"	l
eee	user/usertests.asm	/^     eee:	4505                	li	a0,1$/;"	l
ef0	user/grind.asm	/^     ef0:	97aa                	add	a5,a5,a0$/;"	l
ef0	user/sh.asm	/^     ef0:	00878733          	add	a4,a5,s0$/;"	l
ef0	user/usertests.asm	/^     ef0:	00004097          	auipc	ra,0x4$/;"	l
ef2	user/grind.asm	/^     ef2:	0007c783          	lbu	a5,0(a5)$/;"	l
ef4	user/sh.asm	/^     ef4:	02d00793          	li	a5,45$/;"	l
ef4	user/usertests.asm	/^     ef4:	47a080e7          	jalr	1146(ra) # 536a <exit>$/;"	l
ef6	user/grind.asm	/^     ef6:	00f68023          	sb	a5,0(a3)$/;"	l
ef8	user/sh.asm	/^     ef8:	fef70823          	sb	a5,-16(a4)$/;"	l
ef8	user/usertests.asm	/^     ef8:	85ca                	mv	a1,s2$/;"	l
efa	user/grind.asm	/^     efa:	0005879b          	sext.w	a5,a1$/;"	l
efa	user/usertests.asm	/^     efa:	00005517          	auipc	a0,0x5$/;"	l
efc	user/sh.asm	/^     efc:	0028071b          	addiw	a4,a6,2$/;"	l
efe	user/grind.asm	/^     efe:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
efe	user/usertests.asm	/^     efe:	02650513          	addi	a0,a0,38 # 5f20 <malloc+0x774>$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
ehsize	kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
either_copyin	kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f
either_copyout	kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f
elems	kernel/virtio.h	/^  struct VRingUsedElem elems[NUM];$/;"	m	struct:UsedArea	typeref:struct:UsedArea::VRingUsedElem
elf	kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	kernel/elf.h	/^struct elfhdr {$/;"	s
empty	kernel/kernel.asm	/^  empty = 0;$/;"	d
end_op	kernel/log.c	/^end_op(void)$/;"	f
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr
entry	user/usys.pl	/^sub entry {$/;"	s
epc	kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe
err	kernel/kernel.asm	/^ err:$/;"	l
es	user/sh.asm	/^  es = s + strlen(s);$/;"	d
exec	kernel/exec.c	/^exec(char *path, char **argv)$/;"	f
exec	user/alarmtest.asm	/^exec:$/;"	l
exec	user/bttest.asm	/^exec:$/;"	l
exec	user/call.asm	/^exec:$/;"	l
exec	user/cat.asm	/^exec:$/;"	l
exec	user/echo.asm	/^exec:$/;"	l
exec	user/forktest.asm	/^exec:$/;"	l
exec	user/grep.asm	/^exec:$/;"	l
exec	user/grind.asm	/^exec:$/;"	l
exec	user/init.asm	/^exec:$/;"	l
exec	user/kill.asm	/^exec:$/;"	l
exec	user/ln.asm	/^exec:$/;"	l
exec	user/ls.asm	/^exec:$/;"	l
exec	user/mkdir.asm	/^exec:$/;"	l
exec	user/rm.asm	/^exec:$/;"	l
exec	user/sh.asm	/^exec:$/;"	l
exec	user/stressfs.asm	/^exec:$/;"	l
exec	user/usertests.asm	/^exec:$/;"	l
exec	user/usys.S	/^exec:$/;"	l
exec	user/wc.asm	/^exec:$/;"	l
exec	user/zombie.asm	/^exec:$/;"	l
execcmd	user/sh.c	/^execcmd(void)$/;"	f
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
execout	user/usertests.c	/^execout(char *s)$/;"	f
exectest	user/usertests.c	/^exectest(char *s)$/;"	f
exit	kernel/proc.c	/^exit(int status)$/;"	f
exit	user/alarmtest.asm	/^exit:$/;"	l
exit	user/bttest.asm	/^exit:$/;"	l
exit	user/call.asm	/^exit:$/;"	l
exit	user/cat.asm	/^exit:$/;"	l
exit	user/echo.asm	/^exit:$/;"	l
exit	user/forktest.asm	/^exit:$/;"	l
exit	user/grep.asm	/^exit:$/;"	l
exit	user/grind.asm	/^exit:$/;"	l
exit	user/init.asm	/^exit:$/;"	l
exit	user/initcode.S	/^exit:$/;"	l
exit	user/initcode.asm	/^exit:$/;"	l
exit	user/kill.asm	/^exit:$/;"	l
exit	user/ln.asm	/^exit:$/;"	l
exit	user/ls.asm	/^exit:$/;"	l
exit	user/mkdir.asm	/^exit:$/;"	l
exit	user/rm.asm	/^exit:$/;"	l
exit	user/sh.asm	/^exit:$/;"	l
exit	user/stressfs.asm	/^exit:$/;"	l
exit	user/usertests.asm	/^exit:$/;"	l
exit	user/usys.S	/^exit:$/;"	l
exit	user/wc.asm	/^exit:$/;"	l
exit	user/zombie.asm	/^exit:$/;"	l
exitiputtest	user/usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	user/usertests.c	/^exitwait(char *s)$/;"	f
extern	kernel/kernel.asm	/^extern int devintr();$/;"	l
f	user/call.c	/^int f(int x) {$/;"	f
f0	user/alarmtest.asm	/^  f0:	5e6080e7          	jalr	1510(ra) # 6d2 <sigalarm>$/;"	l
f0	user/bttest.asm	/^  f0:	4481                	li	s1,0$/;"	l
f0	user/call.asm	/^  f0:	6422                	ld	s0,8(sp)$/;"	l
f0	user/cat.asm	/^  f0:	f14080e7          	jalr	-236(ra) # 0 <cat>$/;"	l
f0	user/echo.asm	/^  f0:	8082                	ret$/;"	l
f0	user/grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	user/grind.asm	/^      f0:	c489                	beqz	s1,fa <go+0x82>$/;"	l
f0	user/init.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/ln.asm	/^  f0:	0141                	addi	sp,sp,16$/;"	l
f0	user/ls.asm	/^  f0:	4aa080e7          	jalr	1194(ra) # 596 <fstat>$/;"	l
f0	user/mkdir.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/rm.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/sh.asm	/^      f0:	c515                	beqz	a0,11c <runcmd+0x74>$/;"	l
f0	user/stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/wc.asm	/^  f0:	6a0080e7          	jalr	1696(ra) # 78c <printf>$/;"	l
f0	user/zombie.asm	/^  f0:	f456                	sd	s5,40(sp)$/;"	l
f00	user/sh.asm	/^     f00:	02e05863          	blez	a4,f30 <printint+0x96>$/;"	l
f02	user/grind.asm	/^     f02:	0685                	addi	a3,a3,1$/;"	l
f02	user/usertests.asm	/^     f02:	00004097          	auipc	ra,0x4$/;"	l
f04	user/grind.asm	/^     f04:	fec7f0e3          	bgeu	a5,a2,ee4 <printint+0x2a>$/;"	l
f04	user/sh.asm	/^     f04:	fc040793          	addi	a5,s0,-64$/;"	l
f06	user/usertests.asm	/^     f06:	7f2080e7          	jalr	2034(ra) # 56f4 <printf>$/;"	l
f08	user/grind.asm	/^     f08:	00088c63          	beqz	a7,f20 <printint+0x66>$/;"	l
f08	user/sh.asm	/^     f08:	00e78933          	add	s2,a5,a4$/;"	l
f0a	user/usertests.asm	/^     f0a:	4505                	li	a0,1$/;"	l
f0c	user/grind.asm	/^     f0c:	fd070793          	addi	a5,a4,-48$/;"	l
f0c	user/sh.asm	/^     f0c:	fff78993          	addi	s3,a5,-1$/;"	l
f0c	user/usertests.asm	/^     f0c:	00004097          	auipc	ra,0x4$/;"	l
f10	user/grind.asm	/^     f10:	00878733          	add	a4,a5,s0$/;"	l
f10	user/sh.asm	/^     f10:	99ba                	add	s3,s3,a4$/;"	l
f10	user/usertests.asm	/^     f10:	45e080e7          	jalr	1118(ra) # 536a <exit>$/;"	l
f12	user/sh.asm	/^     f12:	377d                	addiw	a4,a4,-1$/;"	l
f14	user/grind.asm	/^     f14:	02d00793          	li	a5,45$/;"	l
f14	user/sh.asm	/^     f14:	1702                	slli	a4,a4,0x20$/;"	l
f14	user/usertests.asm	/^     f14:	85ca                	mv	a1,s2$/;"	l
f16	user/sh.asm	/^     f16:	9301                	srli	a4,a4,0x20$/;"	l
f16	user/usertests.asm	/^     f16:	00005517          	auipc	a0,0x5$/;"	l
f18	user/grind.asm	/^     f18:	fef70823          	sb	a5,-16(a4)$/;"	l
f18	user/sh.asm	/^     f18:	40e989b3          	sub	s3,s3,a4$/;"	l
f1a	user/usertests.asm	/^     f1a:	02250513          	addi	a0,a0,34 # 5f38 <malloc+0x78c>$/;"	l
f1c	user/grind.asm	/^     f1c:	0028071b          	addiw	a4,a6,2$/;"	l
f1c	user/sh.asm	/^     f1c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f1e	user/usertests.asm	/^     f1e:	00004097          	auipc	ra,0x4$/;"	l
f2	user/bttest.asm	/^  f2:	4aa9                	li	s5,10$/;"	l
f2	user/call.asm	/^  f2:	0141                	addi	sp,sp,16$/;"	l
f2	user/echo.asm	/^  f2:	4501                	li	a0,0$/;"	l
f2	user/forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	user/grind.asm	/^      f2:	00001997          	auipc	s3,0x1$/;"	l
f2	user/kill.asm	/^  f2:	6422                	ld	s0,8(sp)$/;"	l
f2	user/ln.asm	/^  f2:	8082                	ret$/;"	l
f2	user/mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/sh.asm	/^      f2:	00848593          	addi	a1,s1,8$/;"	l
f2	user/usertests.asm	/^      f2:	606080e7          	jalr	1542(ra) # 56f4 <printf>$/;"	l
f2	user/zombie.asm	/^  f2:	f05a                	sd	s6,32(sp)$/;"	l
f20	user/grind.asm	/^     f20:	02e05863          	blez	a4,f50 <printint+0x96>$/;"	l
f20	user/sh.asm	/^     f20:	8526                	mv	a0,s1$/;"	l
f22	user/sh.asm	/^     f22:	00000097          	auipc	ra,0x0$/;"	l
f22	user/usertests.asm	/^     f22:	7d6080e7          	jalr	2006(ra) # 56f4 <printf>$/;"	l
f24	user/grind.asm	/^     f24:	fc040793          	addi	a5,s0,-64$/;"	l
f26	user/sh.asm	/^     f26:	f56080e7          	jalr	-170(ra) # e78 <putc>$/;"	l
f26	user/usertests.asm	/^     f26:	4505                	li	a0,1$/;"	l
f28	user/grind.asm	/^     f28:	00e78933          	add	s2,a5,a4$/;"	l
f28	user/usertests.asm	/^     f28:	00004097          	auipc	ra,0x4$/;"	l
f2a	user/sh.asm	/^     f2a:	197d                	addi	s2,s2,-1$/;"	l
f2c	user/grind.asm	/^     f2c:	fff78993          	addi	s3,a5,-1$/;"	l
f2c	user/sh.asm	/^     f2c:	ff3918e3          	bne	s2,s3,f1c <printint+0x82>$/;"	l
f2c	user/usertests.asm	/^     f2c:	442080e7          	jalr	1090(ra) # 536a <exit>$/;"	l
f30	user/grind.asm	/^     f30:	99ba                	add	s3,s3,a4$/;"	l
f30	user/sh.asm	/^     f30:	70e2                	ld	ra,56(sp)$/;"	l
f30	user/usertests.asm	/^     f30:	85ca                	mv	a1,s2$/;"	l
f32	user/grind.asm	/^     f32:	377d                	addiw	a4,a4,-1$/;"	l
f32	user/sh.asm	/^     f32:	7442                	ld	s0,48(sp)$/;"	l
f32	user/usertests.asm	/^     f32:	00005517          	auipc	a0,0x5$/;"	l
f34	user/grind.asm	/^     f34:	1702                	slli	a4,a4,0x20$/;"	l
f34	user/sh.asm	/^     f34:	74a2                	ld	s1,40(sp)$/;"	l
f36	user/grind.asm	/^     f36:	9301                	srli	a4,a4,0x20$/;"	l
f36	user/sh.asm	/^     f36:	7902                	ld	s2,32(sp)$/;"	l
f36	user/usertests.asm	/^     f36:	02e50513          	addi	a0,a0,46 # 5f60 <malloc+0x7b4>$/;"	l
f38	user/grind.asm	/^     f38:	40e989b3          	sub	s3,s3,a4$/;"	l
f38	user/sh.asm	/^     f38:	69e2                	ld	s3,24(sp)$/;"	l
f3a	user/sh.asm	/^     f3a:	6121                	addi	sp,sp,64$/;"	l
f3a	user/usertests.asm	/^     f3a:	00004097          	auipc	ra,0x4$/;"	l
f3c	user/grind.asm	/^     f3c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f3c	user/sh.asm	/^     f3c:	8082                	ret$/;"	l
f3e	user/sh.asm	/^     f3e:	40b005bb          	negw	a1,a1$/;"	l
f3e	user/usertests.asm	/^     f3e:	7ba080e7          	jalr	1978(ra) # 56f4 <printf>$/;"	l
f4	user/alarmtest.asm	/^  f4:	4481                	li	s1,0$/;"	l
f4	user/bttest.asm	/^  f4:	4b35                	li	s6,13$/;"	l
f4	user/call.asm	/^  f4:	8082                	ret$/;"	l
f4	user/cat.asm	/^  f4:	4501                	li	a0,0$/;"	l
f4	user/echo.asm	/^  f4:	bfe5                	j	ec <strlen+0x20>$/;"	l
f4	user/grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	user/init.asm	/^  f4:	274080e7          	jalr	628(ra) # 364 <exit>$/;"	l
f4	user/kill.asm	/^  f4:	0141                	addi	sp,sp,16$/;"	l
f4	user/ln.asm	/^  f4:	1141                	addi	sp,sp,-16$/;"	l
f4	user/ls.asm	/^  f4:	08054163          	bltz	a0,176 <ls+0xc2>$/;"	l
f4	user/mkdir.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/rm.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/stressfs.asm	/^  f4:	2b0080e7          	jalr	688(ra) # 3a0 <close>$/;"	l
f4	user/wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	user/zombie.asm	/^  f4:	ec5e                	sd	s7,24(sp)$/;"	l
f40	user/grind.asm	/^     f40:	8526                	mv	a0,s1$/;"	l
f42	user/grind.asm	/^     f42:	00000097          	auipc	ra,0x0$/;"	l
f42	user/sh.asm	/^     f42:	4885                	li	a7,1$/;"	l
f42	user/usertests.asm	/^     f42:	4505                	li	a0,1$/;"	l
f44	user/sh.asm	/^     f44:	bf85                	j	eb4 <printint+0x1a>$/;"	l
f44	user/usertests.asm	/^     f44:	00004097          	auipc	ra,0x4$/;"	l
f46	user/grind.asm	/^     f46:	f56080e7          	jalr	-170(ra) # e98 <putc>$/;"	l
f46	user/sh.asm	/^     f46:	7119                	addi	sp,sp,-128$/;"	l
f48	user/sh.asm	/^     f48:	fc86                	sd	ra,120(sp)$/;"	l
f48	user/usertests.asm	/^     f48:	426080e7          	jalr	1062(ra) # 536a <exit>$/;"	l
f4a	user/grind.asm	/^     f4a:	197d                	addi	s2,s2,-1$/;"	l
f4a	user/sh.asm	/^     f4a:	f8a2                	sd	s0,112(sp)$/;"	l
f4c	user/grind.asm	/^     f4c:	ff3918e3          	bne	s2,s3,f3c <printint+0x82>$/;"	l
f4c	user/sh.asm	/^     f4c:	f4a6                	sd	s1,104(sp)$/;"	l
f4c	user/usertests.asm	/^     f4c:	85ca                	mv	a1,s2$/;"	l
f4e	user/sh.asm	/^     f4e:	f0ca                	sd	s2,96(sp)$/;"	l
f4e	user/usertests.asm	/^     f4e:	00005517          	auipc	a0,0x5$/;"	l
f50	user/grind.asm	/^     f50:	70e2                	ld	ra,56(sp)$/;"	l
f50	user/sh.asm	/^     f50:	ecce                	sd	s3,88(sp)$/;"	l
f52	user/grind.asm	/^     f52:	7442                	ld	s0,48(sp)$/;"	l
f52	user/sh.asm	/^     f52:	e8d2                	sd	s4,80(sp)$/;"	l
f52	user/usertests.asm	/^     f52:	04250513          	addi	a0,a0,66 # 5f90 <malloc+0x7e4>$/;"	l
f54	user/grind.asm	/^     f54:	74a2                	ld	s1,40(sp)$/;"	l
f54	user/sh.asm	/^     f54:	e4d6                	sd	s5,72(sp)$/;"	l
f56	user/grind.asm	/^     f56:	7902                	ld	s2,32(sp)$/;"	l
f56	user/sh.asm	/^     f56:	e0da                	sd	s6,64(sp)$/;"	l
f56	user/usertests.asm	/^     f56:	00004097          	auipc	ra,0x4$/;"	l
f58	user/grind.asm	/^     f58:	69e2                	ld	s3,24(sp)$/;"	l
f58	user/sh.asm	/^     f58:	fc5e                	sd	s7,56(sp)$/;"	l
f5a	user/grind.asm	/^     f5a:	6121                	addi	sp,sp,64$/;"	l
f5a	user/sh.asm	/^     f5a:	f862                	sd	s8,48(sp)$/;"	l
f5a	user/usertests.asm	/^     f5a:	79e080e7          	jalr	1950(ra) # 56f4 <printf>$/;"	l
f5c	user/grind.asm	/^     f5c:	8082                	ret$/;"	l
f5c	user/sh.asm	/^     f5c:	f466                	sd	s9,40(sp)$/;"	l
f5e	user/grind.asm	/^     f5e:	40b005bb          	negw	a1,a1$/;"	l
f5e	user/sh.asm	/^     f5e:	f06a                	sd	s10,32(sp)$/;"	l
f5e	user/usertests.asm	/^     f5e:	4505                	li	a0,1$/;"	l
f6	user/alarmtest.asm	/^  f6:	000f4937          	lui	s2,0xf4$/;"	l
f6	user/bttest.asm	/^  f6:	89a6                	mv	s3,s1$/;"	l
f6	user/call.asm	/^  f6:	4501                	li	a0,0$/;"	l
f6	user/cat.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/echo.asm	/^  f6:	1141                	addi	sp,sp,-16$/;"	l
f6	user/forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	user/grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	user/grind.asm	/^      f6:	24698993          	addi	s3,s3,582 # 1338 <malloc+0x10e>$/;"	l
f6	user/kill.asm	/^  f6:	8082                	ret$/;"	l
f6	user/ln.asm	/^  f6:	e422                	sd	s0,8(sp)$/;"	l
f6	user/mkdir.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/rm.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/sh.asm	/^      f6:	00001097          	auipc	ra,0x1$/;"	l
f6	user/usertests.asm	/^      f6:	4505                	li	a0,1$/;"	l
f6	user/wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/zombie.asm	/^  f6:	1080                	addi	s0,sp,96$/;"	l
f60	user/sh.asm	/^     f60:	ec6e                	sd	s11,24(sp)$/;"	l
f60	user/usertests.asm	/^     f60:	00004097          	auipc	ra,0x4$/;"	l
f62	user/grind.asm	/^     f62:	4885                	li	a7,1$/;"	l
f62	user/sh.asm	/^     f62:	0100                	addi	s0,sp,128$/;"	l
f64	user/grind.asm	/^     f64:	bf85                	j	ed4 <printint+0x1a>$/;"	l
f64	user/sh.asm	/^     f64:	0005c903          	lbu	s2,0(a1)$/;"	l
f64	user/usertests.asm	/^     f64:	40a080e7          	jalr	1034(ra) # 536a <exit>$/;"	l
f66	user/grind.asm	/^     f66:	7119                	addi	sp,sp,-128$/;"	l
f68	user/grind.asm	/^     f68:	fc86                	sd	ra,120(sp)$/;"	l
f68	user/sh.asm	/^     f68:	18090f63          	beqz	s2,1106 <vprintf+0x1c0>$/;"	l
f68	user/usertests.asm	/^     f68:	715d                	addi	sp,sp,-80$/;"	l
f6a	user/grind.asm	/^     f6a:	f8a2                	sd	s0,112(sp)$/;"	l
f6a	user/usertests.asm	/^     f6a:	e486                	sd	ra,72(sp)$/;"	l
f6c	user/grind.asm	/^     f6c:	f4a6                	sd	s1,104(sp)$/;"	l
f6c	user/sh.asm	/^     f6c:	8aaa                	mv	s5,a0$/;"	l
f6c	user/usertests.asm	/^     f6c:	e0a2                	sd	s0,64(sp)$/;"	l
f6e	user/grind.asm	/^     f6e:	f0ca                	sd	s2,96(sp)$/;"	l
f6e	user/sh.asm	/^     f6e:	8b32                	mv	s6,a2$/;"	l
f6e	user/usertests.asm	/^     f6e:	fc26                	sd	s1,56(sp)$/;"	l
f70	user/grind.asm	/^     f70:	ecce                	sd	s3,88(sp)$/;"	l
f70	user/sh.asm	/^     f70:	00158493          	addi	s1,a1,1$/;"	l
f70	user/usertests.asm	/^     f70:	f84a                	sd	s2,48(sp)$/;"	l
f72	user/grind.asm	/^     f72:	e8d2                	sd	s4,80(sp)$/;"	l
f72	user/usertests.asm	/^     f72:	f44e                	sd	s3,40(sp)$/;"	l
f74	user/grind.asm	/^     f74:	e4d6                	sd	s5,72(sp)$/;"	l
f74	user/sh.asm	/^     f74:	4981                	li	s3,0$/;"	l
f74	user/usertests.asm	/^     f74:	f052                	sd	s4,32(sp)$/;"	l
f76	user/grind.asm	/^     f76:	e0da                	sd	s6,64(sp)$/;"	l
f76	user/sh.asm	/^     f76:	02500a13          	li	s4,37$/;"	l
f76	user/usertests.asm	/^     f76:	ec56                	sd	s5,24(sp)$/;"	l
f78	user/grind.asm	/^     f78:	fc5e                	sd	s7,56(sp)$/;"	l
f78	user/usertests.asm	/^     f78:	e85a                	sd	s6,16(sp)$/;"	l
f7a	user/grind.asm	/^     f7a:	f862                	sd	s8,48(sp)$/;"	l
f7a	user/sh.asm	/^     f7a:	4c55                	li	s8,21$/;"	l
f7a	user/usertests.asm	/^     f7a:	0880                	addi	s0,sp,80$/;"	l
f7c	user/grind.asm	/^     f7c:	f466                	sd	s9,40(sp)$/;"	l
f7c	user/sh.asm	/^     f7c:	00000c97          	auipc	s9,0x0$/;"	l
f7c	user/usertests.asm	/^     f7c:	89aa                	mv	s3,a0$/;"	l
f7e	user/grind.asm	/^     f7e:	f06a                	sd	s10,32(sp)$/;"	l
f7e	user/usertests.asm	/^     f7e:	00005517          	auipc	a0,0x5$/;"	l
f8	user/bttest.asm	/^  f8:	2485                	addiw	s1,s1,1$/;"	l
f8	user/call.asm	/^  f8:	bfe5                	j	f0 <strchr+0x1a>$/;"	l
f8	user/echo.asm	/^  f8:	e422                	sd	s0,8(sp)$/;"	l
f8	user/grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	user/init.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	user/kill.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	user/ln.asm	/^  f8:	0800                	addi	s0,sp,16$/;"	l
f8	user/ls.asm	/^  f8:	da041783          	lh	a5,-608(s0)$/;"	l
f8	user/mkdir.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/rm.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	user/usertests.asm	/^      f8:	00005097          	auipc	ra,0x5$/;"	l
f8	user/zombie.asm	/^  f8:	8baa                	mv	s7,a0$/;"	l
f80	user/grind.asm	/^     f80:	ec6e                	sd	s11,24(sp)$/;"	l
f80	user/sh.asm	/^     f80:	4bcc8c93          	addi	s9,s9,1212 # 1438 <malloc+0x22e>$/;"	l
f82	user/grind.asm	/^     f82:	0100                	addi	s0,sp,128$/;"	l
f82	user/usertests.asm	/^     f82:	03250513          	addi	a0,a0,50 # 5fb0 <malloc+0x804>$/;"	l
f84	user/grind.asm	/^     f84:	0005c903          	lbu	s2,0(a1)$/;"	l
f84	user/sh.asm	/^     f84:	02800d93          	li	s11,40$/;"	l
f86	user/usertests.asm	/^     f86:	00004097          	auipc	ra,0x4$/;"	l
f88	user/grind.asm	/^     f88:	18090f63          	beqz	s2,1126 <vprintf+0x1c0>$/;"	l
f88	user/sh.asm	/^     f88:	4d41                	li	s10,16$/;"	l
f8a	user/sh.asm	/^     f8a:	00000b97          	auipc	s7,0x0$/;"	l
f8a	user/usertests.asm	/^     f8a:	434080e7          	jalr	1076(ra) # 53ba <unlink>$/;"	l
f8c	user/grind.asm	/^     f8c:	8aaa                	mv	s5,a0$/;"	l
f8e	user/grind.asm	/^     f8e:	8b32                	mv	s6,a2$/;"	l
f8e	user/sh.asm	/^     f8e:	506b8b93          	addi	s7,s7,1286 # 1490 <digits>$/;"	l
f8e	user/usertests.asm	/^     f8e:	20000593          	li	a1,512$/;"	l
f90	user/grind.asm	/^     f90:	00158493          	addi	s1,a1,1$/;"	l
f92	user/sh.asm	/^     f92:	a839                	j	fb0 <vprintf+0x6a>$/;"	l
f92	user/usertests.asm	/^     f92:	00005517          	auipc	a0,0x5$/;"	l
f94	user/grind.asm	/^     f94:	4981                	li	s3,0$/;"	l
f94	user/sh.asm	/^     f94:	85ca                	mv	a1,s2$/;"	l
f96	user/grind.asm	/^     f96:	02500a13          	li	s4,37$/;"	l
f96	user/sh.asm	/^     f96:	8556                	mv	a0,s5$/;"	l
f96	user/usertests.asm	/^     f96:	01e50513          	addi	a0,a0,30 # 5fb0 <malloc+0x804>$/;"	l
f98	user/sh.asm	/^     f98:	00000097          	auipc	ra,0x0$/;"	l
f9a	user/grind.asm	/^     f9a:	4c55                	li	s8,21$/;"	l
f9a	user/usertests.asm	/^     f9a:	00004097          	auipc	ra,0x4$/;"	l
f9c	user/grind.asm	/^     f9c:	00000c97          	auipc	s9,0x0$/;"	l
f9c	user/sh.asm	/^     f9c:	ee0080e7          	jalr	-288(ra) # e78 <putc>$/;"	l
f9e	user/usertests.asm	/^     f9e:	410080e7          	jalr	1040(ra) # 53aa <open>$/;"	l
fa	user/alarmtest.asm	/^  fa:	2409091b          	addiw	s2,s2,576 # f4240 <__global_pointer$+0xf2cd7>$/;"	l
fa	user/bttest.asm	/^  fa:	0344d863          	bge	s1,s4,12a <gets+0x56>$/;"	l
fa	user/call.asm	/^  fa:	711d                	addi	sp,sp,-96$/;"	l
fa	user/cat.asm	/^  fa:	294080e7          	jalr	660(ra) # 38a <exit>$/;"	l
fa	user/echo.asm	/^  fa:	0800                	addi	s0,sp,16$/;"	l
fa	user/forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	user/grind.asm	/^      fa:	4485                	li	s1,1$/;"	l
fa	user/init.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	user/kill.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	user/ln.asm	/^  fa:	00054783          	lbu	a5,0(a0)$/;"	l
fa	user/sh.asm	/^      fa:	d0a080e7          	jalr	-758(ra) # e00 <exec>$/;"	l
fa	user/stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	user/wc.asm	/^  fa:	30c080e7          	jalr	780(ra) # 402 <exit>$/;"	l
fa	user/zombie.asm	/^  fa:	8a2e                	mv	s4,a1$/;"	l
fa0	user/grind.asm	/^     fa0:	69cc8c93          	addi	s9,s9,1692 # 1638 <malloc+0x40e>$/;"	l
fa0	user/sh.asm	/^     fa0:	a019                	j	fa6 <vprintf+0x60>$/;"	l
fa2	user/sh.asm	/^     fa2:	01498d63          	beq	s3,s4,fbc <vprintf+0x76>$/;"	l
fa2	user/usertests.asm	/^     fa2:	0c054963          	bltz	a0,1074 <bigdir+0x10c>$/;"	l
fa4	user/grind.asm	/^     fa4:	02800d93          	li	s11,40$/;"	l
fa6	user/sh.asm	/^     fa6:	0485                	addi	s1,s1,1$/;"	l
fa6	user/usertests.asm	/^     fa6:	00004097          	auipc	ra,0x4$/;"	l
fa8	user/grind.asm	/^     fa8:	4d41                	li	s10,16$/;"	l
fa8	user/sh.asm	/^     fa8:	fff4c903          	lbu	s2,-1(s1)$/;"	l
faa	user/grind.asm	/^     faa:	00000b97          	auipc	s7,0x0$/;"	l
faa	user/usertests.asm	/^     faa:	3ec080e7          	jalr	1004(ra) # 5392 <close>$/;"	l
fac	user/sh.asm	/^     fac:	14090d63          	beqz	s2,1106 <vprintf+0x1c0>$/;"	l
fae	user/grind.asm	/^     fae:	6e6b8b93          	addi	s7,s7,1766 # 1690 <digits>$/;"	l
fae	user/usertests.asm	/^     fae:	4901                	li	s2,0$/;"	l
fail	user/usertests.asm	/^        fail = 1;$/;"	d
fb0	user/sh.asm	/^     fb0:	fe0999e3          	bnez	s3,fa2 <vprintf+0x5c>$/;"	l
fb0	user/usertests.asm	/^     fb0:	07800a93          	li	s5,120$/;"	l
fb2	user/grind.asm	/^     fb2:	a839                	j	fd0 <vprintf+0x6a>$/;"	l
fb4	user/grind.asm	/^     fb4:	85ca                	mv	a1,s2$/;"	l
fb4	user/sh.asm	/^     fb4:	ff4910e3          	bne	s2,s4,f94 <vprintf+0x4e>$/;"	l
fb4	user/usertests.asm	/^     fb4:	00005a17          	auipc	s4,0x5$/;"	l
fb6	user/grind.asm	/^     fb6:	8556                	mv	a0,s5$/;"	l
fb8	user/grind.asm	/^     fb8:	00000097          	auipc	ra,0x0$/;"	l
fb8	user/sh.asm	/^     fb8:	89d2                	mv	s3,s4$/;"	l
fb8	user/usertests.asm	/^     fb8:	ffca0a13          	addi	s4,s4,-4 # 5fb0 <malloc+0x804>$/;"	l
fba	user/sh.asm	/^     fba:	b7f5                	j	fa6 <vprintf+0x60>$/;"	l
fbc	user/grind.asm	/^     fbc:	ee0080e7          	jalr	-288(ra) # e98 <putc>$/;"	l
fbc	user/sh.asm	/^     fbc:	11490c63          	beq	s2,s4,10d4 <vprintf+0x18e>$/;"	l
fbc	user/usertests.asm	/^     fbc:	1f400b13          	li	s6,500$/;"	l
fc	user/call.asm	/^  fc:	ec86                	sd	ra,88(sp)$/;"	l
fc	user/echo.asm	/^  fc:	ca19                	beqz	a2,112 <memset+0x1c>$/;"	l
fc	user/forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	user/grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	user/grind.asm	/^      fc:	5a7d                	li	s4,-1$/;"	l
fc	user/init.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	user/kill.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	user/ls.asm	/^  fc:	0007869b          	sext.w	a3,a5$/;"	l
fc	user/mkdir.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/rm.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/usertests.asm	/^      fc:	272080e7          	jalr	626(ra) # 536a <exit>$/;"	l
fc	user/zombie.asm	/^  fc:	892a                	mv	s2,a0$/;"	l
fc0	user/grind.asm	/^     fc0:	a019                	j	fc6 <vprintf+0x60>$/;"	l
fc0	user/sh.asm	/^     fc0:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fc0	user/usertests.asm	/^     fc0:	fb540823          	sb	s5,-80(s0)$/;"	l
fc2	user/grind.asm	/^     fc2:	01498d63          	beq	s3,s4,fdc <vprintf+0x76>$/;"	l
fc4	user/sh.asm	/^     fc4:	0ff7f793          	zext.b	a5,a5$/;"	l
fc4	user/usertests.asm	/^     fc4:	41f9571b          	sraiw	a4,s2,0x1f$/;"	l
fc6	user/grind.asm	/^     fc6:	0485                	addi	s1,s1,1$/;"	l
fc8	user/grind.asm	/^     fc8:	fff4c903          	lbu	s2,-1(s1)$/;"	l
fc8	user/sh.asm	/^     fc8:	10fc6e63          	bltu	s8,a5,10e4 <vprintf+0x19e>$/;"	l
fc8	user/usertests.asm	/^     fc8:	01a7571b          	srliw	a4,a4,0x1a$/;"	l
fcc	user/grind.asm	/^     fcc:	14090d63          	beqz	s2,1126 <vprintf+0x1c0>$/;"	l
fcc	user/sh.asm	/^     fcc:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fcc	user/usertests.asm	/^     fcc:	012707bb          	addw	a5,a4,s2$/;"	l
fd	user/alarmtest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/bttest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/call.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	user/grind.asm	/^     fd0:	fe0999e3          	bnez	s3,fc2 <vprintf+0x5c>$/;"	l
fd0	user/sh.asm	/^     fd0:	0ff7f713          	zext.b	a4,a5$/;"	l
fd0	user/usertests.asm	/^     fd0:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
fd1	user/usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd4	user/grind.asm	/^     fd4:	ff4910e3          	bne	s2,s4,fb4 <vprintf+0x4e>$/;"	l
fd4	user/sh.asm	/^     fd4:	10ec6863          	bltu	s8,a4,10e4 <vprintf+0x19e>$/;"	l
fd4	user/usertests.asm	/^     fd4:	0306869b          	addiw	a3,a3,48$/;"	l
fd8	user/grind.asm	/^     fd8:	89d2                	mv	s3,s4$/;"	l
fd8	user/sh.asm	/^     fd8:	00271793          	slli	a5,a4,0x2$/;"	l
fd8	user/usertests.asm	/^     fd8:	fad408a3          	sb	a3,-79(s0)$/;"	l
fda	user/grind.asm	/^     fda:	b7f5                	j	fc6 <vprintf+0x60>$/;"	l
fdalloc	kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	user/grind.asm	/^     fdc:	11490c63          	beq	s2,s4,10f4 <vprintf+0x18e>$/;"	l
fdc	user/sh.asm	/^     fdc:	97e6                	add	a5,a5,s9$/;"	l
fdc	user/usertests.asm	/^     fdc:	03f7f793          	andi	a5,a5,63$/;"	l
fde	user/sh.asm	/^     fde:	439c                	lw	a5,0(a5)$/;"	l
fe	user/alarmtest.asm	/^  fe:	00001a97          	auipc	s5,0x1$/;"	l
fe	user/bttest.asm	/^  fe:	4605                	li	a2,1$/;"	l
fe	user/call.asm	/^  fe:	e8a2                	sd	s0,80(sp)$/;"	l
fe	user/cat.asm	/^  fe:	00093603          	ld	a2,0(s2)$/;"	l
fe	user/echo.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	user/grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	user/grind.asm	/^      fe:	00001917          	auipc	s2,0x1$/;"	l
fe	user/init.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	user/kill.asm	/^  fe:	00054783          	lbu	a5,0(a0)$/;"	l
fe	user/ln.asm	/^  fe:	cb99                	beqz	a5,114 <strchr+0x20>$/;"	l
fe	user/sh.asm	/^      fe:	6490                	ld	a2,8(s1)$/;"	l
fe	user/stressfs.asm	/^  fe:	286080e7          	jalr	646(ra) # 380 <wait>$/;"	l
fe	user/wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	user/zombie.asm	/^  fe:	4481                	li	s1,0$/;"	l
fe0	user/grind.asm	/^     fe0:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fe0	user/sh.asm	/^     fe0:	97e6                	add	a5,a5,s9$/;"	l
fe0	user/usertests.asm	/^     fe0:	9f99                	subw	a5,a5,a4$/;"	l
fe2	user/sh.asm	/^     fe2:	8782                	jr	a5$/;"	l
fe2	user/usertests.asm	/^     fe2:	0307879b          	addiw	a5,a5,48$/;"	l
fe4	user/grind.asm	/^     fe4:	0ff7f793          	zext.b	a5,a5$/;"	l
fe4	user/sh.asm	/^     fe4:	008b0913          	addi	s2,s6,8$/;"	l
fe6	user/usertests.asm	/^     fe6:	faf40923          	sb	a5,-78(s0)$/;"	l
fe8	user/grind.asm	/^     fe8:	10fc6e63          	bltu	s8,a5,1104 <vprintf+0x19e>$/;"	l
fe8	user/sh.asm	/^     fe8:	4685                	li	a3,1$/;"	l
fea	user/sh.asm	/^     fea:	4629                	li	a2,10$/;"	l
fea	user/usertests.asm	/^     fea:	fa0409a3          	sb	zero,-77(s0)$/;"	l
fec	user/grind.asm	/^     fec:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fec	user/sh.asm	/^     fec:	000b2583          	lw	a1,0(s6)$/;"	l
fee	user/usertests.asm	/^     fee:	fb040593          	addi	a1,s0,-80$/;"	l
fetchaddr	kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f
fetchstr	kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f
ff	kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	user/grind.asm	/^     ff0:	0ff7f713          	zext.b	a4,a5$/;"	l
ff0	user/sh.asm	/^     ff0:	8556                	mv	a0,s5$/;"	l
ff2	user/sh.asm	/^     ff2:	00000097          	auipc	ra,0x0$/;"	l
ff2	user/usertests.asm	/^     ff2:	8552                	mv	a0,s4$/;"	l
ff4	user/grind.asm	/^     ff4:	10ec6863          	bltu	s8,a4,1104 <vprintf+0x19e>$/;"	l
ff4	user/usertests.asm	/^     ff4:	00004097          	auipc	ra,0x4$/;"	l
ff6	user/sh.asm	/^     ff6:	ea8080e7          	jalr	-344(ra) # e9a <printint>$/;"	l
ff8	user/grind.asm	/^     ff8:	00271793          	slli	a5,a4,0x2$/;"	l
ff8	user/usertests.asm	/^     ff8:	3d6080e7          	jalr	982(ra) # 53ca <link>$/;"	l
ffa	user/sh.asm	/^     ffa:	8b4a                	mv	s6,s2$/;"	l
ffc	user/grind.asm	/^     ffc:	97e6                	add	a5,a5,s9$/;"	l
ffc	user/sh.asm	/^     ffc:	4981                	li	s3,0$/;"	l
ffc	user/usertests.asm	/^     ffc:	84aa                	mv	s1,a0$/;"	l
ffe	user/grind.asm	/^     ffe:	439c                	lw	a5,0(a5)$/;"	l
ffe	user/sh.asm	/^     ffe:	b765                	j	fa6 <vprintf+0x60>$/;"	l
ffe	user/usertests.asm	/^     ffe:	e949                	bnez	a0,1090 <bigdir+0x128>$/;"	l
file	kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon5	typeref:struct:__anon5::file	file:
file	kernel/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	kernel/file.c	/^filealloc(void)$/;"	f
fileclose	kernel/file.c	/^fileclose(struct file *f)$/;"	f
filedup	kernel/file.c	/^filedup(struct file *f)$/;"	f
fileinit	kernel/file.c	/^fileinit(void)$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileread	kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f
filestat	kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f
filesz	kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f
first	kernel/kernel.asm	/^    first = 0;$/;"	d
flags	kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:UsedArea
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:VRingDesc
fmtname	user/ls.c	/^fmtname(char *path)$/;"	f
fname	user/usertests.asm	/^    fname = names[i];$/;"	d
fname	user/usertests.asm	/^    fname = names[pi];$/;"	d
foo	user/alarmtest.c	/^void __attribute__ ((noinline)) foo(int i, int *j) {$/;"	f
fork	kernel/proc.c	/^fork(void)$/;"	f
fork	user/alarmtest.asm	/^fork:$/;"	l
fork	user/bttest.asm	/^fork:$/;"	l
fork	user/call.asm	/^fork:$/;"	l
fork	user/cat.asm	/^fork:$/;"	l
fork	user/echo.asm	/^fork:$/;"	l
fork	user/forktest.asm	/^fork:$/;"	l
fork	user/grep.asm	/^fork:$/;"	l
fork	user/grind.asm	/^fork:$/;"	l
fork	user/init.asm	/^fork:$/;"	l
fork	user/kill.asm	/^fork:$/;"	l
fork	user/ln.asm	/^fork:$/;"	l
fork	user/ls.asm	/^fork:$/;"	l
fork	user/mkdir.asm	/^fork:$/;"	l
fork	user/rm.asm	/^fork:$/;"	l
fork	user/sh.asm	/^fork:$/;"	l
fork	user/stressfs.asm	/^fork:$/;"	l
fork	user/usertests.asm	/^fork:$/;"	l
fork	user/usys.S	/^fork:$/;"	l
fork	user/wc.asm	/^fork:$/;"	l
fork	user/zombie.asm	/^fork:$/;"	l
fork1	user/sh.c	/^fork1(void)$/;"	f
forkfork	user/usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	user/usertests.c	/^forkforkfork(char *s)$/;"	f
forkret	kernel/proc.c	/^forkret(void)$/;"	f
forktest	user/forktest.c	/^forktest(void)$/;"	f
forktest	user/usertests.c	/^forktest(char *s)$/;"	f
found	kernel/kernel.asm	/^        found = 1;$/;"	d
fourfiles	user/usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	user/usertests.c	/^fourteen(char *s)$/;"	f
fp	kernel/kernel.asm	/^		fp = * (uint64*)(fp-16);$/;"	d
fp	kernel/kernel.asm	/^	fp = r_fp();$/;"	d
fprintf	user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free	user/umalloc.c	/^free(void *ap)$/;"	f
free_chain	kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	file:
free_desc	kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	file:
freeblock	mkfs/mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon6	typeref:struct:__anon6::run	file:
freep	user/alarmtest.asm	/^      freep = prevp;$/;"	d
freep	user/alarmtest.asm	/^  freep = p;$/;"	d
freep	user/bttest.asm	/^      freep = prevp;$/;"	d
freep	user/bttest.asm	/^  freep = p;$/;"	d
freep	user/call.asm	/^      freep = prevp;$/;"	d
freep	user/call.asm	/^  freep = p;$/;"	d
freep	user/cat.asm	/^      freep = prevp;$/;"	d
freep	user/cat.asm	/^  freep = p;$/;"	d
freep	user/echo.asm	/^      freep = prevp;$/;"	d
freep	user/echo.asm	/^  freep = p;$/;"	d
freep	user/grep.asm	/^      freep = prevp;$/;"	d
freep	user/grep.asm	/^  freep = p;$/;"	d
freep	user/grind.asm	/^      freep = prevp;$/;"	d
freep	user/grind.asm	/^  freep = p;$/;"	d
freep	user/init.asm	/^      freep = prevp;$/;"	d
freep	user/init.asm	/^  freep = p;$/;"	d
freep	user/kill.asm	/^      freep = prevp;$/;"	d
freep	user/kill.asm	/^  freep = p;$/;"	d
freep	user/ln.asm	/^      freep = prevp;$/;"	d
freep	user/ln.asm	/^  freep = p;$/;"	d
freep	user/ls.asm	/^      freep = prevp;$/;"	d
freep	user/ls.asm	/^  freep = p;$/;"	d
freep	user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	user/mkdir.asm	/^  freep = p;$/;"	d
freep	user/rm.asm	/^      freep = prevp;$/;"	d
freep	user/rm.asm	/^  freep = p;$/;"	d
freep	user/sh.asm	/^      freep = prevp;$/;"	d
freep	user/sh.asm	/^  freep = p;$/;"	d
freep	user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	user/stressfs.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	file:
freep	user/usertests.asm	/^      freep = prevp;$/;"	d
freep	user/usertests.asm	/^  freep = p;$/;"	d
freep	user/wc.asm	/^      freep = prevp;$/;"	d
freep	user/wc.asm	/^  freep = p;$/;"	d
freep	user/zombie.asm	/^      freep = prevp;$/;"	d
freep	user/zombie.asm	/^  freep = p;$/;"	d
freeproc	kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	file:
freerange	kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f
freewalk	kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f
fsfd	mkfs/mkfs.c	/^int fsfd;$/;"	v
fsfull	user/usertests.c	/^fsfull()$/;"	f
fsinit	kernel/fs.c	/^fsinit(int dev) {$/;"	f
fstat	user/alarmtest.asm	/^fstat:$/;"	l
fstat	user/bttest.asm	/^fstat:$/;"	l
fstat	user/call.asm	/^fstat:$/;"	l
fstat	user/cat.asm	/^fstat:$/;"	l
fstat	user/echo.asm	/^fstat:$/;"	l
fstat	user/forktest.asm	/^fstat:$/;"	l
fstat	user/grep.asm	/^fstat:$/;"	l
fstat	user/grind.asm	/^fstat:$/;"	l
fstat	user/init.asm	/^fstat:$/;"	l
fstat	user/kill.asm	/^fstat:$/;"	l
fstat	user/ln.asm	/^fstat:$/;"	l
fstat	user/ls.asm	/^fstat:$/;"	l
fstat	user/mkdir.asm	/^fstat:$/;"	l
fstat	user/rm.asm	/^fstat:$/;"	l
fstat	user/sh.asm	/^fstat:$/;"	l
fstat	user/stressfs.asm	/^fstat:$/;"	l
fstat	user/usertests.asm	/^fstat:$/;"	l
fstat	user/usys.S	/^fstat:$/;"	l
fstat	user/wc.asm	/^fstat:$/;"	l
fstat	user/zombie.asm	/^fstat:$/;"	l
ftable	kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anon5
g	user/call.c	/^int g(int x) {$/;"	f
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getcmd	user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	user/alarmtest.asm	/^getpid:$/;"	l
getpid	user/bttest.asm	/^getpid:$/;"	l
getpid	user/call.asm	/^getpid:$/;"	l
getpid	user/cat.asm	/^getpid:$/;"	l
getpid	user/echo.asm	/^getpid:$/;"	l
getpid	user/forktest.asm	/^getpid:$/;"	l
getpid	user/grep.asm	/^getpid:$/;"	l
getpid	user/grind.asm	/^getpid:$/;"	l
getpid	user/init.asm	/^getpid:$/;"	l
getpid	user/kill.asm	/^getpid:$/;"	l
getpid	user/ln.asm	/^getpid:$/;"	l
getpid	user/ls.asm	/^getpid:$/;"	l
getpid	user/mkdir.asm	/^getpid:$/;"	l
getpid	user/rm.asm	/^getpid:$/;"	l
getpid	user/sh.asm	/^getpid:$/;"	l
getpid	user/stressfs.asm	/^getpid:$/;"	l
getpid	user/usertests.asm	/^getpid:$/;"	l
getpid	user/usys.S	/^getpid:$/;"	l
getpid	user/wc.asm	/^getpid:$/;"	l
getpid	user/zombie.asm	/^getpid:$/;"	l
gets	user/ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
go	user/grind.c	/^go(int which_child)$/;"	f
gp	kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe
grep	user/grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	kernel/proc.c	/^growproc(int n)$/;"	f
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:shell_script.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	kernel/proc.h	/^  uint64 handler;$/;"	m	struct:proc
havekids	kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon7	typeref:struct:__anon7::buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
hi	user/grind.asm	/^    hi = x \/ 127773;$/;"	d
holding	kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f
holdingsleep	kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	kernel/date.h	/^  uint hour;$/;"	m	struct:rtcdate
i	kernel/kernel.asm	/^      i = disk.desc[i].next;$/;"	d
i	kernel/kernel.asm	/^  i = 0;$/;"	d
i	user/alarmtest.asm	/^  i = 0;$/;"	d
i	user/bttest.asm	/^  i = 0;$/;"	d
i	user/call.asm	/^  i = 0;$/;"	d
i	user/cat.asm	/^  i = 0;$/;"	d
i	user/echo.asm	/^  i = 0;$/;"	d
i	user/grep.asm	/^  i = 0;$/;"	d
i	user/grind.asm	/^  i = 0;$/;"	d
i	user/init.asm	/^  i = 0;$/;"	d
i	user/kill.asm	/^  i = 0;$/;"	d
i	user/ln.asm	/^  i = 0;$/;"	d
i	user/ls.asm	/^  i = 0;$/;"	d
i	user/mkdir.asm	/^  i = 0;$/;"	d
i	user/rm.asm	/^  i = 0;$/;"	d
i	user/sh.asm	/^  i = 0;$/;"	d
i	user/stressfs.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	user/usertests.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	user/wc.asm	/^  i = 0;$/;"	d
i	user/zombie.asm	/^  i = 0;$/;"	d
ialloc	kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	kernel/fs.c	/^} icache;$/;"	v	typeref:struct:__anon4
id	kernel/virtio.h	/^  uint16 id;$/;"	m	struct:UsedArea
id	kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:VRingUsedElem
idup	kernel/fs.c	/^idup(struct inode *ip)$/;"	f
iget	kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
iinit	kernel/fs.c	/^iinit()$/;"	f
ilock	kernel/fs.c	/^ilock(struct inode *ip)$/;"	f
info	kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon8	file:
init	user/initcode.S	/^init:$/;"	l
initcode	kernel/proc.c	/^uchar initcode[] = {$/;"	v
initlock	kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f
initproc	kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc
initsleeplock	kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
ino	kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	kernel/file.h	/^struct inode {$/;"	s
inode	kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon4	typeref:struct:__anon4::inode	file:
inodestart	kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
install_trans	kernel/log.c	/^install_trans(void)$/;"	f	file:
int	kernel/kernel.asm	/^int$/;"	l
int	user/alarmtest.asm	/^int$/;"	l
int	user/bttest.asm	/^int$/;"	l
int	user/call.asm	/^int f(int x) {$/;"	l
int	user/call.asm	/^int g(int x) {$/;"	l
int	user/call.asm	/^int$/;"	l
int	user/cat.asm	/^int$/;"	l
int	user/echo.asm	/^int$/;"	l
int	user/forktest.asm	/^int$/;"	l
int	user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	user/grep.asm	/^int$/;"	l
int	user/grind.asm	/^int$/;"	l
int	user/init.asm	/^int$/;"	l
int	user/kill.asm	/^int$/;"	l
int	user/ln.asm	/^int$/;"	l
int	user/ls.asm	/^int$/;"	l
int	user/mkdir.asm	/^int$/;"	l
int	user/rm.asm	/^int$/;"	l
int	user/sh.asm	/^int$/;"	l
int	user/stressfs.asm	/^int$/;"	l
int	user/usertests.asm	/^int$/;"	l
int	user/wc.asm	/^int$/;"	l
int	user/zombie.asm	/^int$/;"	l
intena	kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu
intr_get	kernel/riscv.h	/^intr_get()$/;"	f
intr_off	kernel/riscv.h	/^intr_off()$/;"	f
intr_on	kernel/riscv.h	/^intr_on()$/;"	f
inum	kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inword	user/wc.asm	/^        inword = 0;$/;"	d
inword	user/wc.asm	/^        inword = 1;$/;"	d
inword	user/wc.asm	/^  inword = 0;$/;"	d
ip	kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel/kernel.asm	/^    ip = next;$/;"	d
ip	kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	kernel/fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	user/usertests.c	/^iputtest(char *s)$/;"	f
iref	user/usertests.c	/^iref(char *s)$/;"	f
isdirempty	kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
iter	user/grind.c	/^iter()$/;"	f
itrunc	kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f
iunlock	kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f
j	user/alarmtest.asm	/^  j = 0;$/;"	d
justone	user/usertests.asm	/^    justone = argv[1];$/;"	d
kalloc	kernel/kalloc.c	/^kalloc(void)$/;"	f
kernel_hartid	kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe
kernel_pagetable	kernel/kernel.asm	/^  kernel_pagetable = (pagetable_t) kalloc();$/;"	d
kernel_pagetable	kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v
kernel_satp	kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe
kernel_sp	kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe
kernel_trap	kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe
kerneltrap	kernel/trap.c	/^kerneltrap()$/;"	f
kernelvec	kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	user/usertests.c	/^kernmem(char *s)$/;"	f
kfree	kernel/kalloc.c	/^kfree(void *pa)$/;"	f
kill	gradelib.py	/^    def kill(self):$/;"	f
kill	kernel/proc.c	/^kill(int pid)$/;"	f
kill	user/alarmtest.asm	/^kill:$/;"	l
kill	user/bttest.asm	/^kill:$/;"	l
kill	user/call.asm	/^kill:$/;"	l
kill	user/cat.asm	/^kill:$/;"	l
kill	user/echo.asm	/^kill:$/;"	l
kill	user/forktest.asm	/^kill:$/;"	l
kill	user/grep.asm	/^kill:$/;"	l
kill	user/grind.asm	/^kill:$/;"	l
kill	user/init.asm	/^kill:$/;"	l
kill	user/kill.asm	/^kill:$/;"	l
kill	user/ln.asm	/^kill:$/;"	l
kill	user/ls.asm	/^kill:$/;"	l
kill	user/mkdir.asm	/^kill:$/;"	l
kill	user/rm.asm	/^kill:$/;"	l
kill	user/sh.asm	/^kill:$/;"	l
kill	user/stressfs.asm	/^kill:$/;"	l
kill	user/usertests.asm	/^kill:$/;"	l
kill	user/usys.S	/^kill:$/;"	l
kill	user/wc.asm	/^kill:$/;"	l
kill	user/zombie.asm	/^kill:$/;"	l
killed	kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit	kernel/kalloc.c	/^kinit()$/;"	f
kmem	kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon6
kstack	kernel/proc.h	/^  uint64 kstack;               \/\/ Virtual address of kernel stack$/;"	m	struct:proc
kvminit	kernel/vm.c	/^kvminit()$/;"	f
kvminithart	kernel/vm.c	/^kvminithart()$/;"	f
kvmmap	kernel/vm.c	/^kvmmap(uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f
kvmpa	kernel/vm.c	/^kvmpa(uint64 va)$/;"	f
l	user/wc.asm	/^  l = w = c = 0;$/;"	d
last	kernel/kernel.asm	/^      last = s+1;$/;"	d
last	kernel/kernel.asm	/^  last = PGROUNDDOWN(va + size - 1);$/;"	d
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel/kernel.asm	/^  len = path - s;$/;"	d
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingDesc
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingUsedElem
lh	kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
link	user/alarmtest.asm	/^link:$/;"	l
link	user/bttest.asm	/^link:$/;"	l
link	user/call.asm	/^link:$/;"	l
link	user/cat.asm	/^link:$/;"	l
link	user/echo.asm	/^link:$/;"	l
link	user/forktest.asm	/^link:$/;"	l
link	user/grep.asm	/^link:$/;"	l
link	user/grind.asm	/^link:$/;"	l
link	user/init.asm	/^link:$/;"	l
link	user/kill.asm	/^link:$/;"	l
link	user/ln.asm	/^link:$/;"	l
link	user/ls.asm	/^link:$/;"	l
link	user/mkdir.asm	/^link:$/;"	l
link	user/rm.asm	/^link:$/;"	l
link	user/sh.asm	/^link:$/;"	l
link	user/stressfs.asm	/^link:$/;"	l
link	user/usertests.asm	/^link:$/;"	l
link	user/usys.S	/^link:$/;"	l
link	user/wc.asm	/^link:$/;"	l
link	user/zombie.asm	/^link:$/;"	l
linktest	user/usertests.c	/^linktest(char *s)$/;"	f
linkunlink	user/usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
lo	user/grind.asm	/^    lo = x % 127773;$/;"	d
loadseg	kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	file:
lock	kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anon3	typeref:struct:__anon3::spinlock	file:
lock	kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:proc::spinlock
locked	kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	kernel/printf.c	/^  int locking;$/;"	m	struct:__anon2	file:
log	kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	kernel/log.c	/^struct log {$/;"	s	file:
log_write	kernel/log.c	/^log_write(struct buf *b)$/;"	f
logheader	kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	user/ls.c	/^ls(char *path)$/;"	f
m	kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	user/grep.asm	/^  m = 0;$/;"	d
m1	user/usertests.asm	/^      m1 = m2;$/;"	d
m1	user/usertests.asm	/^    m1 = 0;$/;"	d
m1	user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
magic	kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock
main	kernel/main.c	/^main()$/;"	f
main	mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/alarmtest.c	/^main(int argc, char *argv[])$/;"	f
main	user/bttest.c	/^main()$/;"	f
main	user/call.c	/^void main(void) {$/;"	f
main	user/cat.c	/^main(int argc, char *argv[])$/;"	f
main	user/echo.c	/^main(int argc, char *argv[])$/;"	f
main	user/forktest.c	/^main(void)$/;"	f
main	user/grep.c	/^main(int argc, char *argv[])$/;"	f
main	user/grind.c	/^main()$/;"	f
main	user/init.c	/^main(void)$/;"	f
main	user/kill.c	/^main(int argc, char **argv)$/;"	f
main	user/ln.c	/^main(int argc, char *argv[])$/;"	f
main	user/ls.c	/^main(int argc, char *argv[])$/;"	f
main	user/mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	user/rm.c	/^main(int argc, char *argv[])$/;"	f
main	user/sh.c	/^main(void)$/;"	f
main	user/stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/usertests.c	/^main(int argc, char *argv[])$/;"	f
main	user/wc.c	/^main(int argc, char *argv[])$/;"	f
main	user/zombie.c	/^main(void)$/;"	f
major	kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file
major	kernel/file.h	/^  short major;$/;"	m	struct:inode
major	kernel/file.h	12;"	d
major	kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode
make	gradelib.py	/^def make(*target):$/;"	f
malloc	user/umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match	user/grep.c	/^match(char *re, char *text)$/;"	f
matchhere	user/grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mem	kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	user/usertests.c	/^mem(char *s)$/;"	f
memcmp	kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcmp	user/ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f
memcpy	kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memcpy	user/ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
min	kernel/fs.c	24;"	d	file:
min	mkfs/mkfs.c	261;"	d	file:
minor	kernel/file.h	/^  short minor;$/;"	m	struct:inode
minor	kernel/file.h	13;"	d
minor	kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode
minute	kernel/date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkdev	kernel/file.h	14;"	d
mkdir	user/alarmtest.asm	/^mkdir:$/;"	l
mkdir	user/bttest.asm	/^mkdir:$/;"	l
mkdir	user/call.asm	/^mkdir:$/;"	l
mkdir	user/cat.asm	/^mkdir:$/;"	l
mkdir	user/echo.asm	/^mkdir:$/;"	l
mkdir	user/forktest.asm	/^mkdir:$/;"	l
mkdir	user/grep.asm	/^mkdir:$/;"	l
mkdir	user/grind.asm	/^mkdir:$/;"	l
mkdir	user/init.asm	/^mkdir:$/;"	l
mkdir	user/kill.asm	/^mkdir:$/;"	l
mkdir	user/ln.asm	/^mkdir:$/;"	l
mkdir	user/ls.asm	/^mkdir:$/;"	l
mkdir	user/mkdir.asm	/^mkdir:$/;"	l
mkdir	user/rm.asm	/^mkdir:$/;"	l
mkdir	user/sh.asm	/^mkdir:$/;"	l
mkdir	user/stressfs.asm	/^mkdir:$/;"	l
mkdir	user/usertests.asm	/^mkdir:$/;"	l
mkdir	user/usys.S	/^mkdir:$/;"	l
mkdir	user/wc.asm	/^mkdir:$/;"	l
mkdir	user/zombie.asm	/^mkdir:$/;"	l
mknod	user/alarmtest.asm	/^mknod:$/;"	l
mknod	user/bttest.asm	/^mknod:$/;"	l
mknod	user/call.asm	/^mknod:$/;"	l
mknod	user/cat.asm	/^mknod:$/;"	l
mknod	user/echo.asm	/^mknod:$/;"	l
mknod	user/forktest.asm	/^mknod:$/;"	l
mknod	user/grep.asm	/^mknod:$/;"	l
mknod	user/grind.asm	/^mknod:$/;"	l
mknod	user/init.asm	/^mknod:$/;"	l
mknod	user/kill.asm	/^mknod:$/;"	l
mknod	user/ln.asm	/^mknod:$/;"	l
mknod	user/ls.asm	/^mknod:$/;"	l
mknod	user/mkdir.asm	/^mknod:$/;"	l
mknod	user/rm.asm	/^mknod:$/;"	l
mknod	user/sh.asm	/^mknod:$/;"	l
mknod	user/stressfs.asm	/^mknod:$/;"	l
mknod	user/usertests.asm	/^mknod:$/;"	l
mknod	user/usys.S	/^mknod:$/;"	l
mknod	user/wc.asm	/^mknod:$/;"	l
mknod	user/zombie.asm	/^mknod:$/;"	l
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	kernel/date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	user/umalloc.c	/^morecore(uint nu)$/;"	f	file:
mscratch0	kernel/start.c	/^uint64 mscratch0[NCPU * 32];$/;"	v
mycpu	kernel/proc.c	/^mycpu(void) {$/;"	f
myproc	kernel/proc.c	/^myproc(void) {$/;"	f
n	gradelib.py	/^            n = 0$/;"	v	class:shell_script.setup_call_on_line.context
n	kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel/kernel.asm	/^      n = len;$/;"	d
n	kernel/kernel.asm	/^      n = max;$/;"	d
n	kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	kernel/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	user/alarmtest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/alarmtest.asm	/^  n = 0;$/;"	d
n	user/bttest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/bttest.asm	/^  n = 0;$/;"	d
n	user/call.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/call.asm	/^  n = 0;$/;"	d
n	user/cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/cat.asm	/^  n = 0;$/;"	d
n	user/echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/echo.asm	/^  n = 0;$/;"	d
n	user/forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/forktest.asm	/^  n = 0;$/;"	d
n	user/grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grep.asm	/^  n = 0;$/;"	d
n	user/grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grind.asm	/^  n = 0;$/;"	d
n	user/init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/init.asm	/^  n = 0;$/;"	d
n	user/kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/kill.asm	/^  n = 0;$/;"	d
n	user/ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ln.asm	/^  n = 0;$/;"	d
n	user/ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ls.asm	/^  n = 0;$/;"	d
n	user/mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/mkdir.asm	/^  n = 0;$/;"	d
n	user/rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/rm.asm	/^  n = 0;$/;"	d
n	user/sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/sh.asm	/^  n = 0;$/;"	d
n	user/stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/stressfs.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	user/wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/wc.asm	/^  n = 0;$/;"	d
n	user/zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/zombie.asm	/^  n = 0;$/;"	d
n1	kernel/kernel.asm	/^        n1 = max;$/;"	d
name	kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	user/usertests.c	/^char name[3];$/;"	v
namecmp	kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	kernel/fs.c	/^namei(char *path)$/;"	f
nameiparent	kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs/mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	user/alarmtest.asm	/^    neg = 1;$/;"	d
neg	user/alarmtest.asm	/^  neg = 0;$/;"	d
neg	user/bttest.asm	/^    neg = 1;$/;"	d
neg	user/bttest.asm	/^  neg = 0;$/;"	d
neg	user/call.asm	/^    neg = 1;$/;"	d
neg	user/call.asm	/^  neg = 0;$/;"	d
neg	user/cat.asm	/^    neg = 1;$/;"	d
neg	user/cat.asm	/^  neg = 0;$/;"	d
neg	user/echo.asm	/^    neg = 1;$/;"	d
neg	user/echo.asm	/^  neg = 0;$/;"	d
neg	user/grep.asm	/^    neg = 1;$/;"	d
neg	user/grep.asm	/^  neg = 0;$/;"	d
neg	user/grind.asm	/^    neg = 1;$/;"	d
neg	user/grind.asm	/^  neg = 0;$/;"	d
neg	user/init.asm	/^    neg = 1;$/;"	d
neg	user/init.asm	/^  neg = 0;$/;"	d
neg	user/kill.asm	/^    neg = 1;$/;"	d
neg	user/kill.asm	/^  neg = 0;$/;"	d
neg	user/ln.asm	/^    neg = 1;$/;"	d
neg	user/ln.asm	/^  neg = 0;$/;"	d
neg	user/ls.asm	/^    neg = 1;$/;"	d
neg	user/ls.asm	/^  neg = 0;$/;"	d
neg	user/mkdir.asm	/^    neg = 1;$/;"	d
neg	user/mkdir.asm	/^  neg = 0;$/;"	d
neg	user/rm.asm	/^    neg = 1;$/;"	d
neg	user/rm.asm	/^  neg = 0;$/;"	d
neg	user/sh.asm	/^    neg = 1;$/;"	d
neg	user/sh.asm	/^  neg = 0;$/;"	d
neg	user/stressfs.asm	/^    neg = 1;$/;"	d
neg	user/stressfs.asm	/^  neg = 0;$/;"	d
neg	user/usertests.asm	/^    neg = 1;$/;"	d
neg	user/usertests.asm	/^  neg = 0;$/;"	d
neg	user/wc.asm	/^    neg = 1;$/;"	d
neg	user/wc.asm	/^  neg = 0;$/;"	d
neg	user/zombie.asm	/^    neg = 1;$/;"	d
neg	user/zombie.asm	/^  neg = 0;$/;"	d
next	kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
next	kernel/virtio.h	/^  uint16 next;$/;"	m	struct:VRingDesc
nextpid	kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	kernel/proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	kernel/file.h	/^  short nlink;$/;"	m	struct:inode
nlink	kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
noff	kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu
nread	kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nulterminate	user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel/kernel.asm	/^  num = p->trapframe->a7;$/;"	d
nunits	user/alarmtest.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/bttest.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/call.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
off	kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file
ofile	kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	user/alarmtest.asm	/^open:$/;"	l
open	user/bttest.asm	/^open:$/;"	l
open	user/call.asm	/^open:$/;"	l
open	user/cat.asm	/^open:$/;"	l
open	user/echo.asm	/^open:$/;"	l
open	user/forktest.asm	/^open:$/;"	l
open	user/grep.asm	/^open:$/;"	l
open	user/grind.asm	/^open:$/;"	l
open	user/init.asm	/^open:$/;"	l
open	user/kill.asm	/^open:$/;"	l
open	user/ln.asm	/^open:$/;"	l
open	user/ls.asm	/^open:$/;"	l
open	user/mkdir.asm	/^open:$/;"	l
open	user/rm.asm	/^open:$/;"	l
open	user/sh.asm	/^open:$/;"	l
open	user/stressfs.asm	/^open:$/;"	l
open	user/usertests.asm	/^open:$/;"	l
open	user/usys.S	/^open:$/;"	l
open	user/wc.asm	/^open:$/;"	l
open	user/zombie.asm	/^open:$/;"	l
openiputtest	user/usertests.c	/^openiputtest(char *s)$/;"	f
opentest	user/usertests.c	/^opentest(char *s)$/;"	f
os	kernel/kernel.asm	/^  os = s;$/;"	d
os	user/alarmtest.asm	/^  os = s;$/;"	d
os	user/bttest.asm	/^  os = s;$/;"	d
os	user/call.asm	/^  os = s;$/;"	d
os	user/cat.asm	/^  os = s;$/;"	d
os	user/echo.asm	/^  os = s;$/;"	d
os	user/forktest.asm	/^  os = s;$/;"	d
os	user/grep.asm	/^  os = s;$/;"	d
os	user/grind.asm	/^  os = s;$/;"	d
os	user/init.asm	/^  os = s;$/;"	d
os	user/kill.asm	/^  os = s;$/;"	d
os	user/ln.asm	/^  os = s;$/;"	d
os	user/ls.asm	/^  os = s;$/;"	d
os	user/mkdir.asm	/^  os = s;$/;"	d
os	user/rm.asm	/^  os = s;$/;"	d
os	user/sh.asm	/^  os = s;$/;"	d
os	user/stressfs.asm	/^  os = s;$/;"	d
os	user/usertests.asm	/^  os = s;$/;"	d
os	user/wc.asm	/^  os = s;$/;"	d
os	user/zombie.asm	/^  os = s;$/;"	d
outstanding	kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
p	kernel/kernel.asm	/^	p = myproc();$/;"	d
p	kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	kernel/kernel.asm	/^  p = myproc();$/;"	d
p	user/alarmtest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/bttest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/call.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grep.asm	/^      p = q+1;$/;"	d
p	user/grep.asm	/^    p = buf;$/;"	d
p	user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
pages	kernel/virtio_disk.c	/^  char pages[2*PGSIZE];$/;"	m	struct:disk	file:
pagetable	kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	kernel/proc.h	/^  pagetable_t pagetable;       \/\/ User page table$/;"	m	struct:proc
pagetable_t	kernel/kernel.asm	/^pagetable_t$/;"	l
pagetable_t	kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t
panic	kernel/printf.c	/^panic(char *s)$/;"	f
panic	user/sh.c	/^panic(char *s)$/;"	f
panicked	kernel/kernel.asm	/^  panicked = 1; \/\/ freeze uart output from other CPUs$/;"	d
panicked	kernel/printf.c	/^volatile int panicked = 0;$/;"	v
parent	kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	user/sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	user/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	user/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	user/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
past_ticks	kernel/proc.h	/^  int past_ticks;$/;"	m	struct:proc
pattern	user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	kernel/types.h	/^typedef uint64 pde_t;$/;"	t
peek	user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
periodic	user/alarmtest.c	/^periodic()$/;"	f
pgbug	user/usertests.c	/^pgbug(char *s)$/;"	f
phentsize	kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr
pi	kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	kernel/kernel.asm	/^          pid = np->pid;$/;"	d
pid	kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	user/forktest.asm	/^    pid = fork();$/;"	d
pid	user/init.asm	/^    pid = fork();$/;"	d
pid	user/sh.asm	/^  pid = fork();$/;"	d
pid	user/usertests.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^  pid = fork();$/;"	d
pid1	user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
pipe	kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:file::pipe
pipe	kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	user/alarmtest.asm	/^pipe:$/;"	l
pipe	user/bttest.asm	/^pipe:$/;"	l
pipe	user/call.asm	/^pipe:$/;"	l
pipe	user/cat.asm	/^pipe:$/;"	l
pipe	user/echo.asm	/^pipe:$/;"	l
pipe	user/forktest.asm	/^pipe:$/;"	l
pipe	user/grep.asm	/^pipe:$/;"	l
pipe	user/grind.asm	/^pipe:$/;"	l
pipe	user/init.asm	/^pipe:$/;"	l
pipe	user/kill.asm	/^pipe:$/;"	l
pipe	user/ln.asm	/^pipe:$/;"	l
pipe	user/ls.asm	/^pipe:$/;"	l
pipe	user/mkdir.asm	/^pipe:$/;"	l
pipe	user/rm.asm	/^pipe:$/;"	l
pipe	user/sh.asm	/^pipe:$/;"	l
pipe	user/stressfs.asm	/^pipe:$/;"	l
pipe	user/usertests.asm	/^pipe:$/;"	l
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/wc.asm	/^pipe:$/;"	l
pipe	user/zombie.asm	/^pipe:$/;"	l
pipe1	user/usertests.c	/^pipe1(char *s)$/;"	f
pipealloc	kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f
pipecmd	user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f
pipewrite	kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f
plic_claim	kernel/plic.c	/^plic_claim(void)$/;"	f
plic_complete	kernel/plic.c	/^plic_complete(int irq)$/;"	f
plicinit	kernel/plic.c	/^plicinit(void)$/;"	f
plicinithart	kernel/plic.c	/^plicinithart(void)$/;"	f
pop_off	kernel/spinlock.c	/^pop_off(void)$/;"	f
post_make	gradelib.py	/^def post_make():$/;"	f
pr	kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anon2	file:
pre_make	gradelib.py	/^def pre_make():$/;"	f
preempt	user/usertests.c	/^preempt(char *s)$/;"	f
prev	kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
print	user/forktest.c	/^print(const char *s)$/;"	f
printf	kernel/printf.c	/^printf(char *fmt, ...)$/;"	f
printf	user/printf.c	/^printf(const char *fmt, ...)$/;"	f
printfinit	kernel/printf.c	/^printfinit(void)$/;"	f
printint	kernel/printf.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	kernel/printf.c	/^printptr(uint64 x)$/;"	f	file:
printptr	user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
proc	kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc
proc	kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f
proc_pagetable	kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f
procdump	kernel/proc.c	/^procdump(void)$/;"	f
procinit	kernel/proc.c	/^procinit(void)$/;"	f
procstate	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	kernel/elf.h	/^struct proghdr {$/;"	s
pte	kernel/kernel.asm	/^  pte = walk(kernel_pagetable, va, 0);$/;"	d
pte	kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	kernel/kernel.asm	/^pte_t *$/;"	l
pte_t	kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon1	typeref:union:header::__anon1::header	file:
push_off	kernel/spinlock.c	/^push_off(void)$/;"	f
putc	user/printf.c	/^putc(int fd, char c)$/;"	f	file:
r	kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon3	file:
r	kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	user/alarmtest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/bttest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/call.asm	/^  r = fstat(fd, st);$/;"	d
r	user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grind.asm	/^  r = fstat(fd, st);$/;"	d
r	user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_fp	kernel/riscv.h	/^r_fp()$/;"	f
r_mcounteren	kernel/riscv.h	/^r_mcounteren()$/;"	f
r_medeleg	kernel/riscv.h	/^r_medeleg()$/;"	f
r_mhartid	kernel/riscv.h	/^r_mhartid()$/;"	f
r_mideleg	kernel/riscv.h	/^r_mideleg()$/;"	f
r_mie	kernel/riscv.h	/^r_mie()$/;"	f
r_mstatus	kernel/riscv.h	/^r_mstatus()$/;"	f
r_ra	kernel/riscv.h	/^r_ra()$/;"	f
r_satp	kernel/riscv.h	/^r_satp()$/;"	f
r_scause	kernel/riscv.h	/^r_scause()$/;"	f
r_sepc	kernel/riscv.h	/^r_sepc()$/;"	f
r_sie	kernel/riscv.h	/^r_sie()$/;"	f
r_sip	kernel/riscv.h	/^r_sip()$/;"	f
r_sp	kernel/riscv.h	/^r_sp()$/;"	f
r_sstatus	kernel/riscv.h	/^r_sstatus()$/;"	f
r_stval	kernel/riscv.h	/^r_stval()$/;"	f
r_stvec	kernel/riscv.h	/^r_stvec()$/;"	f
r_time	kernel/riscv.h	/^r_time()$/;"	f
r_tp	kernel/riscv.h	/^r_tp()$/;"	f
ra	kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe
ra	kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context
ramdiskinit	kernel/ramdisk.c	/^ramdiskinit(void)$/;"	f
ramdiskrw	kernel/ramdisk.c	/^ramdiskrw(struct buf *b)$/;"	f
rand	user/grind.c	/^rand(void)$/;"	f
rand	user/usertests.c	/^rand()$/;"	f
rand_next	user/grind.asm	/^    rand_next = 31;$/;"	d
rand_next	user/grind.asm	/^    rand_next = 7177;$/;"	d
rand_next	user/grind.c	/^unsigned long rand_next = 1;$/;"	v
random_str	gradelib.py	/^def random_str(n=8):$/;"	f
randstate	user/usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	user/usertests.c	/^unsigned long randstate = 1;$/;"	v
rcmd	user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw
read	user/alarmtest.asm	/^read:$/;"	l
read	user/bttest.asm	/^read:$/;"	l
read	user/call.asm	/^read:$/;"	l
read	user/cat.asm	/^read:$/;"	l
read	user/echo.asm	/^read:$/;"	l
read	user/forktest.asm	/^read:$/;"	l
read	user/grep.asm	/^read:$/;"	l
read	user/grind.asm	/^read:$/;"	l
read	user/init.asm	/^read:$/;"	l
read	user/kill.asm	/^read:$/;"	l
read	user/ln.asm	/^read:$/;"	l
read	user/ls.asm	/^read:$/;"	l
read	user/mkdir.asm	/^read:$/;"	l
read	user/rm.asm	/^read:$/;"	l
read	user/sh.asm	/^read:$/;"	l
read	user/stressfs.asm	/^read:$/;"	l
read	user/usertests.asm	/^read:$/;"	l
read	user/usys.S	/^read:$/;"	l
read	user/wc.asm	/^read:$/;"	l
read	user/zombie.asm	/^read:$/;"	l
read_head	kernel/log.c	/^read_head(void)$/;"	f	file:
readable	kernel/file.h	/^  char readable;$/;"	m	struct:file
readi	kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f
readopen	kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	file:
recover_from_log	kernel/log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
release	kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reparent	kernel/proc.c	/^reparent(struct proc *p)$/;"	f
reparent	user/usertests.c	/^reparent(char *s)$/;"	f
reparent2	user/usertests.c	/^reparent2(char *s)$/;"	f
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	user/sh.asm	/^      ret = '+';$/;"	d
ret	user/sh.asm	/^    ret = 'a';$/;"	d
ret	user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	user/sh.asm	/^  ret = *s;$/;"	d
ret	user/sh.asm	/^  ret = execcmd();$/;"	d
ret	user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	user/usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	user/usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	user/usertests.asm	/^  ret = link(b, b);$/;"	d
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rmdot	user/usertests.c	/^rmdot(char *s)$/;"	f
rsect	mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rtcdate	kernel/date.h	/^struct rtcdate {$/;"	s
run	kernel/kalloc.c	/^struct run {$/;"	s	file:
run	user/usertests.c	/^run(void f(char *), char *s) {$/;"	f
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	kernel/kernel.asm	/^  s = src;$/;"	d
s	user/alarmtest.asm	/^          s = "(null)";$/;"	d
s	user/alarmtest.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/bttest.asm	/^          s = "(null)";$/;"	d
s	user/bttest.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/call.asm	/^          s = "(null)";$/;"	d
s	user/call.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/cat.asm	/^          s = "(null)";$/;"	d
s	user/cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/echo.asm	/^          s = "(null)";$/;"	d
s	user/echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/grep.asm	/^          s = "(null)";$/;"	d
s	user/grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/grind.asm	/^          s = "(null)";$/;"	d
s	user/grind.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/init.asm	/^          s = "(null)";$/;"	d
s	user/init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/kill.asm	/^          s = "(null)";$/;"	d
s	user/kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ln.asm	/^          s = "(null)";$/;"	d
s	user/ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ls.asm	/^          s = "(null)";$/;"	d
s	user/ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/mkdir.asm	/^          s = "(null)";$/;"	d
s	user/mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/rm.asm	/^          s = "(null)";$/;"	d
s	user/rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^  s = *ps;$/;"	d
s	user/stressfs.asm	/^          s = "(null)";$/;"	d
s	user/stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon1	file:
s	user/usertests.asm	/^          s = "(null)";$/;"	d
s	user/usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/wc.asm	/^          s = "(null)";$/;"	d
s	user/wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/zombie.asm	/^          s = "(null)";$/;"	d
s	user/zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s0	kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe
s0	kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context
s1	kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe
s1	kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context
s10	kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe
s10	kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context
s11	kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe
s11	kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context
s2	kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe
s2	kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context
s3	kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe
s3	kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context
s4	kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe
s4	kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context
s5	kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe
s5	kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context
s6	kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe
s6	kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context
s7	kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe
s7	kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context
s8	kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe
s8	kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context
s9	kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe
s9	kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context
safestrcpy	kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sb	kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	user/alarmtest.asm	/^sbrk:$/;"	l
sbrk	user/bttest.asm	/^sbrk:$/;"	l
sbrk	user/call.asm	/^sbrk:$/;"	l
sbrk	user/cat.asm	/^sbrk:$/;"	l
sbrk	user/echo.asm	/^sbrk:$/;"	l
sbrk	user/forktest.asm	/^sbrk:$/;"	l
sbrk	user/grep.asm	/^sbrk:$/;"	l
sbrk	user/grind.asm	/^sbrk:$/;"	l
sbrk	user/init.asm	/^sbrk:$/;"	l
sbrk	user/kill.asm	/^sbrk:$/;"	l
sbrk	user/ln.asm	/^sbrk:$/;"	l
sbrk	user/ls.asm	/^sbrk:$/;"	l
sbrk	user/mkdir.asm	/^sbrk:$/;"	l
sbrk	user/rm.asm	/^sbrk:$/;"	l
sbrk	user/sh.asm	/^sbrk:$/;"	l
sbrk	user/stressfs.asm	/^sbrk:$/;"	l
sbrk	user/usertests.asm	/^sbrk:$/;"	l
sbrk	user/usys.S	/^sbrk:$/;"	l
sbrk	user/wc.asm	/^sbrk:$/;"	l
sbrk	user/zombie.asm	/^sbrk:$/;"	l
sbrkarg	user/usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	user/usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	user/usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	user/usertests.c	/^sbrkfail(char *s)$/;"	f
sbrkmuch	user/usertests.c	/^sbrkmuch(char *s)$/;"	f
sched	kernel/proc.c	/^sched(void)$/;"	f
scheduler	kernel/proc.c	/^scheduler(void)$/;"	f
second	kernel/date.h	/^  uint second;$/;"	m	struct:rtcdate
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:shell_script
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfence_vma	kernel/riscv.h	/^sfence_vma()$/;"	f
sharedfd	user/usertests.c	/^sharedfd(char *s)$/;"	f
shell_script	gradelib.py	/^def shell_script(script, terminate_match=None):$/;"	f
shentsize	kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shnum	kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shstrndx	kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
sigalarm	user/alarmtest.asm	/^sigalarm:$/;"	l
sigalarm	user/bttest.asm	/^sigalarm:$/;"	l
sigalarm	user/call.asm	/^sigalarm:$/;"	l
sigalarm	user/cat.asm	/^sigalarm:$/;"	l
sigalarm	user/echo.asm	/^sigalarm:$/;"	l
sigalarm	user/forktest.asm	/^sigalarm:$/;"	l
sigalarm	user/grep.asm	/^sigalarm:$/;"	l
sigalarm	user/grind.asm	/^sigalarm:$/;"	l
sigalarm	user/init.asm	/^sigalarm:$/;"	l
sigalarm	user/kill.asm	/^sigalarm:$/;"	l
sigalarm	user/ln.asm	/^sigalarm:$/;"	l
sigalarm	user/ls.asm	/^sigalarm:$/;"	l
sigalarm	user/mkdir.asm	/^sigalarm:$/;"	l
sigalarm	user/rm.asm	/^sigalarm:$/;"	l
sigalarm	user/sh.asm	/^sigalarm:$/;"	l
sigalarm	user/stressfs.asm	/^sigalarm:$/;"	l
sigalarm	user/usertests.asm	/^sigalarm:$/;"	l
sigalarm	user/usys.S	/^sigalarm:$/;"	l
sigalarm	user/wc.asm	/^sigalarm:$/;"	l
sigalarm	user/zombie.asm	/^sigalarm:$/;"	l
sigreturn	user/alarmtest.asm	/^sigreturn:$/;"	l
sigreturn	user/bttest.asm	/^sigreturn:$/;"	l
sigreturn	user/call.asm	/^sigreturn:$/;"	l
sigreturn	user/cat.asm	/^sigreturn:$/;"	l
sigreturn	user/echo.asm	/^sigreturn:$/;"	l
sigreturn	user/forktest.asm	/^sigreturn:$/;"	l
sigreturn	user/grep.asm	/^sigreturn:$/;"	l
sigreturn	user/grind.asm	/^sigreturn:$/;"	l
sigreturn	user/init.asm	/^sigreturn:$/;"	l
sigreturn	user/kill.asm	/^sigreturn:$/;"	l
sigreturn	user/ln.asm	/^sigreturn:$/;"	l
sigreturn	user/ls.asm	/^sigreturn:$/;"	l
sigreturn	user/mkdir.asm	/^sigreturn:$/;"	l
sigreturn	user/rm.asm	/^sigreturn:$/;"	l
sigreturn	user/sh.asm	/^sigreturn:$/;"	l
sigreturn	user/stressfs.asm	/^sigreturn:$/;"	l
sigreturn	user/usertests.asm	/^sigreturn:$/;"	l
sigreturn	user/usys.S	/^sigreturn:$/;"	l
sigreturn	user/wc.asm	/^sigreturn:$/;"	l
sigreturn	user/zombie.asm	/^sigreturn:$/;"	l
size	kernel/file.h	/^  uint size;$/;"	m	struct:inode
size	kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	kernel/log.c	/^  int size;$/;"	m	struct:log	file:
size	kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat
size	user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon1	file:
skipelem	kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleep	user/alarmtest.asm	/^sleep:$/;"	l
sleep	user/bttest.asm	/^sleep:$/;"	l
sleep	user/call.asm	/^sleep:$/;"	l
sleep	user/cat.asm	/^sleep:$/;"	l
sleep	user/echo.asm	/^sleep:$/;"	l
sleep	user/forktest.asm	/^sleep:$/;"	l
sleep	user/grep.asm	/^sleep:$/;"	l
sleep	user/grind.asm	/^sleep:$/;"	l
sleep	user/init.asm	/^sleep:$/;"	l
sleep	user/kill.asm	/^sleep:$/;"	l
sleep	user/ln.asm	/^sleep:$/;"	l
sleep	user/ls.asm	/^sleep:$/;"	l
sleep	user/mkdir.asm	/^sleep:$/;"	l
sleep	user/rm.asm	/^sleep:$/;"	l
sleep	user/sh.asm	/^sleep:$/;"	l
sleep	user/stressfs.asm	/^sleep:$/;"	l
sleep	user/usertests.asm	/^sleep:$/;"	l
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/wc.asm	/^sleep:$/;"	l
sleep	user/zombie.asm	/^sleep:$/;"	l
sleeplock	kernel/sleeplock.h	/^struct sleeplock {$/;"	s
slow_handler	user/alarmtest.c	/^slow_handler()$/;"	f
sp	kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe
sp	kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context
spin	kernel/entry.S	/^spin:$/;"	l
spinlock	kernel/spinlock.h	/^struct spinlock {$/;"	s
src	user/alarmtest.asm	/^  src = vsrc;$/;"	d
src	user/bttest.asm	/^  src = vsrc;$/;"	d
src	user/call.asm	/^  src = vsrc;$/;"	d
src	user/cat.asm	/^  src = vsrc;$/;"	d
src	user/echo.asm	/^  src = vsrc;$/;"	d
src	user/forktest.asm	/^  src = vsrc;$/;"	d
src	user/grep.asm	/^  src = vsrc;$/;"	d
src	user/grind.asm	/^  src = vsrc;$/;"	d
src	user/init.asm	/^  src = vsrc;$/;"	d
src	user/kill.asm	/^  src = vsrc;$/;"	d
src	user/ln.asm	/^  src = vsrc;$/;"	d
src	user/ls.asm	/^  src = vsrc;$/;"	d
src	user/mkdir.asm	/^  src = vsrc;$/;"	d
src	user/rm.asm	/^  src = vsrc;$/;"	d
src	user/sh.asm	/^  src = vsrc;$/;"	d
src	user/stressfs.asm	/^  src = vsrc;$/;"	d
src	user/usertests.asm	/^  src = vsrc;$/;"	d
src	user/wc.asm	/^  src = vsrc;$/;"	d
src	user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v
stackbase	kernel/kernel.asm	/^  stackbase = sp - PGSIZE;$/;"	d
stacktest	user/usertests.c	/^stacktest(char *s)$/;"	f
start	kernel/log.c	/^  int start;$/;"	m	struct:log	file:
start	kernel/start.c	/^start()$/;"	f
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.asm	/^start:$/;"	l
started	kernel/kernel.asm	/^    started = 1;$/;"	d
started	kernel/main.c	/^volatile static int started = 0;$/;"	v	file:
stat	kernel/stat.h	/^struct stat {$/;"	s
stat	mkfs/mkfs.c	8;"	d	file:
stat	user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
state	kernel/kernel.asm	/^      state = "???";$/;"	d
state	kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	user/alarmtest.asm	/^        state = '%';$/;"	d
state	user/alarmtest.asm	/^      state = 0;$/;"	d
state	user/alarmtest.asm	/^  state = 0;$/;"	d
state	user/bttest.asm	/^        state = '%';$/;"	d
state	user/bttest.asm	/^      state = 0;$/;"	d
state	user/bttest.asm	/^  state = 0;$/;"	d
state	user/call.asm	/^        state = '%';$/;"	d
state	user/call.asm	/^      state = 0;$/;"	d
state	user/call.asm	/^  state = 0;$/;"	d
state	user/cat.asm	/^        state = '%';$/;"	d
state	user/cat.asm	/^      state = 0;$/;"	d
state	user/cat.asm	/^  state = 0;$/;"	d
state	user/echo.asm	/^        state = '%';$/;"	d
state	user/echo.asm	/^      state = 0;$/;"	d
state	user/echo.asm	/^  state = 0;$/;"	d
state	user/grep.asm	/^        state = '%';$/;"	d
state	user/grep.asm	/^      state = 0;$/;"	d
state	user/grep.asm	/^  state = 0;$/;"	d
state	user/grind.asm	/^        state = '%';$/;"	d
state	user/grind.asm	/^      state = 0;$/;"	d
state	user/grind.asm	/^  state = 0;$/;"	d
state	user/init.asm	/^        state = '%';$/;"	d
state	user/init.asm	/^      state = 0;$/;"	d
state	user/init.asm	/^  state = 0;$/;"	d
state	user/kill.asm	/^        state = '%';$/;"	d
state	user/kill.asm	/^      state = 0;$/;"	d
state	user/kill.asm	/^  state = 0;$/;"	d
state	user/ln.asm	/^        state = '%';$/;"	d
state	user/ln.asm	/^      state = 0;$/;"	d
state	user/ln.asm	/^  state = 0;$/;"	d
state	user/ls.asm	/^        state = '%';$/;"	d
state	user/ls.asm	/^      state = 0;$/;"	d
state	user/ls.asm	/^  state = 0;$/;"	d
state	user/mkdir.asm	/^        state = '%';$/;"	d
state	user/mkdir.asm	/^      state = 0;$/;"	d
state	user/mkdir.asm	/^  state = 0;$/;"	d
state	user/rm.asm	/^        state = '%';$/;"	d
state	user/rm.asm	/^      state = 0;$/;"	d
state	user/rm.asm	/^  state = 0;$/;"	d
state	user/sh.asm	/^        state = '%';$/;"	d
state	user/sh.asm	/^      state = 0;$/;"	d
state	user/sh.asm	/^  state = 0;$/;"	d
state	user/stressfs.asm	/^        state = '%';$/;"	d
state	user/stressfs.asm	/^      state = 0;$/;"	d
state	user/stressfs.asm	/^  state = 0;$/;"	d
state	user/usertests.asm	/^        state = '%';$/;"	d
state	user/usertests.asm	/^      state = 0;$/;"	d
state	user/usertests.asm	/^  state = 0;$/;"	d
state	user/wc.asm	/^        state = '%';$/;"	d
state	user/wc.asm	/^      state = 0;$/;"	d
state	user/wc.asm	/^  state = 0;$/;"	d
state	user/zombie.asm	/^        state = '%';$/;"	d
state	user/zombie.asm	/^      state = 0;$/;"	d
state	user/zombie.asm	/^  state = 0;$/;"	d
stati	kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel/kernel.asm	/^static inline uint64$/;"	l
static	kernel/kernel.asm	/^static inline void $/;"	l
static	kernel/kernel.asm	/^static inline void$/;"	l
static	kernel/kernel.asm	/^static int loadseg(pde_t *pgdir, uint64 addr, struct inode *ip, uint offset, uint sz);$/;"	l
static	kernel/kernel.asm	/^static int$/;"	l
static	kernel/kernel.asm	/^static struct inode*$/;"	t
static	kernel/kernel.asm	/^static uint$/;"	l
static	kernel/kernel.asm	/^static uint64$/;"	l
static	kernel/kernel.asm	/^static void$/;"	l
static	user/alarmtest.asm	/^static Header *freep;$/;"	l
static	user/alarmtest.asm	/^static Header base;$/;"	l
static	user/alarmtest.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/alarmtest.asm	/^static void$/;"	l
static	user/bttest.asm	/^static Header *freep;$/;"	l
static	user/bttest.asm	/^static Header base;$/;"	l
static	user/bttest.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/bttest.asm	/^static void$/;"	l
static	user/call.asm	/^static Header *freep;$/;"	l
static	user/call.asm	/^static Header base;$/;"	l
static	user/call.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/call.asm	/^static void$/;"	l
static	user/cat.asm	/^static Header *freep;$/;"	l
static	user/cat.asm	/^static Header base;$/;"	l
static	user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/cat.asm	/^static void$/;"	l
static	user/echo.asm	/^static Header *freep;$/;"	l
static	user/echo.asm	/^static Header base;$/;"	l
static	user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/echo.asm	/^static void$/;"	l
static	user/grep.asm	/^static Header *freep;$/;"	l
static	user/grep.asm	/^static Header base;$/;"	l
static	user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grep.asm	/^static void$/;"	l
static	user/grind.asm	/^static Header *freep;$/;"	l
static	user/grind.asm	/^static Header base;$/;"	l
static	user/grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grind.asm	/^static void$/;"	l
static	user/init.asm	/^static Header *freep;$/;"	l
static	user/init.asm	/^static Header base;$/;"	l
static	user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/init.asm	/^static void$/;"	l
static	user/kill.asm	/^static Header *freep;$/;"	l
static	user/kill.asm	/^static Header base;$/;"	l
static	user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kill.asm	/^static void$/;"	l
static	user/ln.asm	/^static Header *freep;$/;"	l
static	user/ln.asm	/^static Header base;$/;"	l
static	user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ln.asm	/^static void$/;"	l
static	user/ls.asm	/^static Header *freep;$/;"	l
static	user/ls.asm	/^static Header base;$/;"	l
static	user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ls.asm	/^static void$/;"	l
static	user/mkdir.asm	/^static Header *freep;$/;"	l
static	user/mkdir.asm	/^static Header base;$/;"	l
static	user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/mkdir.asm	/^static void$/;"	l
static	user/rm.asm	/^static Header *freep;$/;"	l
static	user/rm.asm	/^static Header base;$/;"	l
static	user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/rm.asm	/^static void$/;"	l
static	user/sh.asm	/^static Header *freep;$/;"	l
static	user/sh.asm	/^static Header base;$/;"	l
static	user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/sh.asm	/^static void$/;"	l
static	user/stressfs.asm	/^static Header *freep;$/;"	l
static	user/stressfs.asm	/^static Header base;$/;"	l
static	user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/stressfs.asm	/^static void$/;"	l
static	user/usertests.asm	/^static Header *freep;$/;"	l
static	user/usertests.asm	/^static Header base;$/;"	l
static	user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/usertests.asm	/^static inline uint64$/;"	l
static	user/usertests.asm	/^static void$/;"	l
static	user/wc.asm	/^static Header *freep;$/;"	l
static	user/wc.asm	/^static Header base;$/;"	l
static	user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/wc.asm	/^static void$/;"	l
static	user/zombie.asm	/^static Header *freep;$/;"	l
static	user/zombie.asm	/^static Header base;$/;"	l
static	user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/zombie.asm	/^static void$/;"	l
static_assert	mkfs/mkfs.c	15;"	d	file:
status	kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon8	file:
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strchr	user/ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	kernel/string.c	/^strlen(const char *s)$/;"	f
strlen	user/ulib.c	/^strlen(const char *s)$/;"	f
strncmp	kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel/kernel.asm	/^  struct proc *original_parent = p->parent;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	user/usertests.c	/^subdir(char *s)$/;"	f
superblock	kernel/fs.h	/^struct superblock {$/;"	s
swtch	kernel/swtch.S	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	kernel/sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	kernel/sysfile.c	/^sys_close(void)$/;"	f
sys_dup	kernel/sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	kernel/sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	kernel/sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	kernel/sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	kernel/sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	kernel/sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	kernel/sysproc.c	/^sys_kill(void)$/;"	f
sys_link	kernel/sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	kernel/sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	kernel/sysfile.c	/^sys_mknod(void)$/;"	f
sys_open	kernel/sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	kernel/sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	kernel/sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	kernel/sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sigalarm	kernel/sysproc.c	/^sys_sigalarm(void){$/;"	f
sys_sigreturn	kernel/sysproc.c	/^sys_sigreturn(void){$/;"	f
sys_sleep	kernel/sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	kernel/sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	kernel/sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	kernel/sysproc.c	/^sys_wait(void)$/;"	f
sys_write	kernel/sysfile.c	/^sys_write(void)$/;"	f
syscall	kernel/syscall.c	/^syscall(void)$/;"	f
syscalls	kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	file:
sz	kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	kernel/kernel.asm	/^  sz = sz1;$/;"	d
sz	kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t0	kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe
t1	kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe
t2	kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe
t3	kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe
t4	kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe
t5	kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe
t6	kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe
target	kernel/kernel.asm	/^  target = n;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test0	user/alarmtest.c	/^test0()$/;"	f
test1	user/alarmtest.c	/^test1()$/;"	f
test2	user/alarmtest.c	/^test2()$/;"	f
ticks	kernel/proc.h	/^  int ticks;$/;"	m	struct:proc
ticks	kernel/trap.c	/^uint ticks;$/;"	v
ticks0	kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timerinit	kernel/start.c	/^timerinit()$/;"	f
timervec	kernel/kernelvec.S	/^timervec:$/;"	l
tok	user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	user/usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
total	user/usertests.asm	/^    total = 0;$/;"	d
total	user/usertests.asm	/^  total = 0;$/;"	d
tp	kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe
trampoline	kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	kernel/proc.h	/^  struct trapframe *trapframe; \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:proc::trapframe
trapframe	kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	kernel/trap.c	/^trapinit(void)$/;"	f
trapinithart	kernel/trap.c	/^trapinithart(void)$/;"	f
truncate1	user/usertests.c	/^truncate1(char *s)$/;"	f
truncate2	user/usertests.c	/^truncate2(char *s)$/;"	f
truncate3	user/usertests.c	/^truncate3(char *s)$/;"	f
twochildren	user/usertests.c	/^twochildren(char *s)$/;"	f
type	kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anon9
type	kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uart_tx_buf	kernel/uart.c	/^char uart_tx_buf[UART_TX_BUF_SIZE];$/;"	v
uart_tx_lock	kernel/uart.c	/^struct spinlock uart_tx_lock;$/;"	v	typeref:struct:spinlock
uart_tx_r	kernel/kernel.asm	/^    uart_tx_r = (uart_tx_r + 1) % UART_TX_BUF_SIZE;$/;"	d
uart_tx_r	kernel/uart.c	/^int uart_tx_r; \/\/ read next from uart_tx_buf[uar_tx_r++]$/;"	v
uart_tx_w	kernel/kernel.asm	/^      uart_tx_w = (uart_tx_w + 1) % UART_TX_BUF_SIZE;$/;"	d
uart_tx_w	kernel/uart.c	/^int uart_tx_w; \/\/ write next to uart_tx_buf[uart_tx_w++]$/;"	v
uartgetc	kernel/uart.c	/^uartgetc(void)$/;"	f
uartinit	kernel/uart.c	/^uartinit(void)$/;"	f
uartintr	kernel/uart.c	/^uartintr(void)$/;"	f
uartputc	kernel/uart.c	/^uartputc(int c)$/;"	f
uartputc_sync	kernel/uart.c	/^uartputc_sync(int c)$/;"	f
uartstart	kernel/uart.c	/^uartstart()$/;"	f
uchar	kernel/types.h	/^typedef unsigned char  uchar;$/;"	t
uint	kernel/types.h	/^typedef unsigned int   uint;$/;"	t
uint	user/alarmtest.asm	/^uint$/;"	l
uint	user/bttest.asm	/^uint$/;"	l
uint	user/call.asm	/^uint$/;"	l
uint	user/cat.asm	/^uint$/;"	l
uint	user/echo.asm	/^uint$/;"	l
uint	user/forktest.asm	/^uint$/;"	l
uint	user/grep.asm	/^uint$/;"	l
uint	user/grind.asm	/^uint$/;"	l
uint	user/init.asm	/^uint$/;"	l
uint	user/kill.asm	/^uint$/;"	l
uint	user/ln.asm	/^uint$/;"	l
uint	user/ls.asm	/^uint$/;"	l
uint	user/mkdir.asm	/^uint$/;"	l
uint	user/rm.asm	/^uint$/;"	l
uint	user/sh.asm	/^uint$/;"	l
uint	user/stressfs.asm	/^uint$/;"	l
uint	user/usertests.asm	/^uint$/;"	l
uint	user/wc.asm	/^uint$/;"	l
uint	user/zombie.asm	/^uint$/;"	l
uint16	kernel/types.h	/^typedef unsigned short uint16;$/;"	t
uint32	kernel/types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	kernel/kernel.asm	/^uint64$/;"	l
uint64	kernel/types.h	/^typedef unsigned long uint64;$/;"	t
uint8	kernel/types.h	/^typedef unsigned char uint8;$/;"	t
uninit	user/usertests.c	/^char uninit[10000];$/;"	v
unlink	user/alarmtest.asm	/^unlink:$/;"	l
unlink	user/bttest.asm	/^unlink:$/;"	l
unlink	user/call.asm	/^unlink:$/;"	l
unlink	user/cat.asm	/^unlink:$/;"	l
unlink	user/echo.asm	/^unlink:$/;"	l
unlink	user/forktest.asm	/^unlink:$/;"	l
unlink	user/grep.asm	/^unlink:$/;"	l
unlink	user/grind.asm	/^unlink:$/;"	l
unlink	user/init.asm	/^unlink:$/;"	l
unlink	user/kill.asm	/^unlink:$/;"	l
unlink	user/ln.asm	/^unlink:$/;"	l
unlink	user/ls.asm	/^unlink:$/;"	l
unlink	user/mkdir.asm	/^unlink:$/;"	l
unlink	user/rm.asm	/^unlink:$/;"	l
unlink	user/sh.asm	/^unlink:$/;"	l
unlink	user/stressfs.asm	/^unlink:$/;"	l
unlink	user/usertests.asm	/^unlink:$/;"	l
unlink	user/usys.S	/^unlink:$/;"	l
unlink	user/wc.asm	/^unlink:$/;"	l
unlink	user/zombie.asm	/^unlink:$/;"	l
unlinkread	user/usertests.c	/^unlinkread(char *s)$/;"	f
unsigned	user/grind.asm	/^unsigned long rand_next = 1;$/;"	l
uptime	user/alarmtest.asm	/^uptime:$/;"	l
uptime	user/bttest.asm	/^uptime:$/;"	l
uptime	user/call.asm	/^uptime:$/;"	l
uptime	user/cat.asm	/^uptime:$/;"	l
uptime	user/echo.asm	/^uptime:$/;"	l
uptime	user/forktest.asm	/^uptime:$/;"	l
uptime	user/grep.asm	/^uptime:$/;"	l
uptime	user/grind.asm	/^uptime:$/;"	l
uptime	user/init.asm	/^uptime:$/;"	l
uptime	user/kill.asm	/^uptime:$/;"	l
uptime	user/ln.asm	/^uptime:$/;"	l
uptime	user/ls.asm	/^uptime:$/;"	l
uptime	user/mkdir.asm	/^uptime:$/;"	l
uptime	user/rm.asm	/^uptime:$/;"	l
uptime	user/sh.asm	/^uptime:$/;"	l
uptime	user/stressfs.asm	/^uptime:$/;"	l
uptime	user/usertests.asm	/^uptime:$/;"	l
uptime	user/usys.S	/^uptime:$/;"	l
uptime	user/wc.asm	/^uptime:$/;"	l
uptime	user/zombie.asm	/^uptime:$/;"	l
used	kernel/virtio_disk.c	/^  struct UsedArea *used;$/;"	m	struct:disk	typeref:struct:disk::UsedArea	file:
used_idx	kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
userinit	kernel/proc.c	/^userinit(void)$/;"	f
userret	kernel/trampoline.S	/^userret:$/;"	l
usertrap	kernel/trap.c	/^usertrap(void)$/;"	f
usertrapret	kernel/trap.c	/^usertrapret(void)$/;"	f
uservec	kernel/trampoline.S	/^uservec:    $/;"	l
ushort	kernel/types.h	/^typedef unsigned short ushort;$/;"	t
uvmalloc	kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmclear	kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f
uvmcopy	kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f
uvmcreate	kernel/vm.c	/^uvmcreate()$/;"	f
uvmdealloc	kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmfree	kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f
uvminit	kernel/vm.c	/^uvminit(pagetable_t pagetable, uchar *src, uint sz)$/;"	f
uvmunmap	kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)$/;"	f
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
valid	kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf
valid	kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode
validatetest	user/usertests.c	/^validatetest(char *s)$/;"	f
vdisk_lock	kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:disk::spinlock	file:
version	kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr
virtio_disk_init	kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f
virtio_disk_intr	kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f
virtio_disk_rw	kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f
void	kernel/kernel.asm	/^void *$/;"	l
void	kernel/kernel.asm	/^void backtrace(void){$/;"	l
void	kernel/kernel.asm	/^void uartstart();$/;"	l
void	kernel/kernel.asm	/^void$/;"	l
void	user/alarmtest.asm	/^void *$/;"	l
void	user/alarmtest.asm	/^void __attribute__ ((noinline)) foo(int i, int *j) {$/;"	l
void	user/alarmtest.asm	/^void$/;"	l
void	user/bttest.asm	/^void *$/;"	l
void	user/bttest.asm	/^void$/;"	l
void	user/call.asm	/^void *$/;"	l
void	user/call.asm	/^void main(void) {$/;"	l
void	user/call.asm	/^void$/;"	l
void	user/cat.asm	/^void *$/;"	l
void	user/cat.asm	/^void$/;"	l
void	user/echo.asm	/^void *$/;"	l
void	user/echo.asm	/^void$/;"	l
void	user/forktest.asm	/^void *$/;"	l
void	user/forktest.asm	/^void$/;"	l
void	user/grep.asm	/^void *$/;"	l
void	user/grep.asm	/^void$/;"	l
void	user/grind.asm	/^void *$/;"	l
void	user/grind.asm	/^void$/;"	l
void	user/init.asm	/^void *$/;"	l
void	user/init.asm	/^void$/;"	l
void	user/kill.asm	/^void *$/;"	l
void	user/kill.asm	/^void$/;"	l
void	user/ln.asm	/^void *$/;"	l
void	user/ln.asm	/^void$/;"	l
void	user/ls.asm	/^void *$/;"	l
void	user/ls.asm	/^void$/;"	l
void	user/mkdir.asm	/^void *$/;"	l
void	user/mkdir.asm	/^void$/;"	l
void	user/rm.asm	/^void *$/;"	l
void	user/rm.asm	/^void$/;"	l
void	user/sh.asm	/^void *$/;"	l
void	user/sh.asm	/^void$/;"	l
void	user/stressfs.asm	/^void *$/;"	l
void	user/stressfs.asm	/^void$/;"	l
void	user/usertests.asm	/^void *$/;"	l
void	user/usertests.asm	/^void$/;"	l
void	user/wc.asm	/^void *$/;"	l
void	user/wc.asm	/^void$/;"	l
void	user/zombie.asm	/^void *$/;"	l
void	user/zombie.asm	/^void$/;"	l
volatile	kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
volatile	user/alarmtest.asm	/^volatile static int count;$/;"	l
vprintf	user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
w	kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon3	file:
w_mcounteren	kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f
w_medeleg	kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f
w_mepc	kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f
w_mideleg	kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f
w_mie	kernel/riscv.h	/^w_mie(uint64 x)$/;"	f
w_mscratch	kernel/riscv.h	/^w_mscratch(uint64 x)$/;"	f
w_mstatus	kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f
w_mtvec	kernel/riscv.h	/^w_mtvec(uint64 x)$/;"	f
w_satp	kernel/riscv.h	/^w_satp(uint64 x)$/;"	f
w_sepc	kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f
w_sie	kernel/riscv.h	/^w_sie(uint64 x)$/;"	f
w_sip	kernel/riscv.h	/^w_sip(uint64 x)$/;"	f
w_sscratch	kernel/riscv.h	/^w_sscratch(uint64 x)$/;"	f
w_sstatus	kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f
w_stvec	kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f
w_tp	kernel/riscv.h	/^w_tp(uint64 x)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	kernel/proc.c	/^wait(uint64 addr)$/;"	f
wait	user/alarmtest.asm	/^wait:$/;"	l
wait	user/bttest.asm	/^wait:$/;"	l
wait	user/call.asm	/^wait:$/;"	l
wait	user/cat.asm	/^wait:$/;"	l
wait	user/echo.asm	/^wait:$/;"	l
wait	user/forktest.asm	/^wait:$/;"	l
wait	user/grep.asm	/^wait:$/;"	l
wait	user/grind.asm	/^wait:$/;"	l
wait	user/init.asm	/^wait:$/;"	l
wait	user/kill.asm	/^wait:$/;"	l
wait	user/ln.asm	/^wait:$/;"	l
wait	user/ls.asm	/^wait:$/;"	l
wait	user/mkdir.asm	/^wait:$/;"	l
wait	user/rm.asm	/^wait:$/;"	l
wait	user/sh.asm	/^wait:$/;"	l
wait	user/stressfs.asm	/^wait:$/;"	l
wait	user/usertests.asm	/^wait:$/;"	l
wait	user/usys.S	/^wait:$/;"	l
wait	user/wc.asm	/^wait:$/;"	l
wait	user/zombie.asm	/^wait:$/;"	l
wakeup	kernel/proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	kernel/proc.c	/^wakeup1(struct proc *p)$/;"	f	file:
walk	kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f
walkaddr	kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f
wc	user/wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
wpid	user/init.asm	/^      wpid = wait((int *) 0);$/;"	d
writable	kernel/file.h	/^  char writable;$/;"	m	struct:file
write	gradelib.py	/^    def write(self, buf):$/;"	f
write	kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw
write	user/alarmtest.asm	/^write:$/;"	l
write	user/bttest.asm	/^write:$/;"	l
write	user/call.asm	/^write:$/;"	l
write	user/cat.asm	/^write:$/;"	l
write	user/echo.asm	/^write:$/;"	l
write	user/forktest.asm	/^write:$/;"	l
write	user/grep.asm	/^write:$/;"	l
write	user/grind.asm	/^write:$/;"	l
write	user/init.asm	/^write:$/;"	l
write	user/kill.asm	/^write:$/;"	l
write	user/ln.asm	/^write:$/;"	l
write	user/ls.asm	/^write:$/;"	l
write	user/mkdir.asm	/^write:$/;"	l
write	user/rm.asm	/^write:$/;"	l
write	user/sh.asm	/^write:$/;"	l
write	user/stressfs.asm	/^write:$/;"	l
write	user/usertests.asm	/^write:$/;"	l
write	user/usys.S	/^write:$/;"	l
write	user/wc.asm	/^write:$/;"	l
write	user/zombie.asm	/^write:$/;"	l
write_head	kernel/log.c	/^write_head(void)$/;"	f	file:
write_log	kernel/log.c	/^write_log(void)$/;"	f	file:
writebig	user/usertests.c	/^writebig(char *s)$/;"	f
writei	kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f
writeopen	kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	user/usertests.c	/^writetest(char *s)$/;"	f
wsect	mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	kernel/kernel.asm	/^    x = -xx;$/;"	d
x	kernel/kernel.asm	/^    x = xx;$/;"	d
x	user/alarmtest.asm	/^    x = -xx;$/;"	d
x	user/alarmtest.asm	/^    x = xx;$/;"	d
x	user/bttest.asm	/^    x = -xx;$/;"	d
x	user/bttest.asm	/^    x = xx;$/;"	d
x	user/call.asm	/^    x = -xx;$/;"	d
x	user/call.asm	/^    x = xx;$/;"	d
x	user/cat.asm	/^    x = -xx;$/;"	d
x	user/cat.asm	/^    x = xx;$/;"	d
x	user/echo.asm	/^    x = -xx;$/;"	d
x	user/echo.asm	/^    x = xx;$/;"	d
x	user/grep.asm	/^    x = -xx;$/;"	d
x	user/grep.asm	/^    x = xx;$/;"	d
x	user/grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	user/grind.asm	/^    x = -xx;$/;"	d
x	user/grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	user/grind.asm	/^    x = xx;$/;"	d
x	user/init.asm	/^    x = -xx;$/;"	d
x	user/init.asm	/^    x = xx;$/;"	d
x	user/kill.asm	/^    x = -xx;$/;"	d
x	user/kill.asm	/^    x = xx;$/;"	d
x	user/ln.asm	/^    x = -xx;$/;"	d
x	user/ln.asm	/^    x = xx;$/;"	d
x	user/ls.asm	/^    x = -xx;$/;"	d
x	user/ls.asm	/^    x = xx;$/;"	d
x	user/mkdir.asm	/^    x = -xx;$/;"	d
x	user/mkdir.asm	/^    x = xx;$/;"	d
x	user/rm.asm	/^    x = -xx;$/;"	d
x	user/rm.asm	/^    x = xx;$/;"	d
x	user/sh.asm	/^    x = -xx;$/;"	d
x	user/sh.asm	/^    x = xx;$/;"	d
x	user/stressfs.asm	/^    x = -xx;$/;"	d
x	user/stressfs.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	user/usertests.asm	/^    x = -xx;$/;"	d
x	user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	user/usertests.asm	/^    x = xx;$/;"	d
x	user/wc.asm	/^    x = -xx;$/;"	d
x	user/wc.asm	/^    x = xx;$/;"	d
x	user/zombie.asm	/^    x = -xx;$/;"	d
x	user/zombie.asm	/^    x = xx;$/;"	d
xint	mkfs/mkfs.c	/^xint(uint x)$/;"	f
xshort	mkfs/mkfs.c	/^xshort(ushort x)$/;"	f
xstate	kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc
xticks	kernel/kernel.asm	/^  xticks = ticks;$/;"	d
year	kernel/date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	kernel/proc.c	/^yield(void)$/;"	f
zeroes	mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v
