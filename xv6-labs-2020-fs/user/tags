!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Align	umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	sh.c	12;"	d	file:
BUFSZ	usertests.c	20;"	d	file:
Disassembly	bigfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	zombie.asm	/^Disassembly of section .text:$/;"	l
EXEC	sh.c	8;"	d	file:
Header	umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
LIST	sh.c	11;"	d	file:
MAXARGS	sh.c	14;"	d	file:
N	forktest.asm	/^#define N  1000$/;"	d
N	forktest.c	8;"	d	file:
PIPE	sh.c	10;"	d	file:
REDIR	sh.c	9;"	d	file:
a	cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	usertests.asm	/^    a = b + 1;$/;"	d
a	usertests.asm	/^    a = sbrk(0);$/;"	d
a	usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	usertests.asm	/^  a = sbrk(0);$/;"	d
a	usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	bigfile.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	cat.asm	/^  a0:	00858913          	addi	s2,a1,8$/;"	l
a0	echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	grind.asm	/^      a0:	26450513          	addi	a0,a0,612 # 1300 <malloc+0xe6>$/;"	l
a0	ls.asm	/^  a0:	02000593          	li	a1,32$/;"	l
a0	mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	sh.asm	/^      a0:	00000097          	auipc	ra,0x0$/;"	l
a0	stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	usertests.asm	/^      a0:	e426                	sd	s1,8(sp)$/;"	l
a0	wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	zombie.asm	/^  a0:	0800                	addi	s0,sp,16$/;"	l
a00	grep.asm	/^ a00:	4798                	lw	a4,8(a5)$/;"	l
a00	grind.asm	/^     a00:	fa043023          	sd	zero,-96(s0)$/;"	l
a00	ls.asm	/^ a00:	01078513          	addi	a0,a5,16$/;"	l
a00	sh.asm	/^     a00:	85a6                	mv	a1,s1$/;"	l
a02	grep.asm	/^ a02:	fa9775e3          	bgeu	a4,s1,9ac <malloc+0x70>$/;"	l
a02	sh.asm	/^     a02:	fd840513          	addi	a0,s0,-40$/;"	l
a02	usertests.asm	/^     a02:	2485                	addiw	s1,s1,1$/;"	l
a04	grind.asm	/^     a04:	f9840593          	addi	a1,s0,-104$/;"	l
a04	ls.asm	/^ a04:	70e2                	ld	ra,56(sp)$/;"	l
a04	usertests.asm	/^     a04:	ff4491e3          	bne	s1,s4,9e6 <writebig+0x3e>$/;"	l
a06	grep.asm	/^ a06:	00093703          	ld	a4,0(s2)$/;"	l
a06	ls.asm	/^ a06:	7442                	ld	s0,48(sp)$/;"	l
a06	sh.asm	/^     a06:	00000097          	auipc	ra,0x0$/;"	l
a08	grind.asm	/^     a08:	00001517          	auipc	a0,0x1$/;"	l
a08	ls.asm	/^ a08:	74a2                	ld	s1,40(sp)$/;"	l
a08	usertests.asm	/^     a08:	854e                	mv	a0,s3$/;"	l
a0a	grep.asm	/^ a0a:	853e                	mv	a0,a5$/;"	l
a0a	ls.asm	/^ a0a:	7902                	ld	s2,32(sp)$/;"	l
a0a	sh.asm	/^     a0a:	df6080e7          	jalr	-522(ra) # 7fc <parseline>$/;"	l
a0a	usertests.asm	/^     a0a:	00005097          	auipc	ra,0x5$/;"	l
a0c	grep.asm	/^ a0c:	fef719e3          	bne	a4,a5,9fe <malloc+0xc2>$/;"	l
a0c	grind.asm	/^     a0c:	b9050513          	addi	a0,a0,-1136 # 1598 <malloc+0x37e>$/;"	l
a0c	ls.asm	/^ a0c:	69e2                	ld	s3,24(sp)$/;"	l
a0e	ls.asm	/^ a0e:	6a42                	ld	s4,16(sp)$/;"	l
a0e	sh.asm	/^     a0e:	892a                	mv	s2,a0$/;"	l
a0e	usertests.asm	/^     a0e:	c26080e7          	jalr	-986(ra) # 5630 <close>$/;"	l
a10	grep.asm	/^ a10:	8552                	mv	a0,s4$/;"	l
a10	grind.asm	/^     a10:	00000097          	auipc	ra,0x0$/;"	l
a10	ls.asm	/^ a10:	6aa2                	ld	s5,8(sp)$/;"	l
a10	sh.asm	/^     a10:	00001617          	auipc	a2,0x1$/;"	l
a12	grep.asm	/^ a12:	00000097          	auipc	ra,0x0$/;"	l
a12	ls.asm	/^ a12:	6b02                	ld	s6,0(sp)$/;"	l
a12	usertests.asm	/^     a12:	4581                	li	a1,0$/;"	l
a14	grind.asm	/^     a14:	410080e7          	jalr	1040(ra) # e20 <exec>$/;"	l
a14	ls.asm	/^ a14:	6121                	addi	sp,sp,64$/;"	l
a14	sh.asm	/^     a14:	9b060613          	addi	a2,a2,-1616 # 13c0 <malloc+0x1c6>$/;"	l
a14	usertests.asm	/^     a14:	00005517          	auipc	a0,0x5$/;"	l
a16	grep.asm	/^ a16:	b80080e7          	jalr	-1152(ra) # 592 <sbrk>$/;"	l
a16	ls.asm	/^ a16:	8082                	ret$/;"	l
a18	grind.asm	/^     a18:	00001597          	auipc	a1,0x1$/;"	l
a18	ls.asm	/^ a18:	6398                	ld	a4,0(a5)$/;"	l
a18	sh.asm	/^     a18:	85a6                	mv	a1,s1$/;"	l
a18	usertests.asm	/^     a18:	51c50513          	addi	a0,a0,1308 # 5f30 <malloc+0x4f6>$/;"	l
a1a	grep.asm	/^ a1a:	fd5518e3          	bne	a0,s5,9ea <malloc+0xae>$/;"	l
a1a	ls.asm	/^ a1a:	e118                	sd	a4,0(a0)$/;"	l
a1a	sh.asm	/^     a1a:	fd840513          	addi	a0,s0,-40$/;"	l
a1c	grind.asm	/^     a1c:	b8858593          	addi	a1,a1,-1144 # 15a0 <malloc+0x386>$/;"	l
a1c	ls.asm	/^ a1c:	bff1                	j	9f8 <malloc+0x88>$/;"	l
a1c	usertests.asm	/^     a1c:	00005097          	auipc	ra,0x5$/;"	l
a1e	grep.asm	/^ a1e:	4501                	li	a0,0$/;"	l
a1e	ls.asm	/^ a1e:	01652423          	sw	s6,8(a0)$/;"	l
a1e	sh.asm	/^     a1e:	00000097          	auipc	ra,0x0$/;"	l
a2	echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	init.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	kill.asm	/^  a2:	40a7853b          	subw	a0,a5,a0$/;"	l
a2	ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	usertests.asm	/^      a2:	1000                	addi	s0,sp,32$/;"	l
a2	zombie.asm	/^  a2:	ca19                	beqz	a2,b8 <memset+0x1c>$/;"	l
a20	grep.asm	/^ a20:	bf45                	j	9d0 <malloc+0x94>$/;"	l
a20	grind.asm	/^     a20:	4509                	li	a0,2$/;"	l
a20	usertests.asm	/^     a20:	c2c080e7          	jalr	-980(ra) # 5648 <open>$/;"	l
a22	grind.asm	/^     a22:	00000097          	auipc	ra,0x0$/;"	l
a22	ls.asm	/^ a22:	0541                	addi	a0,a0,16$/;"	l
a22	sh.asm	/^     a22:	b00080e7          	jalr	-1280(ra) # 51e <peek>$/;"	l
a24	ls.asm	/^ a24:	00000097          	auipc	ra,0x0$/;"	l
a24	usertests.asm	/^     a24:	89aa                	mv	s3,a0$/;"	l
a26	grind.asm	/^     a26:	712080e7          	jalr	1810(ra) # 1134 <fprintf>$/;"	l
a26	sh.asm	/^     a26:	fd843603          	ld	a2,-40(s0)$/;"	l
a26	usertests.asm	/^     a26:	4481                	li	s1,0$/;"	l
a28	ls.asm	/^ a28:	eca080e7          	jalr	-310(ra) # 8ee <free>$/;"	l
a28	usertests.asm	/^     a28:	0000b917          	auipc	s2,0xb$/;"	l
a2a	grind.asm	/^     a2a:	4519                	li	a0,6$/;"	l
a2a	sh.asm	/^     a2a:	00961e63          	bne	a2,s1,a46 <parsecmd+0x66>$/;"	l
a2c	grind.asm	/^     a2c:	00000097          	auipc	ra,0x0$/;"	l
a2c	ls.asm	/^ a2c:	00093503          	ld	a0,0(s2)$/;"	l
a2c	usertests.asm	/^     a2c:	0c090913          	addi	s2,s2,192 # bae8 <buf>$/;"	l
a2e	sh.asm	/^     a2e:	854a                	mv	a0,s2$/;"	l
a30	grind.asm	/^     a30:	3bc080e7          	jalr	956(ra) # de8 <exit>$/;"	l
a30	ls.asm	/^ a30:	d971                	beqz	a0,a04 <malloc+0x94>$/;"	l
a30	sh.asm	/^     a30:	00000097          	auipc	ra,0x0$/;"	l
a30	usertests.asm	/^     a30:	06054263          	bltz	a0,a94 <writebig+0xec>$/;"	l
a32	ls.asm	/^ a32:	611c                	ld	a5,0(a0)$/;"	l
a34	grind.asm	/^     a34:	00001597          	auipc	a1,0x1$/;"	l
a34	ls.asm	/^ a34:	4798                	lw	a4,8(a5)$/;"	l
a34	sh.asm	/^     a34:	f18080e7          	jalr	-232(ra) # 948 <nulterminate>$/;"	l
a34	usertests.asm	/^     a34:	40000613          	li	a2,1024$/;"	l
a36	ls.asm	/^ a36:	fa9775e3          	bgeu	a4,s1,9e0 <malloc+0x70>$/;"	l
a38	grind.asm	/^     a38:	9cc58593          	addi	a1,a1,-1588 # 1400 <malloc+0x1e6>$/;"	l
a38	sh.asm	/^     a38:	854a                	mv	a0,s2$/;"	l
a38	usertests.asm	/^     a38:	85ca                	mv	a1,s2$/;"	l
a3a	ls.asm	/^ a3a:	00093703          	ld	a4,0(s2)$/;"	l
a3a	sh.asm	/^     a3a:	70a2                	ld	ra,40(sp)$/;"	l
a3a	usertests.asm	/^     a3a:	854e                	mv	a0,s3$/;"	l
a3c	grind.asm	/^     a3c:	4509                	li	a0,2$/;"	l
a3c	sh.asm	/^     a3c:	7402                	ld	s0,32(sp)$/;"	l
a3c	usertests.asm	/^     a3c:	00005097          	auipc	ra,0x5$/;"	l
a3e	grind.asm	/^     a3e:	00000097          	auipc	ra,0x0$/;"	l
a3e	ls.asm	/^ a3e:	853e                	mv	a0,a5$/;"	l
a3e	sh.asm	/^     a3e:	64e2                	ld	s1,24(sp)$/;"	l
a4	bigfile.asm	/^  a4:	6cc080e7          	jalr	1740(ra) # 76c <printf>$/;"	l
a4	cat.asm	/^  a4:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a4	echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	grind.asm	/^      a4:	00001097          	auipc	ra,0x1$/;"	l
a4	ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	ls.asm	/^  a4:	01298533          	add	a0,s3,s2$/;"	l
a4	mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	sh.asm	/^      a4:	fb4080e7          	jalr	-76(ra) # 54 <panic>$/;"	l
a4	stressfs.asm	/^  a4:	2f8080e7          	jalr	760(ra) # 398 <write>$/;"	l
a4	usertests.asm	/^      a4:	84aa                	mv	s1,a0$/;"	l
a4	wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	zombie.asm	/^  a4:	87aa                	mv	a5,a0$/;"	l
a40	ls.asm	/^ a40:	fef719e3          	bne	a4,a5,a32 <malloc+0xc2>$/;"	l
a40	sh.asm	/^     a40:	6942                	ld	s2,16(sp)$/;"	l
a40	usertests.asm	/^     a40:	be4080e7          	jalr	-1052(ra) # 5620 <read>$/;"	l
a42	grind.asm	/^     a42:	6f6080e7          	jalr	1782(ra) # 1134 <fprintf>$/;"	l
a42	sh.asm	/^     a42:	6145                	addi	sp,sp,48$/;"	l
a44	ls.asm	/^ a44:	8552                	mv	a0,s4$/;"	l
a44	sh.asm	/^     a44:	8082                	ret$/;"	l
a44	usertests.asm	/^     a44:	c535                	beqz	a0,ab0 <writebig+0x108>$/;"	l
a46	grind.asm	/^     a46:	451d                	li	a0,7$/;"	l
a46	ls.asm	/^ a46:	00000097          	auipc	ra,0x0$/;"	l
a46	sh.asm	/^     a46:	00001597          	auipc	a1,0x1$/;"	l
a46	usertests.asm	/^     a46:	40000793          	li	a5,1024$/;"	l
a48	grind.asm	/^     a48:	00000097          	auipc	ra,0x0$/;"	l
a4a	ls.asm	/^ a4a:	b80080e7          	jalr	-1152(ra) # 5c6 <sbrk>$/;"	l
a4a	sh.asm	/^     a4a:	98258593          	addi	a1,a1,-1662 # 13c8 <malloc+0x1ce>$/;"	l
a4a	usertests.asm	/^     a4a:	0af51f63          	bne	a0,a5,b08 <writebig+0x160>$/;"	l
a4c	grind.asm	/^     a4c:	3a0080e7          	jalr	928(ra) # de8 <exit>$/;"	l
a4e	ls.asm	/^ a4e:	fd5518e3          	bne	a0,s5,a1e <malloc+0xae>$/;"	l
a4e	sh.asm	/^     a4e:	4509                	li	a0,2$/;"	l
a4e	usertests.asm	/^     a4e:	00092683          	lw	a3,0(s2)$/;"	l
a50	grind.asm	/^     a50:	7179                	addi	sp,sp,-48$/;"	l
a50	sh.asm	/^     a50:	00000097          	auipc	ra,0x0$/;"	l
a52	grind.asm	/^     a52:	f406                	sd	ra,40(sp)$/;"	l
a52	ls.asm	/^ a52:	4501                	li	a0,0$/;"	l
a52	usertests.asm	/^     a52:	0c969a63          	bne	a3,s1,b26 <writebig+0x17e>$/;"	l
a54	grind.asm	/^     a54:	f022                	sd	s0,32(sp)$/;"	l
a54	ls.asm	/^ a54:	bf45                	j	a04 <malloc+0x94>$/;"	l
a54	sh.asm	/^     a54:	6c4080e7          	jalr	1732(ra) # 1114 <fprintf>$/;"	l
a56	grind.asm	/^     a56:	ec26                	sd	s1,24(sp)$/;"	l
a56	usertests.asm	/^     a56:	2485                	addiw	s1,s1,1$/;"	l
a58	grind.asm	/^     a58:	e84a                	sd	s2,16(sp)$/;"	l
a58	sh.asm	/^     a58:	00001517          	auipc	a0,0x1$/;"	l
a58	usertests.asm	/^     a58:	bff1                	j	a34 <writebig+0x8c>$/;"	l
a5a	grind.asm	/^     a5a:	1800                	addi	s0,sp,48$/;"	l
a5a	usertests.asm	/^     a5a:	85d6                	mv	a1,s5$/;"	l
a5c	grind.asm	/^     a5c:	00001517          	auipc	a0,0x1$/;"	l
a5c	sh.asm	/^     a5c:	90050513          	addi	a0,a0,-1792 # 1358 <malloc+0x15e>$/;"	l
a5c	usertests.asm	/^     a5c:	00005517          	auipc	a0,0x5$/;"	l
a6	echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	init.asm	/^  a6:	302080e7          	jalr	770(ra) # 3a4 <open>$/;"	l
a6	kill.asm	/^  a6:	6422                	ld	s0,8(sp)$/;"	l
a6	ln.asm	/^  a6:	8082                	ret$/;"	l
a6	usertests.asm	/^      a6:	4581                	li	a1,0$/;"	l
a6	wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	zombie.asm	/^  a6:	1602                	slli	a2,a2,0x20$/;"	l
a60	grind.asm	/^     a60:	98450513          	addi	a0,a0,-1660 # 13e0 <malloc+0x1c6>$/;"	l
a60	sh.asm	/^     a60:	fffff097          	auipc	ra,0xfffff$/;"	l
a60	usertests.asm	/^     a60:	4dc50513          	addi	a0,a0,1244 # 5f38 <malloc+0x4fe>$/;"	l
a64	grind.asm	/^     a64:	00000097          	auipc	ra,0x0$/;"	l
a64	sh.asm	/^     a64:	5f4080e7          	jalr	1524(ra) # 54 <panic>$/;"	l
a64	usertests.asm	/^     a64:	00005097          	auipc	ra,0x5$/;"	l
a68	grind.asm	/^     a68:	3d4080e7          	jalr	980(ra) # e38 <unlink>$/;"	l
a68	sh.asm	/^     a68:	7139                	addi	sp,sp,-64$/;"	l
a68	usertests.asm	/^     a68:	f1e080e7          	jalr	-226(ra) # 5982 <printf>$/;"	l
a6a	sh.asm	/^     a6a:	fc06                	sd	ra,56(sp)$/;"	l
a6c	grind.asm	/^     a6c:	00001517          	auipc	a0,0x1$/;"	l
a6c	sh.asm	/^     a6c:	f822                	sd	s0,48(sp)$/;"	l
a6c	usertests.asm	/^     a6c:	4505                	li	a0,1$/;"	l
a6e	sh.asm	/^     a6e:	f426                	sd	s1,40(sp)$/;"	l
a6e	usertests.asm	/^     a6e:	00005097          	auipc	ra,0x5$/;"	l
a70	grind.asm	/^     a70:	92450513          	addi	a0,a0,-1756 # 1390 <malloc+0x176>$/;"	l
a70	sh.asm	/^     a70:	f04a                	sd	s2,32(sp)$/;"	l
a72	sh.asm	/^     a72:	ec4e                	sd	s3,24(sp)$/;"	l
a72	usertests.asm	/^     a72:	b9a080e7          	jalr	-1126(ra) # 5608 <exit>$/;"	l
a74	grind.asm	/^     a74:	00000097          	auipc	ra,0x0$/;"	l
a74	sh.asm	/^     a74:	e852                	sd	s4,16(sp)$/;"	l
a76	sh.asm	/^     a76:	e456                	sd	s5,8(sp)$/;"	l
a76	usertests.asm	/^     a76:	8626                	mv	a2,s1$/;"	l
a78	grind.asm	/^     a78:	3c4080e7          	jalr	964(ra) # e38 <unlink>$/;"	l
a78	sh.asm	/^     a78:	0080                	addi	s0,sp,64$/;"	l
a78	usertests.asm	/^     a78:	85d6                	mv	a1,s5$/;"	l
a7a	sh.asm	/^     a7a:	00001497          	auipc	s1,0x1$/;"	l
a7a	usertests.asm	/^     a7a:	00005517          	auipc	a0,0x5$/;"	l
a7c	grind.asm	/^     a7c:	00000097          	auipc	ra,0x0$/;"	l
a7e	sh.asm	/^     a7e:	95e48493          	addi	s1,s1,-1698 # 13d8 <malloc+0x1de>$/;"	l
a7e	usertests.asm	/^     a7e:	4de50513          	addi	a0,a0,1246 # 5f58 <malloc+0x51e>$/;"	l
a8	bigfile.asm	/^  a8:	67c1                	lui	a5,0x10$/;"	l
a8	cat.asm	/^  a8:	02099793          	slli	a5,s3,0x20$/;"	l
a8	grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	grind.asm	/^      a8:	dac080e7          	jalr	-596(ra) # e50 <mkdir>$/;"	l
a8	kill.asm	/^  a8:	0141                	addi	sp,sp,16$/;"	l
a8	ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	ls.asm	/^  a8:	00000097          	auipc	ra,0x0$/;"	l
a8	mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	sh.asm	/^      a8:	7179                	addi	sp,sp,-48$/;"	l
a8	stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	usertests.asm	/^      a8:	00006517          	auipc	a0,0x6$/;"	l
a8	wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a8	zombie.asm	/^  a8:	9201                	srli	a2,a2,0x20$/;"	l
a80	grind.asm	/^     a80:	364080e7          	jalr	868(ra) # de0 <fork>$/;"	l
a82	sh.asm	/^     a82:	4589                	li	a1,2$/;"	l
a82	usertests.asm	/^     a82:	00005097          	auipc	ra,0x5$/;"	l
a84	grind.asm	/^     a84:	00054e63          	bltz	a0,aa0 <iter+0x50>$/;"	l
a84	sh.asm	/^     a84:	8526                	mv	a0,s1$/;"	l
a86	sh.asm	/^     a86:	00000097          	auipc	ra,0x0$/;"	l
a86	usertests.asm	/^     a86:	f00080e7          	jalr	-256(ra) # 5982 <printf>$/;"	l
a88	grind.asm	/^     a88:	84aa                	mv	s1,a0$/;"	l
a8a	grind.asm	/^     a8a:	e905                	bnez	a0,aba <iter+0x6a>$/;"	l
a8a	sh.asm	/^     a8a:	382080e7          	jalr	898(ra) # e08 <open>$/;"	l
a8a	usertests.asm	/^     a8a:	4505                	li	a0,1$/;"	l
a8c	grind.asm	/^     a8c:	47fd                	li	a5,31$/;"	l
a8c	usertests.asm	/^     a8c:	00005097          	auipc	ra,0x5$/;"	l
a8e	grind.asm	/^     a8e:	00001717          	auipc	a4,0x1$/;"	l
a8e	sh.asm	/^     a8e:	00054963          	bltz	a0,aa0 <main+0x38>$/;"	l
a90	usertests.asm	/^     a90:	b7c080e7          	jalr	-1156(ra) # 5608 <exit>$/;"	l
a92	grind.asm	/^     a92:	c2f73523          	sd	a5,-982(a4) # 16b8 <rand_next>$/;"	l
a92	sh.asm	/^     a92:	4789                	li	a5,2$/;"	l
a94	sh.asm	/^     a94:	fea7d7e3          	bge	a5,a0,a82 <main+0x1a>$/;"	l
a94	usertests.asm	/^     a94:	85d6                	mv	a1,s5$/;"	l
a96	grind.asm	/^     a96:	4501                	li	a0,0$/;"	l
a96	usertests.asm	/^     a96:	00005517          	auipc	a0,0x5$/;"	l
a98	grind.asm	/^     a98:	fffff097          	auipc	ra,0xfffff$/;"	l
a98	sh.asm	/^     a98:	00000097          	auipc	ra,0x0$/;"	l
a9a	usertests.asm	/^     a9a:	4ea50513          	addi	a0,a0,1258 # 5f80 <malloc+0x546>$/;"	l
a9c	grind.asm	/^     a9c:	5e0080e7          	jalr	1504(ra) # 78 <go>$/;"	l
a9c	sh.asm	/^     a9c:	358080e7          	jalr	856(ra) # df0 <close>$/;"	l
a9e	usertests.asm	/^     a9e:	00005097          	auipc	ra,0x5$/;"	l
aa	bigfile.asm	/^  aa:	10b78793          	addi	a5,a5,267 # 1010b <__global_pointer$+0xee6a>$/;"	l
aa	echo.asm	/^  aa:	cb91                	beqz	a5,be <strcmp+0x1e>$/;"	l
aa	forktest.asm	/^  aa:	2ec080e7          	jalr	748(ra) # 392 <wait>$/;"	l
aa	grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	init.asm	/^  aa:	bfa5                	j	22 <main+0x22>$/;"	l
aa	kill.asm	/^  aa:	8082                	ret$/;"	l
aa	ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	sh.asm	/^      aa:	f406                	sd	ra,40(sp)$/;"	l
aa	stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	zombie.asm	/^  aa:	00a60733          	add	a4,a2,a0$/;"	l
aa0	grind.asm	/^     aa0:	00001517          	auipc	a0,0x1$/;"	l
aa0	sh.asm	/^     aa0:	00001497          	auipc	s1,0x1$/;"	l
aa2	usertests.asm	/^     aa2:	ee4080e7          	jalr	-284(ra) # 5982 <printf>$/;"	l
aa4	grind.asm	/^     aa4:	96050513          	addi	a0,a0,-1696 # 1400 <malloc+0x1e6>$/;"	l
aa4	sh.asm	/^     aa4:	a1048493          	addi	s1,s1,-1520 # 14b0 <buf.0>$/;"	l
aa6	usertests.asm	/^     aa6:	4505                	li	a0,1$/;"	l
aa8	grind.asm	/^     aa8:	00000097          	auipc	ra,0x0$/;"	l
aa8	sh.asm	/^     aa8:	06300913          	li	s2,99$/;"	l
aa8	usertests.asm	/^     aa8:	00005097          	auipc	ra,0x5$/;"	l
aac	grind.asm	/^     aac:	6ba080e7          	jalr	1722(ra) # 1162 <printf>$/;"	l
aac	sh.asm	/^     aac:	02000993          	li	s3,32$/;"	l
aac	usertests.asm	/^     aac:	b60080e7          	jalr	-1184(ra) # 5608 <exit>$/;"	l
ab0	grind.asm	/^     ab0:	4505                	li	a0,1$/;"	l
ab0	sh.asm	/^     ab0:	00001a17          	auipc	s4,0x1$/;"	l
ab0	usertests.asm	/^     ab0:	67c1                	lui	a5,0x10$/;"	l
ab2	grind.asm	/^     ab2:	00000097          	auipc	ra,0x0$/;"	l
ab2	usertests.asm	/^     ab2:	10a78793          	addi	a5,a5,266 # 1010a <__BSS_END__+0x1612>$/;"	l
ab4	sh.asm	/^     ab4:	a03a0a13          	addi	s4,s4,-1533 # 14b3 <buf.0+0x3>$/;"	l
ab6	grind.asm	/^     ab6:	336080e7          	jalr	822(ra) # de8 <exit>$/;"	l
ab6	usertests.asm	/^     ab6:	02f48a63          	beq	s1,a5,aea <writebig+0x142>$/;"	l
ab8	sh.asm	/^     ab8:	00001a97          	auipc	s5,0x1$/;"	l
aba	grind.asm	/^     aba:	00000097          	auipc	ra,0x0$/;"	l
aba	usertests.asm	/^     aba:	854e                	mv	a0,s3$/;"	l
abc	sh.asm	/^     abc:	928a8a93          	addi	s5,s5,-1752 # 13e0 <malloc+0x1e6>$/;"	l
abc	usertests.asm	/^     abc:	00005097          	auipc	ra,0x5$/;"	l
abe	grind.asm	/^     abe:	326080e7          	jalr	806(ra) # de0 <fork>$/;"	l
ac	cat.asm	/^  ac:	01d7d993          	srli	s3,a5,0x1d$/;"	l
ac	echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	grind.asm	/^      ac:	00001517          	auipc	a0,0x1$/;"	l
ac	init.asm	/^  ac:	00000517          	auipc	a0,0x0$/;"	l
ac	kill.asm	/^  ac:	1141                	addi	sp,sp,-16$/;"	l
ac	ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	ls.asm	/^  ac:	29c080e7          	jalr	668(ra) # 344 <memset>$/;"	l
ac	mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	sh.asm	/^      ac:	f022                	sd	s0,32(sp)$/;"	l
ac	stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	usertests.asm	/^      ac:	ab050513          	addi	a0,a0,-1360 # 5b58 <malloc+0x11e>$/;"	l
ac	wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac0	sh.asm	/^     ac0:	a819                	j	ad6 <main+0x6e>$/;"	l
ac0	usertests.asm	/^     ac0:	b74080e7          	jalr	-1164(ra) # 5630 <close>$/;"	l
ac2	grind.asm	/^     ac2:	892a                	mv	s2,a0$/;"	l
ac2	sh.asm	/^     ac2:	fffff097          	auipc	ra,0xfffff$/;"	l
ac4	grind.asm	/^     ac4:	00054f63          	bltz	a0,ae2 <iter+0x92>$/;"	l
ac4	usertests.asm	/^     ac4:	00005517          	auipc	a0,0x5$/;"	l
ac6	sh.asm	/^     ac6:	5b8080e7          	jalr	1464(ra) # 7a <fork1>$/;"	l
ac8	grind.asm	/^     ac8:	e915                	bnez	a0,afc <iter+0xac>$/;"	l
ac8	usertests.asm	/^     ac8:	46c50513          	addi	a0,a0,1132 # 5f30 <malloc+0x4f6>$/;"	l
aca	grind.asm	/^     aca:	6789                	lui	a5,0x2$/;"	l
aca	sh.asm	/^     aca:	c925                	beqz	a0,b3a <main+0xd2>$/;"	l
acc	grind.asm	/^     acc:	c0978793          	addi	a5,a5,-1015 # 1c09 <__BSS_END__+0x149>$/;"	l
acc	sh.asm	/^     acc:	4501                	li	a0,0$/;"	l
acc	usertests.asm	/^     acc:	00005097          	auipc	ra,0x5$/;"	l
ace	sh.asm	/^     ace:	00000097          	auipc	ra,0x0$/;"	l
ad0	grind.asm	/^     ad0:	00001717          	auipc	a4,0x1$/;"	l
ad0	usertests.asm	/^     ad0:	b8c080e7          	jalr	-1140(ra) # 5658 <unlink>$/;"	l
ad2	sh.asm	/^     ad2:	302080e7          	jalr	770(ra) # dd0 <wait>$/;"	l
ad4	grind.asm	/^     ad4:	bef73423          	sd	a5,-1048(a4) # 16b8 <rand_next>$/;"	l
ad4	usertests.asm	/^     ad4:	06054863          	bltz	a0,b44 <writebig+0x19c>$/;"	l
ad6	sh.asm	/^     ad6:	06400593          	li	a1,100$/;"	l
ad8	grind.asm	/^     ad8:	4505                	li	a0,1$/;"	l
ad8	usertests.asm	/^     ad8:	70e2                	ld	ra,56(sp)$/;"	l
ada	grind.asm	/^     ada:	fffff097          	auipc	ra,0xfffff$/;"	l
ada	sh.asm	/^     ada:	8526                	mv	a0,s1$/;"	l
ada	usertests.asm	/^     ada:	7442                	ld	s0,48(sp)$/;"	l
adc	sh.asm	/^     adc:	fffff097          	auipc	ra,0xfffff$/;"	l
adc	usertests.asm	/^     adc:	74a2                	ld	s1,40(sp)$/;"	l
ade	grind.asm	/^     ade:	59e080e7          	jalr	1438(ra) # 78 <go>$/;"	l
ade	usertests.asm	/^     ade:	7902                	ld	s2,32(sp)$/;"	l
ae	bigfile.asm	/^  ae:	00f48f63          	beq	s1,a5,cc <main+0xcc>$/;"	l
ae	forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	kill.asm	/^  ae:	e422                	sd	s0,8(sp)$/;"	l
ae	ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	sh.asm	/^      ae:	ec26                	sd	s1,24(sp)$/;"	l
ae	stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	zombie.asm	/^  ae:	00b78023          	sb	a1,0(a5)$/;"	l
ae0	sh.asm	/^     ae0:	524080e7          	jalr	1316(ra) # 0 <getcmd>$/;"	l
ae0	usertests.asm	/^     ae0:	69e2                	ld	s3,24(sp)$/;"	l
ae2	grind.asm	/^     ae2:	00001517          	auipc	a0,0x1$/;"	l
ae2	usertests.asm	/^     ae2:	6a42                	ld	s4,16(sp)$/;"	l
ae4	sh.asm	/^     ae4:	06054763          	bltz	a0,b52 <main+0xea>$/;"	l
ae4	usertests.asm	/^     ae4:	6aa2                	ld	s5,8(sp)$/;"	l
ae6	grind.asm	/^     ae6:	91e50513          	addi	a0,a0,-1762 # 1400 <malloc+0x1e6>$/;"	l
ae6	usertests.asm	/^     ae6:	6121                	addi	sp,sp,64$/;"	l
ae8	sh.asm	/^     ae8:	0004c783          	lbu	a5,0(s1)$/;"	l
ae8	usertests.asm	/^     ae8:	8082                	ret$/;"	l
aea	grind.asm	/^     aea:	00000097          	auipc	ra,0x0$/;"	l
aea	usertests.asm	/^     aea:	863e                	mv	a2,a5$/;"	l
aec	sh.asm	/^     aec:	fd279be3          	bne	a5,s2,ac2 <main+0x5a>$/;"	l
aec	usertests.asm	/^     aec:	85d6                	mv	a1,s5$/;"	l
aee	grind.asm	/^     aee:	678080e7          	jalr	1656(ra) # 1162 <printf>$/;"	l
aee	usertests.asm	/^     aee:	00005517          	auipc	a0,0x5$/;"	l
af0	sh.asm	/^     af0:	0014c703          	lbu	a4,1(s1)$/;"	l
af2	grind.asm	/^     af2:	4505                	li	a0,1$/;"	l
af2	usertests.asm	/^     af2:	4b250513          	addi	a0,a0,1202 # 5fa0 <malloc+0x566>$/;"	l
af4	grind.asm	/^     af4:	00000097          	auipc	ra,0x0$/;"	l
af4	sh.asm	/^     af4:	06400793          	li	a5,100$/;"	l
af6	usertests.asm	/^     af6:	00005097          	auipc	ra,0x5$/;"	l
af8	grind.asm	/^     af8:	2f4080e7          	jalr	756(ra) # de8 <exit>$/;"	l
af8	sh.asm	/^     af8:	fcf715e3          	bne	a4,a5,ac2 <main+0x5a>$/;"	l
afa	usertests.asm	/^     afa:	e8c080e7          	jalr	-372(ra) # 5982 <printf>$/;"	l
afc	grind.asm	/^     afc:	57fd                	li	a5,-1$/;"	l
afc	sh.asm	/^     afc:	0024c783          	lbu	a5,2(s1)$/;"	l
afe	grind.asm	/^     afe:	fcf42e23          	sw	a5,-36(s0)$/;"	l
afe	usertests.asm	/^     afe:	4505                	li	a0,1$/;"	l
argc	sh.asm	/^  argc = 0;$/;"	d
argptest	usertests.c	/^void argptest(char *s)$/;"	f
argv	init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	initcode.S	/^argv:$/;"	l
argv	sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	ulib.c	/^atoi(const char *s)$/;"	f
b	usertests.asm	/^    b = sbrk(1);$/;"	d
b0	cat.asm	/^  b0:	05c1                	addi	a1,a1,16$/;"	l
b0	echo.asm	/^  b0:	00f71763          	bne	a4,a5,be <strcmp+0x1e>$/;"	l
b0	forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	grind.asm	/^      b0:	25450513          	addi	a0,a0,596 # 1300 <malloc+0xe6>$/;"	l
b0	init.asm	/^  b0:	7f450513          	addi	a0,a0,2036 # 8a0 <malloc+0x10a>$/;"	l
b0	kill.asm	/^  b0:	0800                	addi	s0,sp,16$/;"	l
b0	ls.asm	/^  b0:	84ce                	mv	s1,s3$/;"	l
b0	mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	sh.asm	/^      b0:	1800                	addi	s0,sp,48$/;"	l
b0	usertests.asm	/^      b0:	00005097          	auipc	ra,0x5$/;"	l
b0	wc.asm	/^  b0:	86e6                	mv	a3,s9$/;"	l
b00	sh.asm	/^     b00:	fd3791e3          	bne	a5,s3,ac2 <main+0x5a>$/;"	l
b00	usertests.asm	/^     b00:	00005097          	auipc	ra,0x5$/;"	l
b02	grind.asm	/^     b02:	fdc40513          	addi	a0,s0,-36$/;"	l
b04	sh.asm	/^     b04:	8526                	mv	a0,s1$/;"	l
b04	usertests.asm	/^     b04:	b08080e7          	jalr	-1272(ra) # 5608 <exit>$/;"	l
b06	grind.asm	/^     b06:	00000097          	auipc	ra,0x0$/;"	l
b06	sh.asm	/^     b06:	00000097          	auipc	ra,0x0$/;"	l
b08	usertests.asm	/^     b08:	862a                	mv	a2,a0$/;"	l
b0a	grind.asm	/^     b0a:	2ea080e7          	jalr	746(ra) # df0 <wait>$/;"	l
b0a	sh.asm	/^     b0a:	09e080e7          	jalr	158(ra) # ba4 <strlen>$/;"	l
b0a	usertests.asm	/^     b0a:	85d6                	mv	a1,s5$/;"	l
b0c	usertests.asm	/^     b0c:	00005517          	auipc	a0,0x5$/;"	l
b0e	grind.asm	/^     b0e:	fdc42783          	lw	a5,-36(s0)$/;"	l
b0e	sh.asm	/^     b0e:	fff5079b          	addiw	a5,a0,-1$/;"	l
b10	usertests.asm	/^     b10:	4bc50513          	addi	a0,a0,1212 # 5fc8 <malloc+0x58e>$/;"	l
b12	grind.asm	/^     b12:	ef99                	bnez	a5,b30 <iter+0xe0>$/;"	l
b12	sh.asm	/^     b12:	1782                	slli	a5,a5,0x20$/;"	l
b14	grind.asm	/^     b14:	57fd                	li	a5,-1$/;"	l
b14	sh.asm	/^     b14:	9381                	srli	a5,a5,0x20$/;"	l
b14	usertests.asm	/^     b14:	00005097          	auipc	ra,0x5$/;"	l
b16	grind.asm	/^     b16:	fcf42c23          	sw	a5,-40(s0)$/;"	l
b16	sh.asm	/^     b16:	97a6                	add	a5,a5,s1$/;"	l
b18	sh.asm	/^     b18:	00078023          	sb	zero,0(a5)$/;"	l
b18	usertests.asm	/^     b18:	e6e080e7          	jalr	-402(ra) # 5982 <printf>$/;"	l
b1a	grind.asm	/^     b1a:	fd840513          	addi	a0,s0,-40$/;"	l
b1c	sh.asm	/^     b1c:	8552                	mv	a0,s4$/;"	l
b1c	usertests.asm	/^     b1c:	4505                	li	a0,1$/;"	l
b1e	grind.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	sh.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	usertests.asm	/^     b1e:	00005097          	auipc	ra,0x5$/;"	l
b2	bigfile.asm	/^  b2:	00001517          	auipc	a0,0x1$/;"	l
b2	cat.asm	/^  b2:	99ae                	add	s3,s3,a1$/;"	l
b2	grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	kill.asm	/^  b2:	00054783          	lbu	a5,0(a0)$/;"	l
b2	ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	ls.asm	/^  b2:	bf69                	j	4c <fmtname+0x4c>$/;"	l
b2	mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	sh.asm	/^      b2:	c10d                	beqz	a0,d4 <runcmd+0x2c>$/;"	l
b2	stressfs.asm	/^  b2:	2f2080e7          	jalr	754(ra) # 3a0 <close>$/;"	l
b2	wc.asm	/^  b2:	8662                	mv	a2,s8$/;"	l
b2	zombie.asm	/^  b2:	0785                	addi	a5,a5,1$/;"	l
b22	grind.asm	/^     b22:	2d2080e7          	jalr	722(ra) # df0 <wait>$/;"	l
b22	sh.asm	/^     b22:	31a080e7          	jalr	794(ra) # e38 <chdir>$/;"	l
b22	usertests.asm	/^     b22:	aea080e7          	jalr	-1302(ra) # 5608 <exit>$/;"	l
b26	grind.asm	/^     b26:	4501                	li	a0,0$/;"	l
b26	sh.asm	/^     b26:	fa0558e3          	bgez	a0,ad6 <main+0x6e>$/;"	l
b26	usertests.asm	/^     b26:	8626                	mv	a2,s1$/;"	l
b28	grind.asm	/^     b28:	00000097          	auipc	ra,0x0$/;"	l
b28	usertests.asm	/^     b28:	85d6                	mv	a1,s5$/;"	l
b2a	sh.asm	/^     b2a:	8652                	mv	a2,s4$/;"	l
b2a	usertests.asm	/^     b2a:	00005517          	auipc	a0,0x5$/;"	l
b2c	grind.asm	/^     b2c:	2c0080e7          	jalr	704(ra) # de8 <exit>$/;"	l
b2c	sh.asm	/^     b2c:	85d6                	mv	a1,s5$/;"	l
b2e	sh.asm	/^     b2e:	4509                	li	a0,2$/;"	l
b2e	usertests.asm	/^     b2e:	4b650513          	addi	a0,a0,1206 # 5fe0 <malloc+0x5a6>$/;"	l
b30	grind.asm	/^     b30:	8526                	mv	a0,s1$/;"	l
b30	sh.asm	/^     b30:	00000097          	auipc	ra,0x0$/;"	l
b32	grind.asm	/^     b32:	00000097          	auipc	ra,0x0$/;"	l
b32	usertests.asm	/^     b32:	00005097          	auipc	ra,0x5$/;"	l
b34	sh.asm	/^     b34:	5e4080e7          	jalr	1508(ra) # 1114 <fprintf>$/;"	l
b36	grind.asm	/^     b36:	2e6080e7          	jalr	742(ra) # e18 <kill>$/;"	l
b36	usertests.asm	/^     b36:	e50080e7          	jalr	-432(ra) # 5982 <printf>$/;"	l
b38	sh.asm	/^     b38:	bf79                	j	ad6 <main+0x6e>$/;"	l
b3a	grind.asm	/^     b3a:	854a                	mv	a0,s2$/;"	l
b3a	sh.asm	/^     b3a:	00001517          	auipc	a0,0x1$/;"	l
b3a	usertests.asm	/^     b3a:	4505                	li	a0,1$/;"	l
b3c	grind.asm	/^     b3c:	00000097          	auipc	ra,0x0$/;"	l
b3c	usertests.asm	/^     b3c:	00005097          	auipc	ra,0x5$/;"	l
b3e	sh.asm	/^     b3e:	97650513          	addi	a0,a0,-1674 # 14b0 <buf.0>$/;"	l
b4	cat.asm	/^  b4:	4581                	li	a1,0$/;"	l
b4	echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	grind.asm	/^      b4:	00001097          	auipc	ra,0x1$/;"	l
b4	init.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	ls.asm	/^  b4:	d9010113          	addi	sp,sp,-624$/;"	l
b4	sh.asm	/^      b4:	84aa                	mv	s1,a0$/;"	l
b4	usertests.asm	/^      b4:	598080e7          	jalr	1432(ra) # 5648 <open>$/;"	l
b4	wc.asm	/^  b4:	85de                	mv	a1,s7$/;"	l
b4	zombie.asm	/^  b4:	fee79de3          	bne	a5,a4,ae <memset+0x12>$/;"	l
b40	grind.asm	/^     b40:	2dc080e7          	jalr	732(ra) # e18 <kill>$/;"	l
b40	usertests.asm	/^     b40:	acc080e7          	jalr	-1332(ra) # 5608 <exit>$/;"	l
b42	sh.asm	/^     b42:	00000097          	auipc	ra,0x0$/;"	l
b44	grind.asm	/^     b44:	bfc1                	j	b14 <iter+0xc4>$/;"	l
b44	usertests.asm	/^     b44:	85d6                	mv	a1,s5$/;"	l
b46	grind.asm	/^     b46:	1141                	addi	sp,sp,-16$/;"	l
b46	sh.asm	/^     b46:	e9e080e7          	jalr	-354(ra) # 9e0 <parsecmd>$/;"	l
b46	usertests.asm	/^     b46:	00005517          	auipc	a0,0x5$/;"	l
b48	grind.asm	/^     b48:	e406                	sd	ra,8(sp)$/;"	l
b4a	grind.asm	/^     b4a:	e022                	sd	s0,0(sp)$/;"	l
b4a	sh.asm	/^     b4a:	fffff097          	auipc	ra,0xfffff$/;"	l
b4a	usertests.asm	/^     b4a:	4c250513          	addi	a0,a0,1218 # 6008 <malloc+0x5ce>$/;"	l
b4c	grind.asm	/^     b4c:	0800                	addi	s0,sp,16$/;"	l
b4e	grind.asm	/^     b4e:	a811                	j	b62 <main+0x1c>$/;"	l
b4e	sh.asm	/^     b4e:	55e080e7          	jalr	1374(ra) # a8 <runcmd>$/;"	l
b4e	usertests.asm	/^     b4e:	00005097          	auipc	ra,0x5$/;"	l
b50	grind.asm	/^     b50:	00000097          	auipc	ra,0x0$/;"	l
b52	sh.asm	/^     b52:	4501                	li	a0,0$/;"	l
b52	usertests.asm	/^     b52:	e34080e7          	jalr	-460(ra) # 5982 <printf>$/;"	l
b54	grind.asm	/^     b54:	f00080e7          	jalr	-256(ra) # a50 <iter>$/;"	l
b54	sh.asm	/^     b54:	00000097          	auipc	ra,0x0$/;"	l
b56	usertests.asm	/^     b56:	4505                	li	a0,1$/;"	l
b58	grind.asm	/^     b58:	4551                	li	a0,20$/;"	l
b58	sh.asm	/^     b58:	274080e7          	jalr	628(ra) # dc8 <exit>$/;"	l
b58	usertests.asm	/^     b58:	00005097          	auipc	ra,0x5$/;"	l
b5a	grind.asm	/^     b5a:	00000097          	auipc	ra,0x0$/;"	l
b5c	sh.asm	/^     b5c:	1141                	addi	sp,sp,-16$/;"	l
b5c	usertests.asm	/^     b5c:	ab0080e7          	jalr	-1360(ra) # 5608 <exit>$/;"	l
b5e	grind.asm	/^     b5e:	31e080e7          	jalr	798(ra) # e78 <sleep>$/;"	l
b5e	sh.asm	/^     b5e:	e422                	sd	s0,8(sp)$/;"	l
b6	bigfile.asm	/^  b6:	8be50513          	addi	a0,a0,-1858 # 970 <malloc+0x14c>$/;"	l
b6	cat.asm	/^  b6:	00093503          	ld	a0,0(s2)$/;"	l
b6	echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	kill.asm	/^  b6:	cf91                	beqz	a5,d2 <strlen+0x26>$/;"	l
b6	ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	sh.asm	/^      b6:	4118                	lw	a4,0(a0)$/;"	l
b6	stressfs.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b60	sh.asm	/^     b60:	0800                	addi	s0,sp,16$/;"	l
b60	usertests.asm	/^     b60:	7179                	addi	sp,sp,-48$/;"	l
b62	grind.asm	/^     b62:	00000097          	auipc	ra,0x0$/;"	l
b62	sh.asm	/^     b62:	87aa                	mv	a5,a0$/;"	l
b62	usertests.asm	/^     b62:	f406                	sd	ra,40(sp)$/;"	l
b64	sh.asm	/^     b64:	0585                	addi	a1,a1,1$/;"	l
b64	usertests.asm	/^     b64:	f022                	sd	s0,32(sp)$/;"	l
b66	grind.asm	/^     b66:	27e080e7          	jalr	638(ra) # de0 <fork>$/;"	l
b66	sh.asm	/^     b66:	0785                	addi	a5,a5,1$/;"	l
b66	usertests.asm	/^     b66:	ec26                	sd	s1,24(sp)$/;"	l
b68	sh.asm	/^     b68:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b68	usertests.asm	/^     b68:	e84a                	sd	s2,16(sp)$/;"	l
b6a	grind.asm	/^     b6a:	d17d                	beqz	a0,b50 <main+0xa>$/;"	l
b6a	usertests.asm	/^     b6a:	e44e                	sd	s3,8(sp)$/;"	l
b6c	grind.asm	/^     b6c:	fea056e3          	blez	a0,b58 <main+0x12>$/;"	l
b6c	sh.asm	/^     b6c:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b6c	usertests.asm	/^     b6c:	1800                	addi	s0,sp,48$/;"	l
b6e	usertests.asm	/^     b6e:	89aa                	mv	s3,a0$/;"	l
b70	grind.asm	/^     b70:	4501                	li	a0,0$/;"	l
b70	sh.asm	/^     b70:	fb75                	bnez	a4,b64 <strcpy+0x8>$/;"	l
b70	usertests.asm	/^     b70:	20200593          	li	a1,514$/;"	l
b72	grind.asm	/^     b72:	00000097          	auipc	ra,0x0$/;"	l
b72	sh.asm	/^     b72:	6422                	ld	s0,8(sp)$/;"	l
b74	sh.asm	/^     b74:	0141                	addi	sp,sp,16$/;"	l
b74	usertests.asm	/^     b74:	00005517          	auipc	a0,0x5$/;"	l
b76	grind.asm	/^     b76:	27e080e7          	jalr	638(ra) # df0 <wait>$/;"	l
b76	sh.asm	/^     b76:	8082                	ret$/;"	l
b78	sh.asm	/^     b78:	1141                	addi	sp,sp,-16$/;"	l
b78	usertests.asm	/^     b78:	4ac50513          	addi	a0,a0,1196 # 6020 <malloc+0x5e6>$/;"	l
b7a	grind.asm	/^     b7a:	bff9                	j	b58 <main+0x12>$/;"	l
b7a	sh.asm	/^     b7a:	e422                	sd	s0,8(sp)$/;"	l
b7c	grind.asm	/^     b7c:	1141                	addi	sp,sp,-16$/;"	l
b7c	sh.asm	/^     b7c:	0800                	addi	s0,sp,16$/;"	l
b7c	usertests.asm	/^     b7c:	00005097          	auipc	ra,0x5$/;"	l
b7e	grind.asm	/^     b7e:	e422                	sd	s0,8(sp)$/;"	l
b7e	sh.asm	/^     b7e:	00054783          	lbu	a5,0(a0)$/;"	l
b8	echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	forktest.asm	/^  b8:	3dc50513          	addi	a0,a0,988 # 490 <uptime+0x6e>$/;"	l
b8	grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	grind.asm	/^      b8:	da4080e7          	jalr	-604(ra) # e58 <chdir>$/;"	l
b8	init.asm	/^  b8:	62a080e7          	jalr	1578(ra) # 6de <printf>$/;"	l
b8	kill.asm	/^  b8:	0505                	addi	a0,a0,1$/;"	l
b8	ln.asm	/^  b8:	4685                	li	a3,1$/;"	l
b8	ls.asm	/^  b8:	26113423          	sd	ra,616(sp)$/;"	l
b8	sh.asm	/^      b8:	4795                	li	a5,5$/;"	l
b8	usertests.asm	/^      b8:	02054663          	bltz	a0,e4 <opentest+0x4a>$/;"	l
b8	zombie.asm	/^  b8:	6422                	ld	s0,8(sp)$/;"	l
b80	grind.asm	/^     b80:	0800                	addi	s0,sp,16$/;"	l
b80	usertests.asm	/^     b80:	acc080e7          	jalr	-1332(ra) # 5648 <open>$/;"	l
b82	grind.asm	/^     b82:	87aa                	mv	a5,a0$/;"	l
b82	sh.asm	/^     b82:	cb91                	beqz	a5,b96 <strcmp+0x1e>$/;"	l
b84	grind.asm	/^     b84:	0585                	addi	a1,a1,1$/;"	l
b84	sh.asm	/^     b84:	0005c703          	lbu	a4,0(a1)$/;"	l
b84	usertests.asm	/^     b84:	0e054563          	bltz	a0,c6e <unlinkread+0x10e>$/;"	l
b86	grind.asm	/^     b86:	0785                	addi	a5,a5,1$/;"	l
b88	grind.asm	/^     b88:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b88	sh.asm	/^     b88:	00f71763          	bne	a4,a5,b96 <strcmp+0x1e>$/;"	l
b88	usertests.asm	/^     b88:	84aa                	mv	s1,a0$/;"	l
b8a	usertests.asm	/^     b8a:	4615                	li	a2,5$/;"	l
b8c	grind.asm	/^     b8c:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b8c	sh.asm	/^     b8c:	0505                	addi	a0,a0,1$/;"	l
b8c	usertests.asm	/^     b8c:	00005597          	auipc	a1,0x5$/;"	l
b8e	sh.asm	/^     b8e:	0585                	addi	a1,a1,1$/;"	l
b90	grind.asm	/^     b90:	fb75                	bnez	a4,b84 <strcpy+0x8>$/;"	l
b90	sh.asm	/^     b90:	00054783          	lbu	a5,0(a0)$/;"	l
b90	usertests.asm	/^     b90:	4c458593          	addi	a1,a1,1220 # 6050 <malloc+0x616>$/;"	l
b92	grind.asm	/^     b92:	6422                	ld	s0,8(sp)$/;"	l
b94	grind.asm	/^     b94:	0141                	addi	sp,sp,16$/;"	l
b94	sh.asm	/^     b94:	fbe5                	bnez	a5,b84 <strcmp+0xc>$/;"	l
b94	usertests.asm	/^     b94:	00005097          	auipc	ra,0x5$/;"	l
b96	grind.asm	/^     b96:	8082                	ret$/;"	l
b96	sh.asm	/^     b96:	0005c503          	lbu	a0,0(a1)$/;"	l
b98	grind.asm	/^     b98:	1141                	addi	sp,sp,-16$/;"	l
b98	usertests.asm	/^     b98:	a94080e7          	jalr	-1388(ra) # 5628 <write>$/;"	l
b9a	grind.asm	/^     b9a:	e422                	sd	s0,8(sp)$/;"	l
b9a	sh.asm	/^     b9a:	40a7853b          	subw	a0,a5,a0$/;"	l
b9c	grind.asm	/^     b9c:	0800                	addi	s0,sp,16$/;"	l
b9c	usertests.asm	/^     b9c:	8526                	mv	a0,s1$/;"	l
b9e	grind.asm	/^     b9e:	00054783          	lbu	a5,0(a0)$/;"	l
b9e	sh.asm	/^     b9e:	6422                	ld	s0,8(sp)$/;"	l
b9e	usertests.asm	/^     b9e:	00005097          	auipc	ra,0x5$/;"	l
ba	bigfile.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	cat.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	kill.asm	/^  ba:	87aa                	mv	a5,a0$/;"	l
ba	ln.asm	/^  ba:	9e89                	subw	a3,a3,a0$/;"	l
ba	mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	sh.asm	/^      ba:	02e7e263          	bltu	a5,a4,de <runcmd+0x36>$/;"	l
ba	stressfs.asm	/^  ba:	80250513          	addi	a0,a0,-2046 # 8b8 <malloc+0x10e>$/;"	l
ba	wc.asm	/^  ba:	88250513          	addi	a0,a0,-1918 # 938 <malloc+0x104>$/;"	l
ba	zombie.asm	/^  ba:	0141                	addi	sp,sp,16$/;"	l
ba0	sh.asm	/^     ba0:	0141                	addi	sp,sp,16$/;"	l
ba2	grind.asm	/^     ba2:	cb91                	beqz	a5,bb6 <strcmp+0x1e>$/;"	l
ba2	sh.asm	/^     ba2:	8082                	ret$/;"	l
ba2	usertests.asm	/^     ba2:	a92080e7          	jalr	-1390(ra) # 5630 <close>$/;"	l
ba4	grind.asm	/^     ba4:	0005c703          	lbu	a4,0(a1)$/;"	l
ba4	sh.asm	/^     ba4:	1141                	addi	sp,sp,-16$/;"	l
ba6	sh.asm	/^     ba6:	e422                	sd	s0,8(sp)$/;"	l
ba6	usertests.asm	/^     ba6:	4589                	li	a1,2$/;"	l
ba8	grind.asm	/^     ba8:	00f71763          	bne	a4,a5,bb6 <strcmp+0x1e>$/;"	l
ba8	sh.asm	/^     ba8:	0800                	addi	s0,sp,16$/;"	l
ba8	usertests.asm	/^     ba8:	00005517          	auipc	a0,0x5$/;"	l
baa	sh.asm	/^     baa:	00054783          	lbu	a5,0(a0)$/;"	l
bac	grind.asm	/^     bac:	0505                	addi	a0,a0,1$/;"	l
bac	usertests.asm	/^     bac:	47850513          	addi	a0,a0,1144 # 6020 <malloc+0x5e6>$/;"	l
backcmd	sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	sh.c	/^struct backcmd {$/;"	s	file:
badarg	usertests.c	/^badarg(char *s)$/;"	f
badwrite	usertests.c	/^badwrite(char *s)$/;"	f
bae	grind.asm	/^     bae:	0585                	addi	a1,a1,1$/;"	l
bae	sh.asm	/^     bae:	cf91                	beqz	a5,bca <strlen+0x26>$/;"	l
base	umalloc.c	/^static Header base;$/;"	v	file:
bb0	grind.asm	/^     bb0:	00054783          	lbu	a5,0(a0)$/;"	l
bb0	sh.asm	/^     bb0:	0505                	addi	a0,a0,1$/;"	l
bb0	usertests.asm	/^     bb0:	00005097          	auipc	ra,0x5$/;"	l
bb2	sh.asm	/^     bb2:	87aa                	mv	a5,a0$/;"	l
bb4	grind.asm	/^     bb4:	fbe5                	bnez	a5,ba4 <strcmp+0xc>$/;"	l
bb4	sh.asm	/^     bb4:	4685                	li	a3,1$/;"	l
bb4	usertests.asm	/^     bb4:	a98080e7          	jalr	-1384(ra) # 5648 <open>$/;"	l
bb6	grind.asm	/^     bb6:	0005c503          	lbu	a0,0(a1)$/;"	l
bb6	sh.asm	/^     bb6:	9e89                	subw	a3,a3,a0$/;"	l
bb8	sh.asm	/^     bb8:	00f6853b          	addw	a0,a3,a5$/;"	l
bb8	usertests.asm	/^     bb8:	84aa                	mv	s1,a0$/;"	l
bba	grind.asm	/^     bba:	40a7853b          	subw	a0,a5,a0$/;"	l
bba	usertests.asm	/^     bba:	0c054863          	bltz	a0,c8a <unlinkread+0x12a>$/;"	l
bbc	sh.asm	/^     bbc:	0785                	addi	a5,a5,1$/;"	l
bbe	grind.asm	/^     bbe:	6422                	ld	s0,8(sp)$/;"	l
bbe	sh.asm	/^     bbe:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bbe	usertests.asm	/^     bbe:	00005517          	auipc	a0,0x5$/;"	l
bc	echo.asm	/^  bc:	fbe5                	bnez	a5,ac <strcmp+0xc>$/;"	l
bc	forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	grind.asm	/^      bc:	cd11                	beqz	a0,d8 <go+0x60>$/;"	l
bc	init.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	kill.asm	/^  bc:	4685                	li	a3,1$/;"	l
bc	ln.asm	/^  bc:	00f6853b          	addw	a0,a3,a5$/;"	l
bc	ls.asm	/^  bc:	26813023          	sd	s0,608(sp)$/;"	l
bc	mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	usertests.asm	/^      bc:	00005097          	auipc	ra,0x5$/;"	l
bc	zombie.asm	/^  bc:	8082                	ret$/;"	l
bc0	grind.asm	/^     bc0:	0141                	addi	sp,sp,16$/;"	l
bc2	grind.asm	/^     bc2:	8082                	ret$/;"	l
bc2	sh.asm	/^     bc2:	fb7d                	bnez	a4,bb8 <strlen+0x14>$/;"	l
bc2	usertests.asm	/^     bc2:	46250513          	addi	a0,a0,1122 # 6020 <malloc+0x5e6>$/;"	l
bc4	grind.asm	/^     bc4:	1141                	addi	sp,sp,-16$/;"	l
bc4	sh.asm	/^     bc4:	6422                	ld	s0,8(sp)$/;"	l
bc6	grind.asm	/^     bc6:	e422                	sd	s0,8(sp)$/;"	l
bc6	sh.asm	/^     bc6:	0141                	addi	sp,sp,16$/;"	l
bc6	usertests.asm	/^     bc6:	00005097          	auipc	ra,0x5$/;"	l
bc8	grind.asm	/^     bc8:	0800                	addi	s0,sp,16$/;"	l
bc8	sh.asm	/^     bc8:	8082                	ret$/;"	l
bca	grind.asm	/^     bca:	00054783          	lbu	a5,0(a0)$/;"	l
bca	sh.asm	/^     bca:	4501                	li	a0,0$/;"	l
bca	usertests.asm	/^     bca:	a92080e7          	jalr	-1390(ra) # 5658 <unlink>$/;"	l
bcc	sh.asm	/^     bcc:	bfe5                	j	bc4 <strlen+0x20>$/;"	l
bce	grind.asm	/^     bce:	cf91                	beqz	a5,bea <strlen+0x26>$/;"	l
bce	sh.asm	/^     bce:	1141                	addi	sp,sp,-16$/;"	l
bce	usertests.asm	/^     bce:	ed61                	bnez	a0,ca6 <unlinkread+0x146>$/;"	l
bcmd	sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	grind.asm	/^     bd0:	0505                	addi	a0,a0,1$/;"	l
bd0	sh.asm	/^     bd0:	e422                	sd	s0,8(sp)$/;"	l
bd0	usertests.asm	/^     bd0:	20200593          	li	a1,514$/;"	l
bd2	grind.asm	/^     bd2:	87aa                	mv	a5,a0$/;"	l
bd2	sh.asm	/^     bd2:	0800                	addi	s0,sp,16$/;"	l
bd4	grind.asm	/^     bd4:	4685                	li	a3,1$/;"	l
bd4	sh.asm	/^     bd4:	ca19                	beqz	a2,bea <memset+0x1c>$/;"	l
bd4	usertests.asm	/^     bd4:	00005517          	auipc	a0,0x5$/;"	l
bd6	grind.asm	/^     bd6:	9e89                	subw	a3,a3,a0$/;"	l
bd6	sh.asm	/^     bd6:	87aa                	mv	a5,a0$/;"	l
bd8	grind.asm	/^     bd8:	00f6853b          	addw	a0,a3,a5$/;"	l
bd8	sh.asm	/^     bd8:	1602                	slli	a2,a2,0x20$/;"	l
bd8	usertests.asm	/^     bd8:	44c50513          	addi	a0,a0,1100 # 6020 <malloc+0x5e6>$/;"	l
bda	sh.asm	/^     bda:	9201                	srli	a2,a2,0x20$/;"	l
bdc	grind.asm	/^     bdc:	0785                	addi	a5,a5,1$/;"	l
bdc	sh.asm	/^     bdc:	00a60733          	add	a4,a2,a0$/;"	l
bdc	usertests.asm	/^     bdc:	00005097          	auipc	ra,0x5$/;"	l
bde	grind.asm	/^     bde:	fff7c703          	lbu	a4,-1(a5)$/;"	l
be	bigfile.asm	/^  be:	6b2080e7          	jalr	1714(ra) # 76c <printf>$/;"	l
be	cat.asm	/^  be:	310080e7          	jalr	784(ra) # 3ca <open>$/;"	l
be	echo.asm	/^  be:	0005c503          	lbu	a0,0(a1)$/;"	l
be	grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	grind.asm	/^      be:	00001517          	auipc	a0,0x1$/;"	l
be	init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	kill.asm	/^  be:	9e89                	subw	a3,a3,a0$/;"	l
be	mkdir.asm	/^  be:	8082                	ret$/;"	l
be	rm.asm	/^  be:	8082                	ret$/;"	l
be	sh.asm	/^      be:	00056783          	lwu	a5,0(a0)$/;"	l
be	stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	zombie.asm	/^  be:	1141                	addi	sp,sp,-16$/;"	l
be0	sh.asm	/^     be0:	00b78023          	sb	a1,0(a5)$/;"	l
be0	usertests.asm	/^     be0:	a6c080e7          	jalr	-1428(ra) # 5648 <open>$/;"	l
be2	grind.asm	/^     be2:	fb7d                	bnez	a4,bd8 <strlen+0x14>$/;"	l
be4	grind.asm	/^     be4:	6422                	ld	s0,8(sp)$/;"	l
be4	sh.asm	/^     be4:	0785                	addi	a5,a5,1$/;"	l
be4	usertests.asm	/^     be4:	892a                	mv	s2,a0$/;"	l
be6	grind.asm	/^     be6:	0141                	addi	sp,sp,16$/;"	l
be6	sh.asm	/^     be6:	fee79de3          	bne	a5,a4,be0 <memset+0x12>$/;"	l
be6	usertests.asm	/^     be6:	460d                	li	a2,3$/;"	l
be8	grind.asm	/^     be8:	8082                	ret$/;"	l
be8	usertests.asm	/^     be8:	00005597          	auipc	a1,0x5$/;"	l
bea	grind.asm	/^     bea:	4501                	li	a0,0$/;"	l
bea	sh.asm	/^     bea:	6422                	ld	s0,8(sp)$/;"	l
bec	grind.asm	/^     bec:	bfe5                	j	be4 <strlen+0x20>$/;"	l
bec	sh.asm	/^     bec:	0141                	addi	sp,sp,16$/;"	l
bec	usertests.asm	/^     bec:	4b058593          	addi	a1,a1,1200 # 6098 <malloc+0x65e>$/;"	l
bee	grind.asm	/^     bee:	1141                	addi	sp,sp,-16$/;"	l
bee	sh.asm	/^     bee:	8082                	ret$/;"	l
bf0	grind.asm	/^     bf0:	e422                	sd	s0,8(sp)$/;"	l
bf0	sh.asm	/^     bf0:	1141                	addi	sp,sp,-16$/;"	l
bf0	usertests.asm	/^     bf0:	00005097          	auipc	ra,0x5$/;"	l
bf2	grind.asm	/^     bf2:	0800                	addi	s0,sp,16$/;"	l
bf2	sh.asm	/^     bf2:	e422                	sd	s0,8(sp)$/;"	l
bf4	grind.asm	/^     bf4:	ca19                	beqz	a2,c0a <memset+0x1c>$/;"	l
bf4	sh.asm	/^     bf4:	0800                	addi	s0,sp,16$/;"	l
bf4	usertests.asm	/^     bf4:	a38080e7          	jalr	-1480(ra) # 5628 <write>$/;"	l
bf6	grind.asm	/^     bf6:	87aa                	mv	a5,a0$/;"	l
bf6	sh.asm	/^     bf6:	00054783          	lbu	a5,0(a0)$/;"	l
bf8	grind.asm	/^     bf8:	1602                	slli	a2,a2,0x20$/;"	l
bf8	usertests.asm	/^     bf8:	854a                	mv	a0,s2$/;"	l
bfa	grind.asm	/^     bfa:	9201                	srli	a2,a2,0x20$/;"	l
bfa	sh.asm	/^     bfa:	cb99                	beqz	a5,c10 <strchr+0x20>$/;"	l
bfa	usertests.asm	/^     bfa:	00005097          	auipc	ra,0x5$/;"	l
bfc	grind.asm	/^     bfc:	00a60733          	add	a4,a2,a0$/;"	l
bfc	sh.asm	/^     bfc:	00f58763          	beq	a1,a5,c0a <strchr+0x1a>$/;"	l
bfe	usertests.asm	/^     bfe:	a36080e7          	jalr	-1482(ra) # 5630 <close>$/;"	l
bigargtest	usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	usertests.c	/^bigdir(char *s)$/;"	f
bigfile	usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	usertests.c	/^bigwrite(char *s)$/;"	f
bp	bigfile.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bsstest	usertests.c	/^bsstest(char *s)$/;"	f
buf	cat.c	/^char buf[512];$/;"	v
buf	grep.c	/^char buf[1024];$/;"	v
buf	usertests.c	/^char buf[BUFSZ];$/;"	v
buf	wc.c	/^char buf[512];$/;"	v
c	bigfile.asm	/^   c:	40913c23          	sd	s1,1048(sp)$/;"	l
c	cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	usertests.asm	/^       c:	4505                	li	a0,1$/;"	l
c	usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	usertests.asm	/^  c = sbrk(0);$/;"	d
c	usertests.asm	/^  c = sbrk(1);$/;"	d
c	usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	zombie.asm	/^   c:	286080e7          	jalr	646(ra) # 28e <fork>$/;"	l
c0	forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	kill.asm	/^  c0:	00f6853b          	addw	a0,a3,a5$/;"	l
c0	ln.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	ls.asm	/^  c0:	24913c23          	sd	s1,600(sp)$/;"	l
c0	mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	usertests.asm	/^      c0:	574080e7          	jalr	1396(ra) # 5630 <close>$/;"	l
c0	zombie.asm	/^  c0:	e422                	sd	s0,8(sp)$/;"	l
c00	grind.asm	/^     c00:	00b78023          	sb	a1,0(a5)$/;"	l
c00	sh.asm	/^     c00:	0505                	addi	a0,a0,1$/;"	l
c02	sh.asm	/^     c02:	00054783          	lbu	a5,0(a0)$/;"	l
c02	usertests.asm	/^     c02:	660d                	lui	a2,0x3$/;"	l
c04	grind.asm	/^     c04:	0785                	addi	a5,a5,1$/;"	l
c04	usertests.asm	/^     c04:	0000b597          	auipc	a1,0xb$/;"	l
c06	grind.asm	/^     c06:	fee79de3          	bne	a5,a4,c00 <memset+0x12>$/;"	l
c06	sh.asm	/^     c06:	fbfd                	bnez	a5,bfc <strchr+0xc>$/;"	l
c08	sh.asm	/^     c08:	4501                	li	a0,0$/;"	l
c08	usertests.asm	/^     c08:	ee458593          	addi	a1,a1,-284 # bae8 <buf>$/;"	l
c0a	grind.asm	/^     c0a:	6422                	ld	s0,8(sp)$/;"	l
c0a	sh.asm	/^     c0a:	6422                	ld	s0,8(sp)$/;"	l
c0c	grind.asm	/^     c0c:	0141                	addi	sp,sp,16$/;"	l
c0c	sh.asm	/^     c0c:	0141                	addi	sp,sp,16$/;"	l
c0c	usertests.asm	/^     c0c:	8526                	mv	a0,s1$/;"	l
c0e	grind.asm	/^     c0e:	8082                	ret$/;"	l
c0e	sh.asm	/^     c0e:	8082                	ret$/;"	l
c0e	usertests.asm	/^     c0e:	00005097          	auipc	ra,0x5$/;"	l
c10	grind.asm	/^     c10:	1141                	addi	sp,sp,-16$/;"	l
c10	sh.asm	/^     c10:	4501                	li	a0,0$/;"	l
c12	grind.asm	/^     c12:	e422                	sd	s0,8(sp)$/;"	l
c12	sh.asm	/^     c12:	bfe5                	j	c0a <strchr+0x1a>$/;"	l
c12	usertests.asm	/^     c12:	a12080e7          	jalr	-1518(ra) # 5620 <read>$/;"	l
c14	grind.asm	/^     c14:	0800                	addi	s0,sp,16$/;"	l
c14	sh.asm	/^     c14:	711d                	addi	sp,sp,-96$/;"	l
c16	grind.asm	/^     c16:	00054783          	lbu	a5,0(a0)$/;"	l
c16	sh.asm	/^     c16:	ec86                	sd	ra,88(sp)$/;"	l
c16	usertests.asm	/^     c16:	4795                	li	a5,5$/;"	l
c18	sh.asm	/^     c18:	e8a2                	sd	s0,80(sp)$/;"	l
c18	usertests.asm	/^     c18:	0af51563          	bne	a0,a5,cc2 <unlinkread+0x162>$/;"	l
c1a	grind.asm	/^     c1a:	cb99                	beqz	a5,c30 <strchr+0x20>$/;"	l
c1a	sh.asm	/^     c1a:	e4a6                	sd	s1,72(sp)$/;"	l
c1c	grind.asm	/^     c1c:	00f58763          	beq	a1,a5,c2a <strchr+0x1a>$/;"	l
c1c	sh.asm	/^     c1c:	e0ca                	sd	s2,64(sp)$/;"	l
c1c	usertests.asm	/^     c1c:	0000b717          	auipc	a4,0xb$/;"	l
c1e	sh.asm	/^     c1e:	fc4e                	sd	s3,56(sp)$/;"	l
c2	bigfile.asm	/^  c2:	557d                	li	a0,-1$/;"	l
c2	cat.asm	/^  c2:	84aa                	mv	s1,a0$/;"	l
c2	echo.asm	/^  c2:	40a7853b          	subw	a0,a5,a0$/;"	l
c2	grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	grind.asm	/^      c2:	24a50513          	addi	a0,a0,586 # 1308 <malloc+0xee>$/;"	l
c2	init.asm	/^  c2:	2a6080e7          	jalr	678(ra) # 364 <exit>$/;"	l
c2	ln.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	sh.asm	/^      c2:	078a                	slli	a5,a5,0x2$/;"	l
c2	stressfs.asm	/^  c2:	634080e7          	jalr	1588(ra) # 6f2 <printf>$/;"	l
c2	wc.asm	/^  c2:	6be080e7          	jalr	1726(ra) # 77c <printf>$/;"	l
c2	zombie.asm	/^  c2:	0800                	addi	s0,sp,16$/;"	l
c20	grind.asm	/^     c20:	0505                	addi	a0,a0,1$/;"	l
c20	sh.asm	/^     c20:	f852                	sd	s4,48(sp)$/;"	l
c20	usertests.asm	/^     c20:	ecc74703          	lbu	a4,-308(a4) # bae8 <buf>$/;"	l
c22	grind.asm	/^     c22:	00054783          	lbu	a5,0(a0)$/;"	l
c22	sh.asm	/^     c22:	f456                	sd	s5,40(sp)$/;"	l
c24	sh.asm	/^     c24:	f05a                	sd	s6,32(sp)$/;"	l
c24	usertests.asm	/^     c24:	06800793          	li	a5,104$/;"	l
c26	grind.asm	/^     c26:	fbfd                	bnez	a5,c1c <strchr+0xc>$/;"	l
c26	sh.asm	/^     c26:	ec5e                	sd	s7,24(sp)$/;"	l
c28	grind.asm	/^     c28:	4501                	li	a0,0$/;"	l
c28	sh.asm	/^     c28:	1080                	addi	s0,sp,96$/;"	l
c28	usertests.asm	/^     c28:	0af71b63          	bne	a4,a5,cde <unlinkread+0x17e>$/;"	l
c2a	grind.asm	/^     c2a:	6422                	ld	s0,8(sp)$/;"	l
c2a	sh.asm	/^     c2a:	8baa                	mv	s7,a0$/;"	l
c2c	grind.asm	/^     c2c:	0141                	addi	sp,sp,16$/;"	l
c2c	sh.asm	/^     c2c:	8a2e                	mv	s4,a1$/;"	l
c2c	usertests.asm	/^     c2c:	4629                	li	a2,10$/;"	l
c2e	grind.asm	/^     c2e:	8082                	ret$/;"	l
c2e	sh.asm	/^     c2e:	892a                	mv	s2,a0$/;"	l
c2e	usertests.asm	/^     c2e:	0000b597          	auipc	a1,0xb$/;"	l
c30	grind.asm	/^     c30:	4501                	li	a0,0$/;"	l
c30	sh.asm	/^     c30:	4481                	li	s1,0$/;"	l
c32	grind.asm	/^     c32:	bfe5                	j	c2a <strchr+0x1a>$/;"	l
c32	sh.asm	/^     c32:	4aa9                	li	s5,10$/;"	l
c32	usertests.asm	/^     c32:	eba58593          	addi	a1,a1,-326 # bae8 <buf>$/;"	l
c34	grind.asm	/^     c34:	711d                	addi	sp,sp,-96$/;"	l
c34	sh.asm	/^     c34:	4b35                	li	s6,13$/;"	l
c36	grind.asm	/^     c36:	ec86                	sd	ra,88(sp)$/;"	l
c36	sh.asm	/^     c36:	89a6                	mv	s3,s1$/;"	l
c36	usertests.asm	/^     c36:	8526                	mv	a0,s1$/;"	l
c38	grind.asm	/^     c38:	e8a2                	sd	s0,80(sp)$/;"	l
c38	sh.asm	/^     c38:	2485                	addiw	s1,s1,1$/;"	l
c38	usertests.asm	/^     c38:	00005097          	auipc	ra,0x5$/;"	l
c3a	grind.asm	/^     c3a:	e4a6                	sd	s1,72(sp)$/;"	l
c3a	sh.asm	/^     c3a:	0344d863          	bge	s1,s4,c6a <gets+0x56>$/;"	l
c3c	grind.asm	/^     c3c:	e0ca                	sd	s2,64(sp)$/;"	l
c3c	usertests.asm	/^     c3c:	9f0080e7          	jalr	-1552(ra) # 5628 <write>$/;"	l
c3e	grind.asm	/^     c3e:	fc4e                	sd	s3,56(sp)$/;"	l
c3e	sh.asm	/^     c3e:	4605                	li	a2,1$/;"	l
c4	bigfile.asm	/^  c4:	00000097          	auipc	ra,0x0$/;"	l
c4	cat.asm	/^  c4:	02054d63          	bltz	a0,fe <main+0x74>$/;"	l
c4	forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	kill.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	ls.asm	/^  c4:	25213823          	sd	s2,592(sp)$/;"	l
c4	mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	sh.asm	/^      c4:	00001717          	auipc	a4,0x1$/;"	l
c4	usertests.asm	/^      c4:	4581                	li	a1,0$/;"	l
c4	zombie.asm	/^  c4:	00054783          	lbu	a5,0(a0)$/;"	l
c40	grind.asm	/^     c40:	f852                	sd	s4,48(sp)$/;"	l
c40	sh.asm	/^     c40:	faf40593          	addi	a1,s0,-81$/;"	l
c40	usertests.asm	/^     c40:	47a9                	li	a5,10$/;"	l
c42	grind.asm	/^     c42:	f456                	sd	s5,40(sp)$/;"	l
c42	usertests.asm	/^     c42:	0af51c63          	bne	a0,a5,cfa <unlinkread+0x19a>$/;"	l
c44	grind.asm	/^     c44:	f05a                	sd	s6,32(sp)$/;"	l
c44	sh.asm	/^     c44:	4501                	li	a0,0$/;"	l
c46	grind.asm	/^     c46:	ec5e                	sd	s7,24(sp)$/;"	l
c46	sh.asm	/^     c46:	00000097          	auipc	ra,0x0$/;"	l
c46	usertests.asm	/^     c46:	8526                	mv	a0,s1$/;"	l
c48	grind.asm	/^     c48:	1080                	addi	s0,sp,96$/;"	l
c48	usertests.asm	/^     c48:	00005097          	auipc	ra,0x5$/;"	l
c4a	grind.asm	/^     c4a:	8baa                	mv	s7,a0$/;"	l
c4a	sh.asm	/^     c4a:	19a080e7          	jalr	410(ra) # de0 <read>$/;"	l
c4c	grind.asm	/^     c4c:	8a2e                	mv	s4,a1$/;"	l
c4c	usertests.asm	/^     c4c:	9e8080e7          	jalr	-1560(ra) # 5630 <close>$/;"	l
c4e	grind.asm	/^     c4e:	892a                	mv	s2,a0$/;"	l
c4e	sh.asm	/^     c4e:	00a05e63          	blez	a0,c6a <gets+0x56>$/;"	l
c50	grind.asm	/^     c50:	4481                	li	s1,0$/;"	l
c50	usertests.asm	/^     c50:	00005517          	auipc	a0,0x5$/;"	l
c52	grind.asm	/^     c52:	4aa9                	li	s5,10$/;"	l
c52	sh.asm	/^     c52:	faf44783          	lbu	a5,-81(s0)$/;"	l
c54	grind.asm	/^     c54:	4b35                	li	s6,13$/;"	l
c54	usertests.asm	/^     c54:	3d050513          	addi	a0,a0,976 # 6020 <malloc+0x5e6>$/;"	l
c56	grind.asm	/^     c56:	89a6                	mv	s3,s1$/;"	l
c56	sh.asm	/^     c56:	00f90023          	sb	a5,0(s2)$/;"	l
c58	grind.asm	/^     c58:	2485                	addiw	s1,s1,1$/;"	l
c58	usertests.asm	/^     c58:	00005097          	auipc	ra,0x5$/;"	l
c5a	grind.asm	/^     c5a:	0344d863          	bge	s1,s4,c8a <gets+0x56>$/;"	l
c5a	sh.asm	/^     c5a:	01578763          	beq	a5,s5,c68 <gets+0x54>$/;"	l
c5c	usertests.asm	/^     c5c:	a00080e7          	jalr	-1536(ra) # 5658 <unlink>$/;"	l
c5e	grind.asm	/^     c5e:	4605                	li	a2,1$/;"	l
c5e	sh.asm	/^     c5e:	0905                	addi	s2,s2,1$/;"	l
c6	echo.asm	/^  c6:	6422                	ld	s0,8(sp)$/;"	l
c6	forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	grind.asm	/^      c6:	00001097          	auipc	ra,0x1$/;"	l
c6	init.asm	/^  c6:	00001597          	auipc	a1,0x1$/;"	l
c6	kill.asm	/^  c6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c6	ln.asm	/^  c6:	fb7d                	bnez	a4,bc <strlen+0x14>$/;"	l
c6	mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	usertests.asm	/^      c6:	00006517          	auipc	a0,0x6$/;"	l
c6	wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c60	grind.asm	/^     c60:	faf40593          	addi	a1,s0,-81$/;"	l
c60	sh.asm	/^     c60:	fd679be3          	bne	a5,s6,c36 <gets+0x22>$/;"	l
c60	usertests.asm	/^     c60:	70a2                	ld	ra,40(sp)$/;"	l
c62	usertests.asm	/^     c62:	7402                	ld	s0,32(sp)$/;"	l
c64	grind.asm	/^     c64:	4501                	li	a0,0$/;"	l
c64	sh.asm	/^     c64:	89a6                	mv	s3,s1$/;"	l
c64	usertests.asm	/^     c64:	64e2                	ld	s1,24(sp)$/;"	l
c66	grind.asm	/^     c66:	00000097          	auipc	ra,0x0$/;"	l
c66	sh.asm	/^     c66:	a011                	j	c6a <gets+0x56>$/;"	l
c66	usertests.asm	/^     c66:	6942                	ld	s2,16(sp)$/;"	l
c68	sh.asm	/^     c68:	89a6                	mv	s3,s1$/;"	l
c68	usertests.asm	/^     c68:	69a2                	ld	s3,8(sp)$/;"	l
c6a	grind.asm	/^     c6a:	19a080e7          	jalr	410(ra) # e00 <read>$/;"	l
c6a	sh.asm	/^     c6a:	99de                	add	s3,s3,s7$/;"	l
c6a	usertests.asm	/^     c6a:	6145                	addi	sp,sp,48$/;"	l
c6c	sh.asm	/^     c6c:	00098023          	sb	zero,0(s3)$/;"	l
c6c	usertests.asm	/^     c6c:	8082                	ret$/;"	l
c6e	grind.asm	/^     c6e:	00a05e63          	blez	a0,c8a <gets+0x56>$/;"	l
c6e	usertests.asm	/^     c6e:	85ce                	mv	a1,s3$/;"	l
c70	sh.asm	/^     c70:	855e                	mv	a0,s7$/;"	l
c70	usertests.asm	/^     c70:	00005517          	auipc	a0,0x5$/;"	l
c72	grind.asm	/^     c72:	faf44783          	lbu	a5,-81(s0)$/;"	l
c72	sh.asm	/^     c72:	60e6                	ld	ra,88(sp)$/;"	l
c74	sh.asm	/^     c74:	6446                	ld	s0,80(sp)$/;"	l
c74	usertests.asm	/^     c74:	3c050513          	addi	a0,a0,960 # 6030 <malloc+0x5f6>$/;"	l
c76	grind.asm	/^     c76:	00f90023          	sb	a5,0(s2)$/;"	l
c76	sh.asm	/^     c76:	64a6                	ld	s1,72(sp)$/;"	l
c78	sh.asm	/^     c78:	6906                	ld	s2,64(sp)$/;"	l
c78	usertests.asm	/^     c78:	00005097          	auipc	ra,0x5$/;"	l
c7a	grind.asm	/^     c7a:	01578763          	beq	a5,s5,c88 <gets+0x54>$/;"	l
c7a	sh.asm	/^     c7a:	79e2                	ld	s3,56(sp)$/;"	l
c7c	sh.asm	/^     c7c:	7a42                	ld	s4,48(sp)$/;"	l
c7c	usertests.asm	/^     c7c:	d0a080e7          	jalr	-758(ra) # 5982 <printf>$/;"	l
c7e	grind.asm	/^     c7e:	0905                	addi	s2,s2,1$/;"	l
c7e	sh.asm	/^     c7e:	7aa2                	ld	s5,40(sp)$/;"	l
c8	bigfile.asm	/^  c8:	32e080e7          	jalr	814(ra) # 3f2 <exit>$/;"	l
c8	cat.asm	/^  c8:	00000097          	auipc	ra,0x0$/;"	l
c8	echo.asm	/^  c8:	0141                	addi	sp,sp,16$/;"	l
c8	forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	ls.asm	/^  c8:	25313423          	sd	s3,584(sp)$/;"	l
c8	sh.asm	/^      c8:	32c70713          	addi	a4,a4,812 # 13f0 <malloc+0x1f6>$/;"	l
c8	stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	zombie.asm	/^  c8:	cb99                	beqz	a5,de <strchr+0x20>$/;"	l
c80	grind.asm	/^     c80:	fd679be3          	bne	a5,s6,c56 <gets+0x22>$/;"	l
c80	sh.asm	/^     c80:	7b02                	ld	s6,32(sp)$/;"	l
c80	usertests.asm	/^     c80:	4505                	li	a0,1$/;"	l
c82	sh.asm	/^     c82:	6be2                	ld	s7,24(sp)$/;"	l
c82	usertests.asm	/^     c82:	00005097          	auipc	ra,0x5$/;"	l
c84	grind.asm	/^     c84:	89a6                	mv	s3,s1$/;"	l
c84	sh.asm	/^     c84:	6125                	addi	sp,sp,96$/;"	l
c86	grind.asm	/^     c86:	a011                	j	c8a <gets+0x56>$/;"	l
c86	sh.asm	/^     c86:	8082                	ret$/;"	l
c86	usertests.asm	/^     c86:	986080e7          	jalr	-1658(ra) # 5608 <exit>$/;"	l
c88	grind.asm	/^     c88:	89a6                	mv	s3,s1$/;"	l
c88	sh.asm	/^     c88:	1101                	addi	sp,sp,-32$/;"	l
c8a	grind.asm	/^     c8a:	99de                	add	s3,s3,s7$/;"	l
c8a	sh.asm	/^     c8a:	ec06                	sd	ra,24(sp)$/;"	l
c8a	usertests.asm	/^     c8a:	85ce                	mv	a1,s3$/;"	l
c8c	grind.asm	/^     c8c:	00098023          	sb	zero,0(s3)$/;"	l
c8c	sh.asm	/^     c8c:	e822                	sd	s0,16(sp)$/;"	l
c8c	usertests.asm	/^     c8c:	00005517          	auipc	a0,0x5$/;"	l
c8e	sh.asm	/^     c8e:	e426                	sd	s1,8(sp)$/;"	l
c90	grind.asm	/^     c90:	855e                	mv	a0,s7$/;"	l
c90	sh.asm	/^     c90:	e04a                	sd	s2,0(sp)$/;"	l
c90	usertests.asm	/^     c90:	3cc50513          	addi	a0,a0,972 # 6058 <malloc+0x61e>$/;"	l
c92	grind.asm	/^     c92:	60e6                	ld	ra,88(sp)$/;"	l
c92	sh.asm	/^     c92:	1000                	addi	s0,sp,32$/;"	l
c94	grind.asm	/^     c94:	6446                	ld	s0,80(sp)$/;"	l
c94	sh.asm	/^     c94:	892e                	mv	s2,a1$/;"	l
c94	usertests.asm	/^     c94:	00005097          	auipc	ra,0x5$/;"	l
c96	grind.asm	/^     c96:	64a6                	ld	s1,72(sp)$/;"	l
c96	sh.asm	/^     c96:	4581                	li	a1,0$/;"	l
c98	grind.asm	/^     c98:	6906                	ld	s2,64(sp)$/;"	l
c98	sh.asm	/^     c98:	00000097          	auipc	ra,0x0$/;"	l
c98	usertests.asm	/^     c98:	cee080e7          	jalr	-786(ra) # 5982 <printf>$/;"	l
c9a	grind.asm	/^     c9a:	79e2                	ld	s3,56(sp)$/;"	l
c9c	grind.asm	/^     c9c:	7a42                	ld	s4,48(sp)$/;"	l
c9c	sh.asm	/^     c9c:	170080e7          	jalr	368(ra) # e08 <open>$/;"	l
c9c	usertests.asm	/^     c9c:	4505                	li	a0,1$/;"	l
c9e	grind.asm	/^     c9e:	7aa2                	ld	s5,40(sp)$/;"	l
c9e	usertests.asm	/^     c9e:	00005097          	auipc	ra,0x5$/;"	l
ca	echo.asm	/^  ca:	8082                	ret$/;"	l
ca	forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	grep.asm	/^  ca:	8082                	ret$/;"	l
ca	grind.asm	/^      ca:	09c080e7          	jalr	156(ra) # 1162 <printf>$/;"	l
ca	init.asm	/^  ca:	8aa58593          	addi	a1,a1,-1878 # 970 <argv>$/;"	l
ca	kill.asm	/^  ca:	fb7d                	bnez	a4,c0 <strlen+0x14>$/;"	l
ca	ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	usertests.asm	/^      ca:	ab250513          	addi	a0,a0,-1358 # 5b78 <malloc+0x13e>$/;"	l
ca	wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca	zombie.asm	/^  ca:	00f58763          	beq	a1,a5,d8 <strchr+0x1a>$/;"	l
ca0	grind.asm	/^     ca0:	7b02                	ld	s6,32(sp)$/;"	l
ca0	sh.asm	/^     ca0:	02054563          	bltz	a0,cca <stat+0x42>$/;"	l
ca2	grind.asm	/^     ca2:	6be2                	ld	s7,24(sp)$/;"	l
ca2	usertests.asm	/^     ca2:	96a080e7          	jalr	-1686(ra) # 5608 <exit>$/;"	l
ca4	grind.asm	/^     ca4:	6125                	addi	sp,sp,96$/;"	l
ca4	sh.asm	/^     ca4:	84aa                	mv	s1,a0$/;"	l
ca6	grind.asm	/^     ca6:	8082                	ret$/;"	l
ca6	sh.asm	/^     ca6:	85ca                	mv	a1,s2$/;"	l
ca6	usertests.asm	/^     ca6:	85ce                	mv	a1,s3$/;"	l
ca8	grind.asm	/^     ca8:	1101                	addi	sp,sp,-32$/;"	l
ca8	sh.asm	/^     ca8:	00000097          	auipc	ra,0x0$/;"	l
ca8	usertests.asm	/^     ca8:	00005517          	auipc	a0,0x5$/;"	l
caa	grind.asm	/^     caa:	ec06                	sd	ra,24(sp)$/;"	l
cac	grind.asm	/^     cac:	e822                	sd	s0,16(sp)$/;"	l
cac	sh.asm	/^     cac:	178080e7          	jalr	376(ra) # e20 <fstat>$/;"	l
cac	usertests.asm	/^     cac:	3d050513          	addi	a0,a0,976 # 6078 <malloc+0x63e>$/;"	l
cae	grind.asm	/^     cae:	e426                	sd	s1,8(sp)$/;"	l
cat	cat.c	/^cat(int fd)$/;"	f
cb0	grind.asm	/^     cb0:	e04a                	sd	s2,0(sp)$/;"	l
cb0	sh.asm	/^     cb0:	892a                	mv	s2,a0$/;"	l
cb0	usertests.asm	/^     cb0:	00005097          	auipc	ra,0x5$/;"	l
cb2	grind.asm	/^     cb2:	1000                	addi	s0,sp,32$/;"	l
cb2	sh.asm	/^     cb2:	8526                	mv	a0,s1$/;"	l
cb4	grind.asm	/^     cb4:	892e                	mv	s2,a1$/;"	l
cb4	sh.asm	/^     cb4:	00000097          	auipc	ra,0x0$/;"	l
cb4	usertests.asm	/^     cb4:	cd2080e7          	jalr	-814(ra) # 5982 <printf>$/;"	l
cb6	grind.asm	/^     cb6:	4581                	li	a1,0$/;"	l
cb8	grind.asm	/^     cb8:	00000097          	auipc	ra,0x0$/;"	l
cb8	sh.asm	/^     cb8:	13c080e7          	jalr	316(ra) # df0 <close>$/;"	l
cb8	usertests.asm	/^     cb8:	4505                	li	a0,1$/;"	l
cba	usertests.asm	/^     cba:	00005097          	auipc	ra,0x5$/;"	l
cbc	grind.asm	/^     cbc:	170080e7          	jalr	368(ra) # e28 <open>$/;"	l
cbc	sh.asm	/^     cbc:	854a                	mv	a0,s2$/;"	l
cbe	sh.asm	/^     cbe:	60e2                	ld	ra,24(sp)$/;"	l
cbe	usertests.asm	/^     cbe:	94e080e7          	jalr	-1714(ra) # 5608 <exit>$/;"	l
cc	bigfile.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	bigfile.asm	/^  cc:	854a                	mv	a0,s2$/;"	l
cc	cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	cat.asm	/^  cc:	f38080e7          	jalr	-200(ra) # 0 <cat>$/;"	l
cc	echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	echo.asm	/^  cc:	1141                	addi	sp,sp,-16$/;"	l
cc	forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^  cc:	6422                	ld	s0,8(sp)$/;"	l
cc	ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^  cc:	8082                	ret$/;"	l
cc	ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ls.asm	/^  cc:	25413023          	sd	s4,576(sp)$/;"	l
cc	mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	sh.asm	/^      cc:	97ba                	add	a5,a5,a4$/;"	l
cc	sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	usertests.asm	/^      cc = cc * 2;$/;"	d
cc	usertests.asm	/^    cc = 1;$/;"	d
cc	usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	grind.asm	/^     cc0:	02054563          	bltz	a0,cea <stat+0x42>$/;"	l
cc0	sh.asm	/^     cc0:	6442                	ld	s0,16(sp)$/;"	l
cc2	sh.asm	/^     cc2:	64a2                	ld	s1,8(sp)$/;"	l
cc2	usertests.asm	/^     cc2:	85ce                	mv	a1,s3$/;"	l
cc4	grind.asm	/^     cc4:	84aa                	mv	s1,a0$/;"	l
cc4	sh.asm	/^     cc4:	6902                	ld	s2,0(sp)$/;"	l
cc4	usertests.asm	/^     cc4:	00005517          	auipc	a0,0x5$/;"	l
cc6	grind.asm	/^     cc6:	85ca                	mv	a1,s2$/;"	l
cc6	sh.asm	/^     cc6:	6105                	addi	sp,sp,32$/;"	l
cc8	grind.asm	/^     cc8:	00000097          	auipc	ra,0x0$/;"	l
cc8	sh.asm	/^     cc8:	8082                	ret$/;"	l
cc8	usertests.asm	/^     cc8:	3dc50513          	addi	a0,a0,988 # 60a0 <malloc+0x666>$/;"	l
cca	sh.asm	/^     cca:	597d                	li	s2,-1$/;"	l
ccc	grind.asm	/^     ccc:	178080e7          	jalr	376(ra) # e40 <fstat>$/;"	l
ccc	sh.asm	/^     ccc:	bfc5                	j	cbc <stat+0x34>$/;"	l
ccc	usertests.asm	/^     ccc:	00005097          	auipc	ra,0x5$/;"	l
cce	sh.asm	/^     cce:	1141                	addi	sp,sp,-16$/;"	l
cd0	grind.asm	/^     cd0:	892a                	mv	s2,a0$/;"	l
cd0	sh.asm	/^     cd0:	e422                	sd	s0,8(sp)$/;"	l
cd0	usertests.asm	/^     cd0:	cb6080e7          	jalr	-842(ra) # 5982 <printf>$/;"	l
cd2	grind.asm	/^     cd2:	8526                	mv	a0,s1$/;"	l
cd2	sh.asm	/^     cd2:	0800                	addi	s0,sp,16$/;"	l
cd4	grind.asm	/^     cd4:	00000097          	auipc	ra,0x0$/;"	l
cd4	sh.asm	/^     cd4:	00054683          	lbu	a3,0(a0)$/;"	l
cd4	usertests.asm	/^     cd4:	4505                	li	a0,1$/;"	l
cd6	usertests.asm	/^     cd6:	00005097          	auipc	ra,0x5$/;"	l
cd8	grind.asm	/^     cd8:	13c080e7          	jalr	316(ra) # e10 <close>$/;"	l
cd8	sh.asm	/^     cd8:	fd06879b          	addiw	a5,a3,-48$/;"	l
cda	usertests.asm	/^     cda:	932080e7          	jalr	-1742(ra) # 5608 <exit>$/;"	l
cdc	grind.asm	/^     cdc:	854a                	mv	a0,s2$/;"	l
cdc	sh.asm	/^     cdc:	0ff7f793          	zext.b	a5,a5$/;"	l
cde	grind.asm	/^     cde:	60e2                	ld	ra,24(sp)$/;"	l
cde	usertests.asm	/^     cde:	85ce                	mv	a1,s3$/;"	l
ce	bigfile.asm	/^  ce:	00000097          	auipc	ra,0x0$/;"	l
ce	echo.asm	/^  ce:	e422                	sd	s0,8(sp)$/;"	l
ce	forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	grind.asm	/^      ce:	4505                	li	a0,1$/;"	l
ce	init.asm	/^  ce:	00000517          	auipc	a0,0x0$/;"	l
ce	kill.asm	/^  ce:	0141                	addi	sp,sp,16$/;"	l
ce	ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	sh.asm	/^      ce:	439c                	lw	a5,0(a5)$/;"	l
ce	usertests.asm	/^      ce:	00005097          	auipc	ra,0x5$/;"	l
ce	wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	zombie.asm	/^  ce:	0505                	addi	a0,a0,1$/;"	l
ce0	grind.asm	/^     ce0:	6442                	ld	s0,16(sp)$/;"	l
ce0	sh.asm	/^     ce0:	4625                	li	a2,9$/;"	l
ce0	usertests.asm	/^     ce0:	00005517          	auipc	a0,0x5$/;"	l
ce2	grind.asm	/^     ce2:	64a2                	ld	s1,8(sp)$/;"	l
ce2	sh.asm	/^     ce2:	02f66863          	bltu	a2,a5,d12 <atoi+0x44>$/;"	l
ce4	grind.asm	/^     ce4:	6902                	ld	s2,0(sp)$/;"	l
ce4	usertests.asm	/^     ce4:	3e050513          	addi	a0,a0,992 # 60c0 <malloc+0x686>$/;"	l
ce6	grind.asm	/^     ce6:	6105                	addi	sp,sp,32$/;"	l
ce6	sh.asm	/^     ce6:	872a                	mv	a4,a0$/;"	l
ce8	grind.asm	/^     ce8:	8082                	ret$/;"	l
ce8	sh.asm	/^     ce8:	4501                	li	a0,0$/;"	l
ce8	usertests.asm	/^     ce8:	00005097          	auipc	ra,0x5$/;"	l
cea	grind.asm	/^     cea:	597d                	li	s2,-1$/;"	l
cea	sh.asm	/^     cea:	0705                	addi	a4,a4,1$/;"	l
cec	grind.asm	/^     cec:	bfc5                	j	cdc <stat+0x34>$/;"	l
cec	sh.asm	/^     cec:	0025179b          	slliw	a5,a0,0x2$/;"	l
cec	usertests.asm	/^     cec:	c9a080e7          	jalr	-870(ra) # 5982 <printf>$/;"	l
cee	grind.asm	/^     cee:	1141                	addi	sp,sp,-16$/;"	l
cf0	grind.asm	/^     cf0:	e422                	sd	s0,8(sp)$/;"	l
cf0	sh.asm	/^     cf0:	9fa9                	addw	a5,a5,a0$/;"	l
cf0	usertests.asm	/^     cf0:	4505                	li	a0,1$/;"	l
cf2	grind.asm	/^     cf2:	0800                	addi	s0,sp,16$/;"	l
cf2	sh.asm	/^     cf2:	0017979b          	slliw	a5,a5,0x1$/;"	l
cf2	usertests.asm	/^     cf2:	00005097          	auipc	ra,0x5$/;"	l
cf4	grind.asm	/^     cf4:	00054683          	lbu	a3,0(a0)$/;"	l
cf6	sh.asm	/^     cf6:	9fb5                	addw	a5,a5,a3$/;"	l
cf6	usertests.asm	/^     cf6:	916080e7          	jalr	-1770(ra) # 5608 <exit>$/;"	l
cf8	grind.asm	/^     cf8:	fd06879b          	addiw	a5,a3,-48$/;"	l
cf8	sh.asm	/^     cf8:	fd07851b          	addiw	a0,a5,-48$/;"	l
cfa	usertests.asm	/^     cfa:	85ce                	mv	a1,s3$/;"	l
cfc	grind.asm	/^     cfc:	0ff7f793          	zext.b	a5,a5$/;"	l
cfc	sh.asm	/^     cfc:	00074683          	lbu	a3,0(a4)$/;"	l
cfc	usertests.asm	/^     cfc:	00005517          	auipc	a0,0x5$/;"	l
char	cat.asm	/^char buf[512];$/;"	l
char	init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	wc.asm	/^char buf[512];$/;"	l
chdir	bigfile.asm	/^chdir:$/;"	l
chdir	cat.asm	/^chdir:$/;"	l
chdir	echo.asm	/^chdir:$/;"	l
chdir	forktest.asm	/^chdir:$/;"	l
chdir	grep.asm	/^chdir:$/;"	l
chdir	grind.asm	/^chdir:$/;"	l
chdir	init.asm	/^chdir:$/;"	l
chdir	kill.asm	/^chdir:$/;"	l
chdir	ln.asm	/^chdir:$/;"	l
chdir	ls.asm	/^chdir:$/;"	l
chdir	mkdir.asm	/^chdir:$/;"	l
chdir	rm.asm	/^chdir:$/;"	l
chdir	sh.asm	/^chdir:$/;"	l
chdir	stressfs.asm	/^chdir:$/;"	l
chdir	usertests.asm	/^chdir:$/;"	l
chdir	usys.S	/^chdir:$/;"	l
chdir	wc.asm	/^chdir:$/;"	l
chdir	zombie.asm	/^chdir:$/;"	l
cleanup	symlinktest.c	/^cleanup(void)$/;"	f	file:
close	bigfile.asm	/^close:$/;"	l
close	cat.asm	/^close:$/;"	l
close	echo.asm	/^close:$/;"	l
close	forktest.asm	/^close:$/;"	l
close	grep.asm	/^close:$/;"	l
close	grind.asm	/^close:$/;"	l
close	init.asm	/^close:$/;"	l
close	kill.asm	/^close:$/;"	l
close	ln.asm	/^close:$/;"	l
close	ls.asm	/^close:$/;"	l
close	mkdir.asm	/^close:$/;"	l
close	rm.asm	/^close:$/;"	l
close	sh.asm	/^close:$/;"	l
close	stressfs.asm	/^close:$/;"	l
close	usertests.asm	/^close:$/;"	l
close	usys.S	/^close:$/;"	l
close	wc.asm	/^close:$/;"	l
close	zombie.asm	/^close:$/;"	l
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	sh.c	/^struct cmd {$/;"	s	file:
concreate	usertests.c	/^concreate(char *s)$/;"	f
concur	symlinktest.c	/^concur(void)$/;"	f	file:
continuous	usertests.asm	/^    continuous = 1;$/;"	d
continuous	usertests.asm	/^    continuous = 2;$/;"	d
copyin	usertests.c	/^copyin(char *s)$/;"	f
copyinstr1	usertests.c	/^copyinstr1(char *s)$/;"	f
copyinstr2	usertests.c	/^copyinstr2(char *s)$/;"	f
copyinstr3	usertests.c	/^copyinstr3(char *s)$/;"	f
copyout	usertests.c	/^copyout(char *s)$/;"	f
countfree	usertests.c	/^countfree()$/;"	f
createdelete	usertests.c	/^createdelete(char *s)$/;"	f
createtest	usertests.c	/^createtest(char *s)$/;"	f
d0	cat.asm	/^  d0:	8526                	mv	a0,s1$/;"	l
d0	echo.asm	/^  d0:	0800                	addi	s0,sp,16$/;"	l
d0	forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	grind.asm	/^      d0:	00001097          	auipc	ra,0x1$/;"	l
d0	kill.asm	/^  d0:	8082                	ret$/;"	l
d0	ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	ls.asm	/^  d0:	23513c23          	sd	s5,568(sp)$/;"	l
d0	mkdir.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	rm.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	sh.asm	/^      d0:	97ba                	add	a5,a5,a4$/;"	l
d0	stressfs.asm	/^  d0:	2ec080e7          	jalr	748(ra) # 3b8 <open>$/;"	l
d0	wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d0	zombie.asm	/^  d0:	00054783          	lbu	a5,0(a0)$/;"	l
d00	grind.asm	/^     d00:	4625                	li	a2,9$/;"	l
d00	sh.asm	/^     d00:	fd06879b          	addiw	a5,a3,-48$/;"	l
d00	usertests.asm	/^     d00:	3e450513          	addi	a0,a0,996 # 60e0 <malloc+0x6a6>$/;"	l
d02	grind.asm	/^     d02:	02f66863          	bltu	a2,a5,d32 <atoi+0x44>$/;"	l
d04	sh.asm	/^     d04:	0ff7f793          	zext.b	a5,a5$/;"	l
d04	usertests.asm	/^     d04:	00005097          	auipc	ra,0x5$/;"	l
d06	grind.asm	/^     d06:	872a                	mv	a4,a0$/;"	l
d08	grind.asm	/^     d08:	4501                	li	a0,0$/;"	l
d08	sh.asm	/^     d08:	fef671e3          	bgeu	a2,a5,cea <atoi+0x1c>$/;"	l
d08	usertests.asm	/^     d08:	c7e080e7          	jalr	-898(ra) # 5982 <printf>$/;"	l
d0a	grind.asm	/^     d0a:	0705                	addi	a4,a4,1$/;"	l
d0c	grind.asm	/^     d0c:	0025179b          	slliw	a5,a0,0x2$/;"	l
d0c	sh.asm	/^     d0c:	6422                	ld	s0,8(sp)$/;"	l
d0c	usertests.asm	/^     d0c:	4505                	li	a0,1$/;"	l
d0e	sh.asm	/^     d0e:	0141                	addi	sp,sp,16$/;"	l
d0e	usertests.asm	/^     d0e:	00005097          	auipc	ra,0x5$/;"	l
d10	grind.asm	/^     d10:	9fa9                	addw	a5,a5,a0$/;"	l
d10	sh.asm	/^     d10:	8082                	ret$/;"	l
d12	grind.asm	/^     d12:	0017979b          	slliw	a5,a5,0x1$/;"	l
d12	sh.asm	/^     d12:	4501                	li	a0,0$/;"	l
d12	usertests.asm	/^     d12:	8fa080e7          	jalr	-1798(ra) # 5608 <exit>$/;"	l
d14	sh.asm	/^     d14:	bfe5                	j	d0c <atoi+0x3e>$/;"	l
d16	grind.asm	/^     d16:	9fb5                	addw	a5,a5,a3$/;"	l
d16	sh.asm	/^     d16:	1141                	addi	sp,sp,-16$/;"	l
d16	usertests.asm	/^     d16:	1101                	addi	sp,sp,-32$/;"	l
d18	grind.asm	/^     d18:	fd07851b          	addiw	a0,a5,-48$/;"	l
d18	sh.asm	/^     d18:	e422                	sd	s0,8(sp)$/;"	l
d18	usertests.asm	/^     d18:	ec06                	sd	ra,24(sp)$/;"	l
d1a	sh.asm	/^     d1a:	0800                	addi	s0,sp,16$/;"	l
d1a	usertests.asm	/^     d1a:	e822                	sd	s0,16(sp)$/;"	l
d1c	grind.asm	/^     d1c:	00074683          	lbu	a3,0(a4)$/;"	l
d1c	sh.asm	/^     d1c:	02b57463          	bgeu	a0,a1,d44 <memmove+0x2e>$/;"	l
d1c	usertests.asm	/^     d1c:	e426                	sd	s1,8(sp)$/;"	l
d1e	usertests.asm	/^     d1e:	e04a                	sd	s2,0(sp)$/;"	l
d2	bigfile.asm	/^  d2:	34c080e7          	jalr	844(ra) # 41a <close>$/;"	l
d2	cat.asm	/^  d2:	00000097          	auipc	ra,0x0$/;"	l
d2	echo.asm	/^  d2:	00054783          	lbu	a5,0(a0)$/;"	l
d2	grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	init.asm	/^  d2:	7ea50513          	addi	a0,a0,2026 # 8b8 <malloc+0x122>$/;"	l
d2	kill.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	mkdir.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	rm.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	sh.asm	/^      d2:	8782                	jr	a5$/;"	l
d2	usertests.asm	/^      d2:	57a080e7          	jalr	1402(ra) # 5648 <open>$/;"	l
d2	wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d20	grind.asm	/^     d20:	fd06879b          	addiw	a5,a3,-48$/;"	l
d20	sh.asm	/^     d20:	00c05f63          	blez	a2,d3e <memmove+0x28>$/;"	l
d20	usertests.asm	/^     d20:	1000                	addi	s0,sp,32$/;"	l
d22	usertests.asm	/^     d22:	892a                	mv	s2,a0$/;"	l
d24	grind.asm	/^     d24:	0ff7f793          	zext.b	a5,a5$/;"	l
d24	sh.asm	/^     d24:	1602                	slli	a2,a2,0x20$/;"	l
d24	usertests.asm	/^     d24:	00005517          	auipc	a0,0x5$/;"	l
d26	sh.asm	/^     d26:	9201                	srli	a2,a2,0x20$/;"	l
d28	grind.asm	/^     d28:	fef671e3          	bgeu	a2,a5,d0a <atoi+0x1c>$/;"	l
d28	sh.asm	/^     d28:	00c507b3          	add	a5,a0,a2$/;"	l
d28	usertests.asm	/^     d28:	3dc50513          	addi	a0,a0,988 # 6100 <malloc+0x6c6>$/;"	l
d2c	grind.asm	/^     d2c:	6422                	ld	s0,8(sp)$/;"	l
d2c	sh.asm	/^     d2c:	872a                	mv	a4,a0$/;"	l
d2c	usertests.asm	/^     d2c:	00005097          	auipc	ra,0x5$/;"	l
d2e	grind.asm	/^     d2e:	0141                	addi	sp,sp,16$/;"	l
d2e	sh.asm	/^     d2e:	0585                	addi	a1,a1,1$/;"	l
d30	grind.asm	/^     d30:	8082                	ret$/;"	l
d30	sh.asm	/^     d30:	0705                	addi	a4,a4,1$/;"	l
d30	usertests.asm	/^     d30:	92c080e7          	jalr	-1748(ra) # 5658 <unlink>$/;"	l
d32	grind.asm	/^     d32:	4501                	li	a0,0$/;"	l
d32	sh.asm	/^     d32:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d34	grind.asm	/^     d34:	bfe5                	j	d2c <atoi+0x3e>$/;"	l
d34	usertests.asm	/^     d34:	00005517          	auipc	a0,0x5$/;"	l
d36	grind.asm	/^     d36:	1141                	addi	sp,sp,-16$/;"	l
d36	sh.asm	/^     d36:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d38	grind.asm	/^     d38:	e422                	sd	s0,8(sp)$/;"	l
d38	usertests.asm	/^     d38:	3d450513          	addi	a0,a0,980 # 6108 <malloc+0x6ce>$/;"	l
d3a	grind.asm	/^     d3a:	0800                	addi	s0,sp,16$/;"	l
d3a	sh.asm	/^     d3a:	fee79ae3          	bne	a5,a4,d2e <memmove+0x18>$/;"	l
d3c	grind.asm	/^     d3c:	02b57463          	bgeu	a0,a1,d64 <memmove+0x2e>$/;"	l
d3c	usertests.asm	/^     d3c:	00005097          	auipc	ra,0x5$/;"	l
d3e	sh.asm	/^     d3e:	6422                	ld	s0,8(sp)$/;"	l
d4	forktest.asm	/^  d4:	39050513          	addi	a0,a0,912 # 460 <uptime+0x3e>$/;"	l
d4	grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	grind.asm	/^      d4:	d18080e7          	jalr	-744(ra) # de8 <exit>$/;"	l
d4	kill.asm	/^  d4:	bfe5                	j	cc <strlen+0x20>$/;"	l
d4	ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	ls.asm	/^  d4:	1c80                	addi	s0,sp,624$/;"	l
d4	mkdir.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	rm.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	sh.asm	/^      d4:	4505                	li	a0,1$/;"	l
d4	stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	zombie.asm	/^  d4:	fbfd                	bnez	a5,ca <strchr+0xc>$/;"	l
d40	grind.asm	/^     d40:	00c05f63          	blez	a2,d5e <memmove+0x28>$/;"	l
d40	sh.asm	/^     d40:	0141                	addi	sp,sp,16$/;"	l
d40	usertests.asm	/^     d40:	91c080e7          	jalr	-1764(ra) # 5658 <unlink>$/;"	l
d42	sh.asm	/^     d42:	8082                	ret$/;"	l
d44	grind.asm	/^     d44:	1602                	slli	a2,a2,0x20$/;"	l
d44	sh.asm	/^     d44:	00c50733          	add	a4,a0,a2$/;"	l
d44	usertests.asm	/^     d44:	20200593          	li	a1,514$/;"	l
d46	grind.asm	/^     d46:	9201                	srli	a2,a2,0x20$/;"	l
d48	grind.asm	/^     d48:	00c507b3          	add	a5,a0,a2$/;"	l
d48	sh.asm	/^     d48:	95b2                	add	a1,a1,a2$/;"	l
d48	usertests.asm	/^     d48:	00005517          	auipc	a0,0x5$/;"	l
d4a	sh.asm	/^     d4a:	fec05ae3          	blez	a2,d3e <memmove+0x28>$/;"	l
d4c	grind.asm	/^     d4c:	872a                	mv	a4,a0$/;"	l
d4c	usertests.asm	/^     d4c:	3b850513          	addi	a0,a0,952 # 6100 <malloc+0x6c6>$/;"	l
d4e	grind.asm	/^     d4e:	0585                	addi	a1,a1,1$/;"	l
d4e	sh.asm	/^     d4e:	fff6079b          	addiw	a5,a2,-1$/;"	l
d50	grind.asm	/^     d50:	0705                	addi	a4,a4,1$/;"	l
d50	usertests.asm	/^     d50:	00005097          	auipc	ra,0x5$/;"	l
d52	grind.asm	/^     d52:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d52	sh.asm	/^     d52:	1782                	slli	a5,a5,0x20$/;"	l
d54	sh.asm	/^     d54:	9381                	srli	a5,a5,0x20$/;"	l
d54	usertests.asm	/^     d54:	8f8080e7          	jalr	-1800(ra) # 5648 <open>$/;"	l
d56	grind.asm	/^     d56:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d56	sh.asm	/^     d56:	fff7c793          	not	a5,a5$/;"	l
d58	usertests.asm	/^     d58:	10054763          	bltz	a0,e66 <linktest+0x150>$/;"	l
d5a	grind.asm	/^     d5a:	fee79ae3          	bne	a5,a4,d4e <memmove+0x18>$/;"	l
d5a	sh.asm	/^     d5a:	97ba                	add	a5,a5,a4$/;"	l
d5c	sh.asm	/^     d5c:	15fd                	addi	a1,a1,-1$/;"	l
d5c	usertests.asm	/^     d5c:	84aa                	mv	s1,a0$/;"	l
d5e	grind.asm	/^     d5e:	6422                	ld	s0,8(sp)$/;"	l
d5e	sh.asm	/^     d5e:	177d                	addi	a4,a4,-1$/;"	l
d5e	usertests.asm	/^     d5e:	4615                	li	a2,5$/;"	l
d6	bigfile.asm	/^  d6:	4581                	li	a1,0$/;"	l
d6	cat.asm	/^  d6:	2e0080e7          	jalr	736(ra) # 3b2 <close>$/;"	l
d6	echo.asm	/^  d6:	cf91                	beqz	a5,f2 <strlen+0x26>$/;"	l
d6	grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	init.asm	/^  d6:	00000097          	auipc	ra,0x0$/;"	l
d6	kill.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	ls.asm	/^  d6:	892a                	mv	s2,a0$/;"	l
d6	sh.asm	/^      d6:	00001097          	auipc	ra,0x1$/;"	l
d6	stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	usertests.asm	/^      d6:	02055563          	bgez	a0,100 <opentest+0x66>$/;"	l
d6	wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d6	zombie.asm	/^  d6:	4501                	li	a0,0$/;"	l
d60	grind.asm	/^     d60:	0141                	addi	sp,sp,16$/;"	l
d60	sh.asm	/^     d60:	0005c683          	lbu	a3,0(a1)$/;"	l
d60	usertests.asm	/^     d60:	00005597          	auipc	a1,0x5$/;"	l
d62	grind.asm	/^     d62:	8082                	ret$/;"	l
d64	grind.asm	/^     d64:	00c50733          	add	a4,a0,a2$/;"	l
d64	sh.asm	/^     d64:	00d70023          	sb	a3,0(a4)$/;"	l
d64	usertests.asm	/^     d64:	2f058593          	addi	a1,a1,752 # 6050 <malloc+0x616>$/;"	l
d68	grind.asm	/^     d68:	95b2                	add	a1,a1,a2$/;"	l
d68	sh.asm	/^     d68:	fee79ae3          	bne	a5,a4,d5c <memmove+0x46>$/;"	l
d68	usertests.asm	/^     d68:	00005097          	auipc	ra,0x5$/;"	l
d6a	grind.asm	/^     d6a:	fec05ae3          	blez	a2,d5e <memmove+0x28>$/;"	l
d6c	sh.asm	/^     d6c:	bfc9                	j	d3e <memmove+0x28>$/;"	l
d6c	usertests.asm	/^     d6c:	8c0080e7          	jalr	-1856(ra) # 5628 <write>$/;"	l
d6e	grind.asm	/^     d6e:	fff6079b          	addiw	a5,a2,-1$/;"	l
d6e	sh.asm	/^     d6e:	1141                	addi	sp,sp,-16$/;"	l
d70	sh.asm	/^     d70:	e422                	sd	s0,8(sp)$/;"	l
d70	usertests.asm	/^     d70:	4795                	li	a5,5$/;"	l
d72	grind.asm	/^     d72:	1782                	slli	a5,a5,0x20$/;"	l
d72	sh.asm	/^     d72:	0800                	addi	s0,sp,16$/;"	l
d72	usertests.asm	/^     d72:	10f51863          	bne	a0,a5,e82 <linktest+0x16c>$/;"	l
d74	grind.asm	/^     d74:	9381                	srli	a5,a5,0x20$/;"	l
d74	sh.asm	/^     d74:	ca05                	beqz	a2,da4 <memcmp+0x36>$/;"	l
d76	grind.asm	/^     d76:	fff7c793          	not	a5,a5$/;"	l
d76	sh.asm	/^     d76:	fff6069b          	addiw	a3,a2,-1$/;"	l
d76	usertests.asm	/^     d76:	8526                	mv	a0,s1$/;"	l
d78	usertests.asm	/^     d78:	00005097          	auipc	ra,0x5$/;"	l
d7a	grind.asm	/^     d7a:	97ba                	add	a5,a5,a4$/;"	l
d7a	sh.asm	/^     d7a:	1682                	slli	a3,a3,0x20$/;"	l
d7c	grind.asm	/^     d7c:	15fd                	addi	a1,a1,-1$/;"	l
d7c	sh.asm	/^     d7c:	9281                	srli	a3,a3,0x20$/;"	l
d7c	usertests.asm	/^     d7c:	8b8080e7          	jalr	-1864(ra) # 5630 <close>$/;"	l
d7e	grind.asm	/^     d7e:	177d                	addi	a4,a4,-1$/;"	l
d7e	sh.asm	/^     d7e:	0685                	addi	a3,a3,1$/;"	l
d8	bigfile.asm	/^  d8:	00001517          	auipc	a0,0x1$/;"	l
d8	echo.asm	/^  d8:	0505                	addi	a0,a0,1$/;"	l
d8	forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	grind.asm	/^      d8:	00001517          	auipc	a0,0x1$/;"	l
d8	kill.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	ln.asm	/^  d8:	ca19                	beqz	a2,ee <memset+0x1c>$/;"	l
d8	ls.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	mkdir.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	rm.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d8	zombie.asm	/^  d8:	6422                	ld	s0,8(sp)$/;"	l
d80	grind.asm	/^     d80:	0005c683          	lbu	a3,0(a1)$/;"	l
d80	sh.asm	/^     d80:	96aa                	add	a3,a3,a0$/;"	l
d80	usertests.asm	/^     d80:	00005597          	auipc	a1,0x5$/;"	l
d82	sh.asm	/^     d82:	00054783          	lbu	a5,0(a0)$/;"	l
d84	grind.asm	/^     d84:	00d70023          	sb	a3,0(a4)$/;"	l
d84	usertests.asm	/^     d84:	38858593          	addi	a1,a1,904 # 6108 <malloc+0x6ce>$/;"	l
d86	sh.asm	/^     d86:	0005c703          	lbu	a4,0(a1)$/;"	l
d88	grind.asm	/^     d88:	fee79ae3          	bne	a5,a4,d7c <memmove+0x46>$/;"	l
d88	usertests.asm	/^     d88:	00005517          	auipc	a0,0x5$/;"	l
d8a	sh.asm	/^     d8a:	00e79863          	bne	a5,a4,d9a <memcmp+0x2c>$/;"	l
d8c	grind.asm	/^     d8c:	bfc9                	j	d5e <memmove+0x28>$/;"	l
d8c	usertests.asm	/^     d8c:	37850513          	addi	a0,a0,888 # 6100 <malloc+0x6c6>$/;"	l
d8e	grind.asm	/^     d8e:	1141                	addi	sp,sp,-16$/;"	l
d8e	sh.asm	/^     d8e:	0505                	addi	a0,a0,1$/;"	l
d90	grind.asm	/^     d90:	e422                	sd	s0,8(sp)$/;"	l
d90	sh.asm	/^     d90:	0585                	addi	a1,a1,1$/;"	l
d90	usertests.asm	/^     d90:	00005097          	auipc	ra,0x5$/;"	l
d92	grind.asm	/^     d92:	0800                	addi	s0,sp,16$/;"	l
d92	sh.asm	/^     d92:	fed518e3          	bne	a0,a3,d82 <memcmp+0x14>$/;"	l
d94	grind.asm	/^     d94:	ca05                	beqz	a2,dc4 <memcmp+0x36>$/;"	l
d94	usertests.asm	/^     d94:	8d8080e7          	jalr	-1832(ra) # 5668 <link>$/;"	l
d96	grind.asm	/^     d96:	fff6069b          	addiw	a3,a2,-1$/;"	l
d96	sh.asm	/^     d96:	4501                	li	a0,0$/;"	l
d98	sh.asm	/^     d98:	a019                	j	d9e <memcmp+0x30>$/;"	l
d98	usertests.asm	/^     d98:	10054363          	bltz	a0,e9e <linktest+0x188>$/;"	l
d9a	grind.asm	/^     d9a:	1682                	slli	a3,a3,0x20$/;"	l
d9a	sh.asm	/^     d9a:	40e7853b          	subw	a0,a5,a4$/;"	l
d9c	grind.asm	/^     d9c:	9281                	srli	a3,a3,0x20$/;"	l
d9c	usertests.asm	/^     d9c:	00005517          	auipc	a0,0x5$/;"	l
d9e	grind.asm	/^     d9e:	0685                	addi	a3,a3,1$/;"	l
d9e	sh.asm	/^     d9e:	6422                	ld	s0,8(sp)$/;"	l
da	cat.asm	/^  da:	0921                	addi	s2,s2,8$/;"	l
da	echo.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	init.asm	/^  da:	2c6080e7          	jalr	710(ra) # 39c <exec>$/;"	l
da	kill.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	ls.asm	/^  da:	00000097          	auipc	ra,0x0$/;"	l
da	mkdir.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	rm.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	sh.asm	/^      da:	cf2080e7          	jalr	-782(ra) # dc8 <exit>$/;"	l
da	usertests.asm	/^      da:	60e2                	ld	ra,24(sp)$/;"	l
da	wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	zombie.asm	/^  da:	0141                	addi	sp,sp,16$/;"	l
da0	grind.asm	/^     da0:	96aa                	add	a3,a3,a0$/;"	l
da0	sh.asm	/^     da0:	0141                	addi	sp,sp,16$/;"	l
da0	usertests.asm	/^     da0:	36450513          	addi	a0,a0,868 # 6100 <malloc+0x6c6>$/;"	l
da2	grind.asm	/^     da2:	00054783          	lbu	a5,0(a0)$/;"	l
da2	sh.asm	/^     da2:	8082                	ret$/;"	l
da4	sh.asm	/^     da4:	4501                	li	a0,0$/;"	l
da4	usertests.asm	/^     da4:	00005097          	auipc	ra,0x5$/;"	l
da6	grind.asm	/^     da6:	0005c703          	lbu	a4,0(a1)$/;"	l
da6	sh.asm	/^     da6:	bfe5                	j	d9e <memcmp+0x30>$/;"	l
da8	sh.asm	/^     da8:	1141                	addi	sp,sp,-16$/;"	l
da8	usertests.asm	/^     da8:	8b4080e7          	jalr	-1868(ra) # 5658 <unlink>$/;"	l
daa	grind.asm	/^     daa:	00e79863          	bne	a5,a4,dba <memcmp+0x2c>$/;"	l
daa	sh.asm	/^     daa:	e406                	sd	ra,8(sp)$/;"	l
dac	sh.asm	/^     dac:	e022                	sd	s0,0(sp)$/;"	l
dac	usertests.asm	/^     dac:	4581                	li	a1,0$/;"	l
dae	grind.asm	/^     dae:	0505                	addi	a0,a0,1$/;"	l
dae	sh.asm	/^     dae:	0800                	addi	s0,sp,16$/;"	l
dae	usertests.asm	/^     dae:	00005517          	auipc	a0,0x5$/;"	l
db0	grind.asm	/^     db0:	0585                	addi	a1,a1,1$/;"	l
db0	sh.asm	/^     db0:	00000097          	auipc	ra,0x0$/;"	l
db2	grind.asm	/^     db2:	fed518e3          	bne	a0,a3,da2 <memcmp+0x14>$/;"	l
db2	usertests.asm	/^     db2:	35250513          	addi	a0,a0,850 # 6100 <malloc+0x6c6>$/;"	l
db4	sh.asm	/^     db4:	f66080e7          	jalr	-154(ra) # d16 <memmove>$/;"	l
db6	grind.asm	/^     db6:	4501                	li	a0,0$/;"	l
db6	usertests.asm	/^     db6:	00005097          	auipc	ra,0x5$/;"	l
db8	grind.asm	/^     db8:	a019                	j	dbe <memcmp+0x30>$/;"	l
db8	sh.asm	/^     db8:	60a2                	ld	ra,8(sp)$/;"	l
dba	grind.asm	/^     dba:	40e7853b          	subw	a0,a5,a4$/;"	l
dba	sh.asm	/^     dba:	6402                	ld	s0,0(sp)$/;"	l
dba	usertests.asm	/^     dba:	892080e7          	jalr	-1902(ra) # 5648 <open>$/;"	l
dbc	sh.asm	/^     dbc:	0141                	addi	sp,sp,16$/;"	l
dbe	grind.asm	/^     dbe:	6422                	ld	s0,8(sp)$/;"	l
dbe	sh.asm	/^     dbe:	8082                	ret$/;"	l
dbe	usertests.asm	/^     dbe:	0e055e63          	bgez	a0,eba <linktest+0x1a4>$/;"	l
dc	bigfile.asm	/^  dc:	83850513          	addi	a0,a0,-1992 # 910 <malloc+0xec>$/;"	l
dc	cat.asm	/^  dc:	fd391ce3          	bne	s2,s3,b4 <main+0x2a>$/;"	l
dc	echo.asm	/^  dc:	4685                	li	a3,1$/;"	l
dc	forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	grind.asm	/^      dc:	25050513          	addi	a0,a0,592 # 1328 <malloc+0x10e>$/;"	l
dc	kill.asm	/^  dc:	ca19                	beqz	a2,f2 <memset+0x1c>$/;"	l
dc	ln.asm	/^  dc:	1602                	slli	a2,a2,0x20$/;"	l
dc	stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	usertests.asm	/^      dc:	6442                	ld	s0,16(sp)$/;"	l
dc	wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	zombie.asm	/^  dc:	8082                	ret$/;"	l
dc0	grind.asm	/^     dc0:	0141                	addi	sp,sp,16$/;"	l
dc0	sh.asm	/^     dc0:	4885                	li	a7,1$/;"	l
dc2	grind.asm	/^     dc2:	8082                	ret$/;"	l
dc2	sh.asm	/^     dc2:	00000073          	ecall$/;"	l
dc2	usertests.asm	/^     dc2:	4581                	li	a1,0$/;"	l
dc4	grind.asm	/^     dc4:	4501                	li	a0,0$/;"	l
dc4	usertests.asm	/^     dc4:	00005517          	auipc	a0,0x5$/;"	l
dc6	grind.asm	/^     dc6:	bfe5                	j	dbe <memcmp+0x30>$/;"	l
dc6	sh.asm	/^     dc6:	8082                	ret$/;"	l
dc8	grind.asm	/^     dc8:	1141                	addi	sp,sp,-16$/;"	l
dc8	sh.asm	/^     dc8:	4889                	li	a7,2$/;"	l
dc8	usertests.asm	/^     dc8:	34450513          	addi	a0,a0,836 # 6108 <malloc+0x6ce>$/;"	l
dca	grind.asm	/^     dca:	e406                	sd	ra,8(sp)$/;"	l
dca	sh.asm	/^     dca:	00000073          	ecall$/;"	l
dcc	grind.asm	/^     dcc:	e022                	sd	s0,0(sp)$/;"	l
dcc	usertests.asm	/^     dcc:	00005097          	auipc	ra,0x5$/;"	l
dce	grind.asm	/^     dce:	0800                	addi	s0,sp,16$/;"	l
dce	sh.asm	/^     dce:	8082                	ret$/;"	l
dd0	grind.asm	/^     dd0:	00000097          	auipc	ra,0x0$/;"	l
dd0	sh.asm	/^     dd0:	488d                	li	a7,3$/;"	l
dd0	usertests.asm	/^     dd0:	87c080e7          	jalr	-1924(ra) # 5648 <open>$/;"	l
dd2	sh.asm	/^     dd2:	00000073          	ecall$/;"	l
dd4	grind.asm	/^     dd4:	f66080e7          	jalr	-154(ra) # d36 <memmove>$/;"	l
dd4	usertests.asm	/^     dd4:	84aa                	mv	s1,a0$/;"	l
dd6	sh.asm	/^     dd6:	8082                	ret$/;"	l
dd6	usertests.asm	/^     dd6:	10054063          	bltz	a0,ed6 <linktest+0x1c0>$/;"	l
dd8	grind.asm	/^     dd8:	60a2                	ld	ra,8(sp)$/;"	l
dd8	sh.asm	/^     dd8:	4891                	li	a7,4$/;"	l
dda	grind.asm	/^     dda:	6402                	ld	s0,0(sp)$/;"	l
dda	sh.asm	/^     dda:	00000073          	ecall$/;"	l
dda	usertests.asm	/^     dda:	660d                	lui	a2,0x3$/;"	l
ddc	grind.asm	/^     ddc:	0141                	addi	sp,sp,16$/;"	l
ddc	usertests.asm	/^     ddc:	0000b597          	auipc	a1,0xb$/;"	l
dde	grind.asm	/^     dde:	8082                	ret$/;"	l
dde	sh.asm	/^     dde:	8082                	ret$/;"	l
de	echo.asm	/^  de:	9e89                	subw	a3,a3,a0$/;"	l
de	init.asm	/^  de:	00000517          	auipc	a0,0x0$/;"	l
de	kill.asm	/^  de:	87aa                	mv	a5,a0$/;"	l
de	ln.asm	/^  de:	9201                	srli	a2,a2,0x20$/;"	l
de	ls.asm	/^  de:	4a4080e7          	jalr	1188(ra) # 57e <open>$/;"	l
de	mkdir.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	rm.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	sh.asm	/^      de:	00001517          	auipc	a0,0x1$/;"	l
de	usertests.asm	/^      de:	64a2                	ld	s1,8(sp)$/;"	l
de	wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de	zombie.asm	/^  de:	4501                	li	a0,0$/;"	l
de0	grind.asm	/^     de0:	4885                	li	a7,1$/;"	l
de0	sh.asm	/^     de0:	4895                	li	a7,5$/;"	l
de0	usertests.asm	/^     de0:	d0c58593          	addi	a1,a1,-756 # bae8 <buf>$/;"	l
de2	grind.asm	/^     de2:	00000073          	ecall$/;"	l
de2	sh.asm	/^     de2:	00000073          	ecall$/;"	l
de4	usertests.asm	/^     de4:	00005097          	auipc	ra,0x5$/;"	l
de6	grind.asm	/^     de6:	8082                	ret$/;"	l
de6	sh.asm	/^     de6:	8082                	ret$/;"	l
de8	grind.asm	/^     de8:	4889                	li	a7,2$/;"	l
de8	sh.asm	/^     de8:	48c1                	li	a7,16$/;"	l
de8	usertests.asm	/^     de8:	83c080e7          	jalr	-1988(ra) # 5620 <read>$/;"	l
dea	grind.asm	/^     dea:	00000073          	ecall$/;"	l
dea	sh.asm	/^     dea:	00000073          	ecall$/;"	l
dec	usertests.asm	/^     dec:	4795                	li	a5,5$/;"	l
dee	grind.asm	/^     dee:	8082                	ret$/;"	l
dee	sh.asm	/^     dee:	8082                	ret$/;"	l
dee	usertests.asm	/^     dee:	10f51263          	bne	a0,a5,ef2 <linktest+0x1dc>$/;"	l
df0	grind.asm	/^     df0:	488d                	li	a7,3$/;"	l
df0	sh.asm	/^     df0:	48d5                	li	a7,21$/;"	l
df2	grind.asm	/^     df2:	00000073          	ecall$/;"	l
df2	sh.asm	/^     df2:	00000073          	ecall$/;"	l
df2	usertests.asm	/^     df2:	8526                	mv	a0,s1$/;"	l
df4	usertests.asm	/^     df4:	00005097          	auipc	ra,0x5$/;"	l
df6	grind.asm	/^     df6:	8082                	ret$/;"	l
df6	sh.asm	/^     df6:	8082                	ret$/;"	l
df8	grind.asm	/^     df8:	4891                	li	a7,4$/;"	l
df8	sh.asm	/^     df8:	4899                	li	a7,6$/;"	l
df8	usertests.asm	/^     df8:	83c080e7          	jalr	-1988(ra) # 5630 <close>$/;"	l
dfa	grind.asm	/^     dfa:	00000073          	ecall$/;"	l
dfa	sh.asm	/^     dfa:	00000073          	ecall$/;"	l
dfc	usertests.asm	/^     dfc:	00005597          	auipc	a1,0x5$/;"	l
dfe	grind.asm	/^     dfe:	8082                	ret$/;"	l
dfe	sh.asm	/^     dfe:	8082                	ret$/;"	l
digits	printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dirfile	usertests.c	/^dirfile(char *s)$/;"	f
dirtest	usertests.c	/^void dirtest(char *s)$/;"	f
do_rand	grind.c	/^do_rand(unsigned long *ctx)$/;"	f
dst	bigfile.asm	/^  dst = vdst;$/;"	d
dst	cat.asm	/^  dst = vdst;$/;"	d
dst	echo.asm	/^  dst = vdst;$/;"	d
dst	forktest.asm	/^  dst = vdst;$/;"	d
dst	grep.asm	/^  dst = vdst;$/;"	d
dst	grind.asm	/^  dst = vdst;$/;"	d
dst	init.asm	/^  dst = vdst;$/;"	d
dst	kill.asm	/^  dst = vdst;$/;"	d
dst	ln.asm	/^  dst = vdst;$/;"	d
dst	ls.asm	/^  dst = vdst;$/;"	d
dst	mkdir.asm	/^  dst = vdst;$/;"	d
dst	rm.asm	/^  dst = vdst;$/;"	d
dst	sh.asm	/^  dst = vdst;$/;"	d
dst	stressfs.asm	/^  dst = vdst;$/;"	d
dst	usertests.asm	/^  dst = vdst;$/;"	d
dst	wc.asm	/^  dst = vdst;$/;"	d
dst	zombie.asm	/^  dst = vdst;$/;"	d
dup	bigfile.asm	/^dup:$/;"	l
dup	cat.asm	/^dup:$/;"	l
dup	echo.asm	/^dup:$/;"	l
dup	forktest.asm	/^dup:$/;"	l
dup	grep.asm	/^dup:$/;"	l
dup	grind.asm	/^dup:$/;"	l
dup	init.asm	/^dup:$/;"	l
dup	kill.asm	/^dup:$/;"	l
dup	ln.asm	/^dup:$/;"	l
dup	ls.asm	/^dup:$/;"	l
dup	mkdir.asm	/^dup:$/;"	l
dup	rm.asm	/^dup:$/;"	l
dup	sh.asm	/^dup:$/;"	l
dup	stressfs.asm	/^dup:$/;"	l
dup	usertests.asm	/^dup:$/;"	l
dup	usys.S	/^dup:$/;"	l
dup	wc.asm	/^dup:$/;"	l
dup	zombie.asm	/^dup:$/;"	l
e	cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	usertests.asm	/^       e:	057e                	slli	a0,a0,0x1f$/;"	l
e	wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	bigfile.asm	/^  e0:	00000097          	auipc	ra,0x0$/;"	l
e0	cat.asm	/^  e0:	4501                	li	a0,0$/;"	l
e0	echo.asm	/^  e0:	00f6853b          	addw	a0,a3,a5$/;"	l
e0	forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	grind.asm	/^      e0:	00001097          	auipc	ra,0x1$/;"	l
e0	kill.asm	/^  e0:	1602                	slli	a2,a2,0x20$/;"	l
e0	ln.asm	/^  e0:	00a60733          	add	a4,a2,a0$/;"	l
e0	mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	usertests.asm	/^      e0:	6105                	addi	sp,sp,32$/;"	l
e0	wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	zombie.asm	/^  e0:	bfe5                	j	d8 <strchr+0x1a>$/;"	l
e00	grind.asm	/^     e00:	4895                	li	a7,5$/;"	l
e00	sh.asm	/^     e00:	489d                	li	a7,7$/;"	l
e00	usertests.asm	/^     e00:	30c58593          	addi	a1,a1,780 # 6108 <malloc+0x6ce>$/;"	l
e02	grind.asm	/^     e02:	00000073          	ecall$/;"	l
e02	sh.asm	/^     e02:	00000073          	ecall$/;"	l
e04	usertests.asm	/^     e04:	852e                	mv	a0,a1$/;"	l
e06	grind.asm	/^     e06:	8082                	ret$/;"	l
e06	sh.asm	/^     e06:	8082                	ret$/;"	l
e06	usertests.asm	/^     e06:	00005097          	auipc	ra,0x5$/;"	l
e08	grind.asm	/^     e08:	48c1                	li	a7,16$/;"	l
e08	sh.asm	/^     e08:	48bd                	li	a7,15$/;"	l
e0a	grind.asm	/^     e0a:	00000073          	ecall$/;"	l
e0a	sh.asm	/^     e0a:	00000073          	ecall$/;"	l
e0a	usertests.asm	/^     e0a:	862080e7          	jalr	-1950(ra) # 5668 <link>$/;"	l
e0e	grind.asm	/^     e0e:	8082                	ret$/;"	l
e0e	sh.asm	/^     e0e:	8082                	ret$/;"	l
e0e	usertests.asm	/^     e0e:	10055063          	bgez	a0,f0e <linktest+0x1f8>$/;"	l
e10	grind.asm	/^     e10:	48d5                	li	a7,21$/;"	l
e10	sh.asm	/^     e10:	48c5                	li	a7,17$/;"	l
e12	grind.asm	/^     e12:	00000073          	ecall$/;"	l
e12	sh.asm	/^     e12:	00000073          	ecall$/;"	l
e12	usertests.asm	/^     e12:	00005517          	auipc	a0,0x5$/;"	l
e16	grind.asm	/^     e16:	8082                	ret$/;"	l
e16	sh.asm	/^     e16:	8082                	ret$/;"	l
e16	usertests.asm	/^     e16:	2f650513          	addi	a0,a0,758 # 6108 <malloc+0x6ce>$/;"	l
e18	grind.asm	/^     e18:	4899                	li	a7,6$/;"	l
e18	sh.asm	/^     e18:	48c9                	li	a7,18$/;"	l
e1a	grind.asm	/^     e1a:	00000073          	ecall$/;"	l
e1a	sh.asm	/^     e1a:	00000073          	ecall$/;"	l
e1a	usertests.asm	/^     e1a:	00005097          	auipc	ra,0x5$/;"	l
e1e	grind.asm	/^     e1e:	8082                	ret$/;"	l
e1e	sh.asm	/^     e1e:	8082                	ret$/;"	l
e1e	usertests.asm	/^     e1e:	83e080e7          	jalr	-1986(ra) # 5658 <unlink>$/;"	l
e2	cat.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	init.asm	/^  e2:	7e250513          	addi	a0,a0,2018 # 8c0 <malloc+0x12a>$/;"	l
e2	kill.asm	/^  e2:	9201                	srli	a2,a2,0x20$/;"	l
e2	ls.asm	/^  e2:	06054f63          	bltz	a0,160 <ls+0xac>$/;"	l
e2	mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	sh.asm	/^      e2:	21a50513          	addi	a0,a0,538 # 12f8 <malloc+0xfe>$/;"	l
e2	stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	usertests.asm	/^      e2:	8082                	ret$/;"	l
e2	wc.asm	/^  e2:	8082                	ret$/;"	l
e2	zombie.asm	/^  e2:	711d                	addi	sp,sp,-96$/;"	l
e20	grind.asm	/^     e20:	489d                	li	a7,7$/;"	l
e20	sh.asm	/^     e20:	48a1                	li	a7,8$/;"	l
e22	grind.asm	/^     e22:	00000073          	ecall$/;"	l
e22	sh.asm	/^     e22:	00000073          	ecall$/;"	l
e22	usertests.asm	/^     e22:	00005597          	auipc	a1,0x5$/;"	l
e26	grind.asm	/^     e26:	8082                	ret$/;"	l
e26	sh.asm	/^     e26:	8082                	ret$/;"	l
e26	usertests.asm	/^     e26:	2de58593          	addi	a1,a1,734 # 6100 <malloc+0x6c6>$/;"	l
e28	grind.asm	/^     e28:	48bd                	li	a7,15$/;"	l
e28	sh.asm	/^     e28:	48cd                	li	a7,19$/;"	l
e2a	grind.asm	/^     e2a:	00000073          	ecall$/;"	l
e2a	sh.asm	/^     e2a:	00000073          	ecall$/;"	l
e2a	usertests.asm	/^     e2a:	00005517          	auipc	a0,0x5$/;"	l
e2e	grind.asm	/^     e2e:	8082                	ret$/;"	l
e2e	sh.asm	/^     e2e:	8082                	ret$/;"	l
e2e	usertests.asm	/^     e2e:	2de50513          	addi	a0,a0,734 # 6108 <malloc+0x6ce>$/;"	l
e30	grind.asm	/^     e30:	48c5                	li	a7,17$/;"	l
e30	sh.asm	/^     e30:	48d1                	li	a7,20$/;"	l
e32	grind.asm	/^     e32:	00000073          	ecall$/;"	l
e32	sh.asm	/^     e32:	00000073          	ecall$/;"	l
e32	usertests.asm	/^     e32:	00005097          	auipc	ra,0x5$/;"	l
e36	grind.asm	/^     e36:	8082                	ret$/;"	l
e36	sh.asm	/^     e36:	8082                	ret$/;"	l
e36	usertests.asm	/^     e36:	836080e7          	jalr	-1994(ra) # 5668 <link>$/;"	l
e38	grind.asm	/^     e38:	48c9                	li	a7,18$/;"	l
e38	sh.asm	/^     e38:	48a5                	li	a7,9$/;"	l
e3a	grind.asm	/^     e3a:	00000073          	ecall$/;"	l
e3a	sh.asm	/^     e3a:	00000073          	ecall$/;"	l
e3a	usertests.asm	/^     e3a:	0e055863          	bgez	a0,f2a <linktest+0x214>$/;"	l
e3e	grind.asm	/^     e3e:	8082                	ret$/;"	l
e3e	sh.asm	/^     e3e:	8082                	ret$/;"	l
e3e	usertests.asm	/^     e3e:	00005597          	auipc	a1,0x5$/;"	l
e4	bigfile.asm	/^  e4:	352080e7          	jalr	850(ra) # 432 <open>$/;"	l
e4	echo.asm	/^  e4:	0785                	addi	a5,a5,1$/;"	l
e4	grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	grind.asm	/^      e4:	d78080e7          	jalr	-648(ra) # e58 <chdir>$/;"	l
e4	kill.asm	/^  e4:	00a60733          	add	a4,a2,a0$/;"	l
e4	ln.asm	/^  e4:	00b78023          	sb	a1,0(a5)$/;"	l
e4	mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	rm.asm	/^  e4:	8082                	ret$/;"	l
e4	usertests.asm	/^      e4:	85a6                	mv	a1,s1$/;"	l
e4	wc.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	zombie.asm	/^  e4:	ec86                	sd	ra,88(sp)$/;"	l
e40	grind.asm	/^     e40:	48a1                	li	a7,8$/;"	l
e40	sh.asm	/^     e40:	48a9                	li	a7,10$/;"	l
e42	grind.asm	/^     e42:	00000073          	ecall$/;"	l
e42	sh.asm	/^     e42:	00000073          	ecall$/;"	l
e42	usertests.asm	/^     e42:	2c258593          	addi	a1,a1,706 # 6100 <malloc+0x6c6>$/;"	l
e46	grind.asm	/^     e46:	8082                	ret$/;"	l
e46	sh.asm	/^     e46:	8082                	ret$/;"	l
e46	usertests.asm	/^     e46:	00005517          	auipc	a0,0x5$/;"	l
e48	grind.asm	/^     e48:	48cd                	li	a7,19$/;"	l
e48	sh.asm	/^     e48:	48ad                	li	a7,11$/;"	l
e4a	grind.asm	/^     e4a:	00000073          	ecall$/;"	l
e4a	sh.asm	/^     e4a:	00000073          	ecall$/;"	l
e4a	usertests.asm	/^     e4a:	3ca50513          	addi	a0,a0,970 # 6210 <malloc+0x7d6>$/;"	l
e4e	grind.asm	/^     e4e:	8082                	ret$/;"	l
e4e	sh.asm	/^     e4e:	8082                	ret$/;"	l
e4e	usertests.asm	/^     e4e:	00005097          	auipc	ra,0x5$/;"	l
e50	grind.asm	/^     e50:	48d1                	li	a7,20$/;"	l
e50	sh.asm	/^     e50:	48b1                	li	a7,12$/;"	l
e52	grind.asm	/^     e52:	00000073          	ecall$/;"	l
e52	sh.asm	/^     e52:	00000073          	ecall$/;"	l
e52	usertests.asm	/^     e52:	81a080e7          	jalr	-2022(ra) # 5668 <link>$/;"	l
e56	grind.asm	/^     e56:	8082                	ret$/;"	l
e56	sh.asm	/^     e56:	8082                	ret$/;"	l
e56	usertests.asm	/^     e56:	0e055863          	bgez	a0,f46 <linktest+0x230>$/;"	l
e58	grind.asm	/^     e58:	48a5                	li	a7,9$/;"	l
e58	sh.asm	/^     e58:	48b5                	li	a7,13$/;"	l
e5a	grind.asm	/^     e5a:	00000073          	ecall$/;"	l
e5a	sh.asm	/^     e5a:	00000073          	ecall$/;"	l
e5a	usertests.asm	/^     e5a:	60e2                	ld	ra,24(sp)$/;"	l
e5c	usertests.asm	/^     e5c:	6442                	ld	s0,16(sp)$/;"	l
e5e	grind.asm	/^     e5e:	8082                	ret$/;"	l
e5e	sh.asm	/^     e5e:	8082                	ret$/;"	l
e5e	usertests.asm	/^     e5e:	64a2                	ld	s1,8(sp)$/;"	l
e6	cat.asm	/^  e6:	2a8080e7          	jalr	680(ra) # 38a <exit>$/;"	l
e6	echo.asm	/^  e6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e6	forktest.asm	/^  e6:	2a8080e7          	jalr	680(ra) # 38a <exit>$/;"	l
e6	init.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	ls.asm	/^  e6:	84aa                	mv	s1,a0$/;"	l
e6	mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	sh.asm	/^      e6:	00000097          	auipc	ra,0x0$/;"	l
e6	stressfs.asm	/^  e6:	2ae080e7          	jalr	686(ra) # 390 <read>$/;"	l
e6	usertests.asm	/^      e6:	00006517          	auipc	a0,0x6$/;"	l
e6	zombie.asm	/^  e6:	e8a2                	sd	s0,80(sp)$/;"	l
e60	grind.asm	/^     e60:	48a9                	li	a7,10$/;"	l
e60	sh.asm	/^     e60:	48b9                	li	a7,14$/;"	l
e60	usertests.asm	/^     e60:	6902                	ld	s2,0(sp)$/;"	l
e62	grind.asm	/^     e62:	00000073          	ecall$/;"	l
e62	sh.asm	/^     e62:	00000073          	ecall$/;"	l
e62	usertests.asm	/^     e62:	6105                	addi	sp,sp,32$/;"	l
e64	usertests.asm	/^     e64:	8082                	ret$/;"	l
e66	grind.asm	/^     e66:	8082                	ret$/;"	l
e66	sh.asm	/^     e66:	8082                	ret$/;"	l
e66	usertests.asm	/^     e66:	85ca                	mv	a1,s2$/;"	l
e68	grind.asm	/^     e68:	48ad                	li	a7,11$/;"	l
e68	sh.asm	/^     e68:	1101                	addi	sp,sp,-32$/;"	l
e68	usertests.asm	/^     e68:	00005517          	auipc	a0,0x5$/;"	l
e6a	grind.asm	/^     e6a:	00000073          	ecall$/;"	l
e6a	sh.asm	/^     e6a:	ec06                	sd	ra,24(sp)$/;"	l
e6c	sh.asm	/^     e6c:	e822                	sd	s0,16(sp)$/;"	l
e6c	usertests.asm	/^     e6c:	2a850513          	addi	a0,a0,680 # 6110 <malloc+0x6d6>$/;"	l
e6e	grind.asm	/^     e6e:	8082                	ret$/;"	l
e6e	sh.asm	/^     e6e:	1000                	addi	s0,sp,32$/;"	l
e70	grind.asm	/^     e70:	48b1                	li	a7,12$/;"	l
e70	sh.asm	/^     e70:	feb407a3          	sb	a1,-17(s0)$/;"	l
e70	usertests.asm	/^     e70:	00005097          	auipc	ra,0x5$/;"	l
e72	grind.asm	/^     e72:	00000073          	ecall$/;"	l
e74	sh.asm	/^     e74:	4605                	li	a2,1$/;"	l
e74	usertests.asm	/^     e74:	b12080e7          	jalr	-1262(ra) # 5982 <printf>$/;"	l
e76	grind.asm	/^     e76:	8082                	ret$/;"	l
e76	sh.asm	/^     e76:	fef40593          	addi	a1,s0,-17$/;"	l
e78	grind.asm	/^     e78:	48b5                	li	a7,13$/;"	l
e78	usertests.asm	/^     e78:	4505                	li	a0,1$/;"	l
e7a	grind.asm	/^     e7a:	00000073          	ecall$/;"	l
e7a	sh.asm	/^     e7a:	00000097          	auipc	ra,0x0$/;"	l
e7a	usertests.asm	/^     e7a:	00004097          	auipc	ra,0x4$/;"	l
e7e	grind.asm	/^     e7e:	8082                	ret$/;"	l
e7e	sh.asm	/^     e7e:	f6e080e7          	jalr	-146(ra) # de8 <write>$/;"	l
e7e	usertests.asm	/^     e7e:	78e080e7          	jalr	1934(ra) # 5608 <exit>$/;"	l
e8	bigfile.asm	/^  e8:	892a                	mv	s2,a0$/;"	l
e8	grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	grind.asm	/^      e8:	00001997          	auipc	s3,0x1$/;"	l
e8	kill.asm	/^  e8:	00b78023          	sb	a1,0(a5)$/;"	l
e8	ln.asm	/^  e8:	0785                	addi	a5,a5,1$/;"	l
e8	ls.asm	/^  e8:	d9840593          	addi	a1,s0,-616$/;"	l
e8	mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	wc.asm	/^  e8:	84450513          	addi	a0,a0,-1980 # 928 <malloc+0xf4>$/;"	l
e8	zombie.asm	/^  e8:	e4a6                	sd	s1,72(sp)$/;"	l
e80	grind.asm	/^     e80:	48b9                	li	a7,14$/;"	l
e82	grind.asm	/^     e82:	00000073          	ecall$/;"	l
e82	sh.asm	/^     e82:	60e2                	ld	ra,24(sp)$/;"	l
e82	usertests.asm	/^     e82:	85ca                	mv	a1,s2$/;"	l
e84	sh.asm	/^     e84:	6442                	ld	s0,16(sp)$/;"	l
e84	usertests.asm	/^     e84:	00005517          	auipc	a0,0x5$/;"	l
e86	grind.asm	/^     e86:	8082                	ret$/;"	l
e86	sh.asm	/^     e86:	6105                	addi	sp,sp,32$/;"	l
e88	grind.asm	/^     e88:	1101                	addi	sp,sp,-32$/;"	l
e88	sh.asm	/^     e88:	8082                	ret$/;"	l
e88	usertests.asm	/^     e88:	2a450513          	addi	a0,a0,676 # 6128 <malloc+0x6ee>$/;"	l
e8a	grind.asm	/^     e8a:	ec06                	sd	ra,24(sp)$/;"	l
e8a	sh.asm	/^     e8a:	7139                	addi	sp,sp,-64$/;"	l
e8c	grind.asm	/^     e8c:	e822                	sd	s0,16(sp)$/;"	l
e8c	sh.asm	/^     e8c:	fc06                	sd	ra,56(sp)$/;"	l
e8c	usertests.asm	/^     e8c:	00005097          	auipc	ra,0x5$/;"	l
e8e	grind.asm	/^     e8e:	1000                	addi	s0,sp,32$/;"	l
e8e	sh.asm	/^     e8e:	f822                	sd	s0,48(sp)$/;"	l
e90	grind.asm	/^     e90:	feb407a3          	sb	a1,-17(s0)$/;"	l
e90	sh.asm	/^     e90:	f426                	sd	s1,40(sp)$/;"	l
e90	usertests.asm	/^     e90:	af6080e7          	jalr	-1290(ra) # 5982 <printf>$/;"	l
e92	sh.asm	/^     e92:	f04a                	sd	s2,32(sp)$/;"	l
e94	grind.asm	/^     e94:	4605                	li	a2,1$/;"	l
e94	sh.asm	/^     e94:	ec4e                	sd	s3,24(sp)$/;"	l
e94	usertests.asm	/^     e94:	4505                	li	a0,1$/;"	l
e96	grind.asm	/^     e96:	fef40593          	addi	a1,s0,-17$/;"	l
e96	sh.asm	/^     e96:	0080                	addi	s0,sp,64$/;"	l
e96	usertests.asm	/^     e96:	00004097          	auipc	ra,0x4$/;"	l
e98	sh.asm	/^     e98:	84aa                	mv	s1,a0$/;"	l
e9a	grind.asm	/^     e9a:	00000097          	auipc	ra,0x0$/;"	l
e9a	sh.asm	/^     e9a:	c299                	beqz	a3,ea0 <printint+0x16>$/;"	l
e9a	usertests.asm	/^     e9a:	772080e7          	jalr	1906(ra) # 5608 <exit>$/;"	l
e9c	sh.asm	/^     e9c:	0805c963          	bltz	a1,f2e <printint+0xa4>$/;"	l
e9e	grind.asm	/^     e9e:	f6e080e7          	jalr	-146(ra) # e08 <write>$/;"	l
e9e	usertests.asm	/^     e9e:	85ca                	mv	a1,s2$/;"	l
ea	bigfile.asm	/^  ea:	4481                	li	s1,0$/;"	l
ea	cat.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	echo.asm	/^  ea:	fb7d                	bnez	a4,e0 <strlen+0x14>$/;"	l
ea	forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	init.asm	/^  ea:	5f8080e7          	jalr	1528(ra) # 6de <printf>$/;"	l
ea	ln.asm	/^  ea:	fee79de3          	bne	a5,a4,e4 <memset+0x12>$/;"	l
ea	mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	sh.asm	/^      ea:	f6e080e7          	jalr	-146(ra) # 54 <panic>$/;"	l
ea	stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	usertests.asm	/^      ea:	a7a50513          	addi	a0,a0,-1414 # 5b60 <malloc+0x126>$/;"	l
ea	zombie.asm	/^  ea:	e0ca                	sd	s2,64(sp)$/;"	l
ea0	sh.asm	/^     ea0:	2581                	sext.w	a1,a1$/;"	l
ea0	usertests.asm	/^     ea0:	00005517          	auipc	a0,0x5$/;"	l
ea2	grind.asm	/^     ea2:	60e2                	ld	ra,24(sp)$/;"	l
ea2	sh.asm	/^     ea2:	4881                	li	a7,0$/;"	l
ea4	grind.asm	/^     ea4:	6442                	ld	s0,16(sp)$/;"	l
ea4	sh.asm	/^     ea4:	fc040693          	addi	a3,s0,-64$/;"	l
ea4	usertests.asm	/^     ea4:	2a050513          	addi	a0,a0,672 # 6140 <malloc+0x706>$/;"	l
ea6	grind.asm	/^     ea6:	6105                	addi	sp,sp,32$/;"	l
ea8	grind.asm	/^     ea8:	8082                	ret$/;"	l
ea8	sh.asm	/^     ea8:	4701                	li	a4,0$/;"	l
ea8	usertests.asm	/^     ea8:	00005097          	auipc	ra,0x5$/;"	l
eaa	grind.asm	/^     eaa:	7139                	addi	sp,sp,-64$/;"	l
eaa	sh.asm	/^     eaa:	2601                	sext.w	a2,a2$/;"	l
eac	grind.asm	/^     eac:	fc06                	sd	ra,56(sp)$/;"	l
eac	sh.asm	/^     eac:	00000517          	auipc	a0,0x0$/;"	l
eac	usertests.asm	/^     eac:	ada080e7          	jalr	-1318(ra) # 5982 <printf>$/;"	l
eae	grind.asm	/^     eae:	f822                	sd	s0,48(sp)$/;"	l
eargv	sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	grind.asm	/^     eb0:	f426                	sd	s1,40(sp)$/;"	l
eb0	sh.asm	/^     eb0:	5d450513          	addi	a0,a0,1492 # 1480 <digits>$/;"	l
eb0	usertests.asm	/^     eb0:	4505                	li	a0,1$/;"	l
eb2	grind.asm	/^     eb2:	f04a                	sd	s2,32(sp)$/;"	l
eb2	usertests.asm	/^     eb2:	00004097          	auipc	ra,0x4$/;"	l
eb4	grind.asm	/^     eb4:	ec4e                	sd	s3,24(sp)$/;"	l
eb4	sh.asm	/^     eb4:	883a                	mv	a6,a4$/;"	l
eb6	grind.asm	/^     eb6:	0080                	addi	s0,sp,64$/;"	l
eb6	sh.asm	/^     eb6:	2705                	addiw	a4,a4,1$/;"	l
eb6	usertests.asm	/^     eb6:	756080e7          	jalr	1878(ra) # 5608 <exit>$/;"	l
eb8	grind.asm	/^     eb8:	84aa                	mv	s1,a0$/;"	l
eb8	sh.asm	/^     eb8:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
eba	grind.asm	/^     eba:	c299                	beqz	a3,ec0 <printint+0x16>$/;"	l
eba	usertests.asm	/^     eba:	85ca                	mv	a1,s2$/;"	l
ebc	grind.asm	/^     ebc:	0805c963          	bltz	a1,f4e <printint+0xa4>$/;"	l
ebc	sh.asm	/^     ebc:	1782                	slli	a5,a5,0x20$/;"	l
ebc	usertests.asm	/^     ebc:	00005517          	auipc	a0,0x5$/;"	l
ebe	sh.asm	/^     ebe:	9381                	srli	a5,a5,0x20$/;"	l
ec	bigfile.asm	/^  ec:	04054463          	bltz	a0,134 <main+0x134>$/;"	l
ec	cat.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	echo.asm	/^  ec:	6422                	ld	s0,8(sp)$/;"	l
ec	grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	grind.asm	/^      ec:	25098993          	addi	s3,s3,592 # 1338 <malloc+0x11e>$/;"	l
ec	kill.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	ls.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	zombie.asm	/^  ec:	fc4e                	sd	s3,56(sp)$/;"	l
ec0	grind.asm	/^     ec0:	2581                	sext.w	a1,a1$/;"	l
ec0	sh.asm	/^     ec0:	97aa                	add	a5,a5,a0$/;"	l
ec0	usertests.asm	/^     ec0:	2a450513          	addi	a0,a0,676 # 6160 <malloc+0x726>$/;"	l
ec2	grind.asm	/^     ec2:	4881                	li	a7,0$/;"	l
ec2	sh.asm	/^     ec2:	0007c783          	lbu	a5,0(a5)$/;"	l
ec4	grind.asm	/^     ec4:	fc040693          	addi	a3,s0,-64$/;"	l
ec4	usertests.asm	/^     ec4:	00005097          	auipc	ra,0x5$/;"	l
ec6	sh.asm	/^     ec6:	00f68023          	sb	a5,0(a3)$/;"	l
ec8	grind.asm	/^     ec8:	4701                	li	a4,0$/;"	l
ec8	usertests.asm	/^     ec8:	abe080e7          	jalr	-1346(ra) # 5982 <printf>$/;"	l
eca	grind.asm	/^     eca:	2601                	sext.w	a2,a2$/;"	l
eca	sh.asm	/^     eca:	0005879b          	sext.w	a5,a1$/;"	l
ecc	grind.asm	/^     ecc:	00000517          	auipc	a0,0x0$/;"	l
ecc	usertests.asm	/^     ecc:	4505                	li	a0,1$/;"	l
ece	sh.asm	/^     ece:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
ece	usertests.asm	/^     ece:	00004097          	auipc	ra,0x4$/;"	l
ecmd	sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	grind.asm	/^     ed0:	7d450513          	addi	a0,a0,2004 # 16a0 <digits>$/;"	l
ed2	sh.asm	/^     ed2:	0685                	addi	a3,a3,1$/;"	l
ed2	usertests.asm	/^     ed2:	73a080e7          	jalr	1850(ra) # 5608 <exit>$/;"	l
ed4	grind.asm	/^     ed4:	883a                	mv	a6,a4$/;"	l
ed4	sh.asm	/^     ed4:	fec7f0e3          	bgeu	a5,a2,eb4 <printint+0x2a>$/;"	l
ed6	grind.asm	/^     ed6:	2705                	addiw	a4,a4,1$/;"	l
ed6	usertests.asm	/^     ed6:	85ca                	mv	a1,s2$/;"	l
ed8	grind.asm	/^     ed8:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
ed8	sh.asm	/^     ed8:	00088c63          	beqz	a7,ef0 <printint+0x66>$/;"	l
ed8	usertests.asm	/^     ed8:	00005517          	auipc	a0,0x5$/;"	l
edc	grind.asm	/^     edc:	1782                	slli	a5,a5,0x20$/;"	l
edc	sh.asm	/^     edc:	fd070793          	addi	a5,a4,-48$/;"	l
edc	usertests.asm	/^     edc:	2b850513          	addi	a0,a0,696 # 6190 <malloc+0x756>$/;"	l
ede	grind.asm	/^     ede:	9381                	srli	a5,a5,0x20$/;"	l
ee	echo.asm	/^  ee:	0141                	addi	sp,sp,16$/;"	l
ee	forktest.asm	/^  ee:	38e50513          	addi	a0,a0,910 # 478 <uptime+0x56>$/;"	l
ee	init.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	kill.asm	/^  ee:	fee79de3          	bne	a5,a4,e8 <memset+0x12>$/;"	l
ee	ln.asm	/^  ee:	6422                	ld	s0,8(sp)$/;"	l
ee	mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	sh.asm	/^      ee:	6508                	ld	a0,8(a0)$/;"	l
ee	stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	usertests.asm	/^      ee:	00006097          	auipc	ra,0x6$/;"	l
ee	zombie.asm	/^  ee:	f852                	sd	s4,48(sp)$/;"	l
ee0	grind.asm	/^     ee0:	97aa                	add	a5,a5,a0$/;"	l
ee0	sh.asm	/^     ee0:	00878733          	add	a4,a5,s0$/;"	l
ee0	usertests.asm	/^     ee0:	00005097          	auipc	ra,0x5$/;"	l
ee2	grind.asm	/^     ee2:	0007c783          	lbu	a5,0(a5)$/;"	l
ee4	sh.asm	/^     ee4:	02d00793          	li	a5,45$/;"	l
ee4	usertests.asm	/^     ee4:	aa2080e7          	jalr	-1374(ra) # 5982 <printf>$/;"	l
ee6	grind.asm	/^     ee6:	00f68023          	sb	a5,0(a3)$/;"	l
ee8	sh.asm	/^     ee8:	fef70823          	sb	a5,-16(a4)$/;"	l
ee8	usertests.asm	/^     ee8:	4505                	li	a0,1$/;"	l
eea	grind.asm	/^     eea:	0005879b          	sext.w	a5,a1$/;"	l
eea	usertests.asm	/^     eea:	00004097          	auipc	ra,0x4$/;"	l
eec	sh.asm	/^     eec:	0028071b          	addiw	a4,a6,2$/;"	l
eee	grind.asm	/^     eee:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
eee	usertests.asm	/^     eee:	71e080e7          	jalr	1822(ra) # 5608 <exit>$/;"	l
ef0	sh.asm	/^     ef0:	02e05863          	blez	a4,f20 <printint+0x96>$/;"	l
ef2	grind.asm	/^     ef2:	0685                	addi	a3,a3,1$/;"	l
ef2	usertests.asm	/^     ef2:	85ca                	mv	a1,s2$/;"	l
ef4	grind.asm	/^     ef4:	fec7f0e3          	bgeu	a5,a2,ed4 <printint+0x2a>$/;"	l
ef4	sh.asm	/^     ef4:	fc040793          	addi	a5,s0,-64$/;"	l
ef4	usertests.asm	/^     ef4:	00005517          	auipc	a0,0x5$/;"	l
ef8	grind.asm	/^     ef8:	00088c63          	beqz	a7,f10 <printint+0x66>$/;"	l
ef8	sh.asm	/^     ef8:	00e78933          	add	s2,a5,a4$/;"	l
ef8	usertests.asm	/^     ef8:	2b450513          	addi	a0,a0,692 # 61a8 <malloc+0x76e>$/;"	l
efc	grind.asm	/^     efc:	fd070793          	addi	a5,a4,-48$/;"	l
efc	sh.asm	/^     efc:	fff78993          	addi	s3,a5,-1$/;"	l
efc	usertests.asm	/^     efc:	00005097          	auipc	ra,0x5$/;"	l
efile	sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
entry	usys.pl	/^sub entry {$/;"	s
es	sh.asm	/^  es = s + strlen(s);$/;"	d
exec	bigfile.asm	/^exec:$/;"	l
exec	cat.asm	/^exec:$/;"	l
exec	echo.asm	/^exec:$/;"	l
exec	forktest.asm	/^exec:$/;"	l
exec	grep.asm	/^exec:$/;"	l
exec	grind.asm	/^exec:$/;"	l
exec	init.asm	/^exec:$/;"	l
exec	kill.asm	/^exec:$/;"	l
exec	ln.asm	/^exec:$/;"	l
exec	ls.asm	/^exec:$/;"	l
exec	mkdir.asm	/^exec:$/;"	l
exec	rm.asm	/^exec:$/;"	l
exec	sh.asm	/^exec:$/;"	l
exec	stressfs.asm	/^exec:$/;"	l
exec	usertests.asm	/^exec:$/;"	l
exec	usys.S	/^exec:$/;"	l
exec	wc.asm	/^exec:$/;"	l
exec	zombie.asm	/^exec:$/;"	l
execcmd	sh.c	/^execcmd(void)$/;"	f
execcmd	sh.c	/^struct execcmd {$/;"	s	file:
execout	usertests.c	/^execout(char *s)$/;"	f
exectest	usertests.c	/^exectest(char *s)$/;"	f
exit	bigfile.asm	/^exit:$/;"	l
exit	cat.asm	/^exit:$/;"	l
exit	echo.asm	/^exit:$/;"	l
exit	forktest.asm	/^exit:$/;"	l
exit	grep.asm	/^exit:$/;"	l
exit	grind.asm	/^exit:$/;"	l
exit	init.asm	/^exit:$/;"	l
exit	initcode.S	/^exit:$/;"	l
exit	initcode.asm	/^exit:$/;"	l
exit	kill.asm	/^exit:$/;"	l
exit	ln.asm	/^exit:$/;"	l
exit	ls.asm	/^exit:$/;"	l
exit	mkdir.asm	/^exit:$/;"	l
exit	rm.asm	/^exit:$/;"	l
exit	sh.asm	/^exit:$/;"	l
exit	stressfs.asm	/^exit:$/;"	l
exit	usertests.asm	/^exit:$/;"	l
exit	usys.S	/^exit:$/;"	l
exit	wc.asm	/^exit:$/;"	l
exit	zombie.asm	/^exit:$/;"	l
exitiputtest	usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	usertests.c	/^exitwait(char *s)$/;"	f
f0	bigfile.asm	/^  f0:	69c1                	lui	s3,0x10$/;"	l
f0	cat.asm	/^  f0:	f14080e7          	jalr	-236(ra) # 0 <cat>$/;"	l
f0	echo.asm	/^  f0:	8082                	ret$/;"	l
f0	grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	grind.asm	/^      f0:	c489                	beqz	s1,fa <go+0x82>$/;"	l
f0	init.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	ln.asm	/^  f0:	0141                	addi	sp,sp,16$/;"	l
f0	ls.asm	/^  f0:	4aa080e7          	jalr	1194(ra) # 596 <fstat>$/;"	l
f0	mkdir.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	rm.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	sh.asm	/^      f0:	c515                	beqz	a0,11c <runcmd+0x74>$/;"	l
f0	stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	wc.asm	/^  f0:	690080e7          	jalr	1680(ra) # 77c <printf>$/;"	l
f0	zombie.asm	/^  f0:	f456                	sd	s5,40(sp)$/;"	l
f00	grind.asm	/^     f00:	00878733          	add	a4,a5,s0$/;"	l
f00	sh.asm	/^     f00:	99ba                	add	s3,s3,a4$/;"	l
f00	usertests.asm	/^     f00:	a86080e7          	jalr	-1402(ra) # 5982 <printf>$/;"	l
f02	sh.asm	/^     f02:	377d                	addiw	a4,a4,-1$/;"	l
f04	grind.asm	/^     f04:	02d00793          	li	a5,45$/;"	l
f04	sh.asm	/^     f04:	1702                	slli	a4,a4,0x20$/;"	l
f04	usertests.asm	/^     f04:	4505                	li	a0,1$/;"	l
f06	sh.asm	/^     f06:	9301                	srli	a4,a4,0x20$/;"	l
f06	usertests.asm	/^     f06:	00004097          	auipc	ra,0x4$/;"	l
f08	grind.asm	/^     f08:	fef70823          	sb	a5,-16(a4)$/;"	l
f08	sh.asm	/^     f08:	40e989b3          	sub	s3,s3,a4$/;"	l
f0a	usertests.asm	/^     f0a:	702080e7          	jalr	1794(ra) # 5608 <exit>$/;"	l
f0c	grind.asm	/^     f0c:	0028071b          	addiw	a4,a6,2$/;"	l
f0c	sh.asm	/^     f0c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f0e	usertests.asm	/^     f0e:	85ca                	mv	a1,s2$/;"	l
f10	grind.asm	/^     f10:	02e05863          	blez	a4,f40 <printint+0x96>$/;"	l
f10	sh.asm	/^     f10:	8526                	mv	a0,s1$/;"	l
f10	usertests.asm	/^     f10:	00005517          	auipc	a0,0x5$/;"	l
f12	sh.asm	/^     f12:	00000097          	auipc	ra,0x0$/;"	l
f14	grind.asm	/^     f14:	fc040793          	addi	a5,s0,-64$/;"	l
f14	usertests.asm	/^     f14:	2b050513          	addi	a0,a0,688 # 61c0 <malloc+0x786>$/;"	l
f16	sh.asm	/^     f16:	f56080e7          	jalr	-170(ra) # e68 <putc>$/;"	l
f18	grind.asm	/^     f18:	00e78933          	add	s2,a5,a4$/;"	l
f18	usertests.asm	/^     f18:	00005097          	auipc	ra,0x5$/;"	l
f1a	sh.asm	/^     f1a:	197d                	addi	s2,s2,-1$/;"	l
f1c	grind.asm	/^     f1c:	fff78993          	addi	s3,a5,-1$/;"	l
f1c	sh.asm	/^     f1c:	ff3918e3          	bne	s2,s3,f0c <printint+0x82>$/;"	l
f1c	usertests.asm	/^     f1c:	a6a080e7          	jalr	-1430(ra) # 5982 <printf>$/;"	l
f2	bigfile.asm	/^  f2:	10b98993          	addi	s3,s3,267 # 1010b <__global_pointer$+0xee6a>$/;"	l
f2	echo.asm	/^  f2:	4501                	li	a0,0$/;"	l
f2	forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	grind.asm	/^      f2:	00001997          	auipc	s3,0x1$/;"	l
f2	kill.asm	/^  f2:	6422                	ld	s0,8(sp)$/;"	l
f2	ln.asm	/^  f2:	8082                	ret$/;"	l
f2	mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	sh.asm	/^      f2:	00848593          	addi	a1,s1,8$/;"	l
f2	usertests.asm	/^      f2:	894080e7          	jalr	-1900(ra) # 5982 <printf>$/;"	l
f2	zombie.asm	/^  f2:	f05a                	sd	s6,32(sp)$/;"	l
f20	grind.asm	/^     f20:	99ba                	add	s3,s3,a4$/;"	l
f20	sh.asm	/^     f20:	70e2                	ld	ra,56(sp)$/;"	l
f20	usertests.asm	/^     f20:	4505                	li	a0,1$/;"	l
f22	grind.asm	/^     f22:	377d                	addiw	a4,a4,-1$/;"	l
f22	sh.asm	/^     f22:	7442                	ld	s0,48(sp)$/;"	l
f22	usertests.asm	/^     f22:	00004097          	auipc	ra,0x4$/;"	l
f24	grind.asm	/^     f24:	1702                	slli	a4,a4,0x20$/;"	l
f24	sh.asm	/^     f24:	74a2                	ld	s1,40(sp)$/;"	l
f26	grind.asm	/^     f26:	9301                	srli	a4,a4,0x20$/;"	l
f26	sh.asm	/^     f26:	7902                	ld	s2,32(sp)$/;"	l
f26	usertests.asm	/^     f26:	6e6080e7          	jalr	1766(ra) # 5608 <exit>$/;"	l
f28	grind.asm	/^     f28:	40e989b3          	sub	s3,s3,a4$/;"	l
f28	sh.asm	/^     f28:	69e2                	ld	s3,24(sp)$/;"	l
f2a	sh.asm	/^     f2a:	6121                	addi	sp,sp,64$/;"	l
f2a	usertests.asm	/^     f2a:	85ca                	mv	a1,s2$/;"	l
f2c	grind.asm	/^     f2c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f2c	sh.asm	/^     f2c:	8082                	ret$/;"	l
f2c	usertests.asm	/^     f2c:	00005517          	auipc	a0,0x5$/;"	l
f2e	sh.asm	/^     f2e:	40b005bb          	negw	a1,a1$/;"	l
f30	grind.asm	/^     f30:	8526                	mv	a0,s1$/;"	l
f30	usertests.asm	/^     f30:	2bc50513          	addi	a0,a0,700 # 61e8 <malloc+0x7ae>$/;"	l
f32	grind.asm	/^     f32:	00000097          	auipc	ra,0x0$/;"	l
f32	sh.asm	/^     f32:	4885                	li	a7,1$/;"	l
f34	sh.asm	/^     f34:	bf85                	j	ea4 <printint+0x1a>$/;"	l
f34	usertests.asm	/^     f34:	00005097          	auipc	ra,0x5$/;"	l
f36	grind.asm	/^     f36:	f56080e7          	jalr	-170(ra) # e88 <putc>$/;"	l
f36	sh.asm	/^     f36:	7119                	addi	sp,sp,-128$/;"	l
f38	sh.asm	/^     f38:	fc86                	sd	ra,120(sp)$/;"	l
f38	usertests.asm	/^     f38:	a4e080e7          	jalr	-1458(ra) # 5982 <printf>$/;"	l
f3a	grind.asm	/^     f3a:	197d                	addi	s2,s2,-1$/;"	l
f3a	sh.asm	/^     f3a:	f8a2                	sd	s0,112(sp)$/;"	l
f3c	grind.asm	/^     f3c:	ff3918e3          	bne	s2,s3,f2c <printint+0x82>$/;"	l
f3c	sh.asm	/^     f3c:	f4a6                	sd	s1,104(sp)$/;"	l
f3c	usertests.asm	/^     f3c:	4505                	li	a0,1$/;"	l
f3e	sh.asm	/^     f3e:	f0ca                	sd	s2,96(sp)$/;"	l
f3e	usertests.asm	/^     f3e:	00004097          	auipc	ra,0x4$/;"	l
f4	cat.asm	/^  f4:	4501                	li	a0,0$/;"	l
f4	echo.asm	/^  f4:	bfe5                	j	ec <strlen+0x20>$/;"	l
f4	grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	init.asm	/^  f4:	274080e7          	jalr	628(ra) # 364 <exit>$/;"	l
f4	kill.asm	/^  f4:	0141                	addi	sp,sp,16$/;"	l
f4	ln.asm	/^  f4:	1141                	addi	sp,sp,-16$/;"	l
f4	ls.asm	/^  f4:	08054163          	bltz	a0,176 <ls+0xc2>$/;"	l
f4	mkdir.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	rm.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	stressfs.asm	/^  f4:	2b0080e7          	jalr	688(ra) # 3a0 <close>$/;"	l
f4	wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	zombie.asm	/^  f4:	ec5e                	sd	s7,24(sp)$/;"	l
f40	grind.asm	/^     f40:	70e2                	ld	ra,56(sp)$/;"	l
f40	sh.asm	/^     f40:	ecce                	sd	s3,88(sp)$/;"	l
f42	grind.asm	/^     f42:	7442                	ld	s0,48(sp)$/;"	l
f42	sh.asm	/^     f42:	e8d2                	sd	s4,80(sp)$/;"	l
f42	usertests.asm	/^     f42:	6ca080e7          	jalr	1738(ra) # 5608 <exit>$/;"	l
f44	grind.asm	/^     f44:	74a2                	ld	s1,40(sp)$/;"	l
f44	sh.asm	/^     f44:	e4d6                	sd	s5,72(sp)$/;"	l
f46	grind.asm	/^     f46:	7902                	ld	s2,32(sp)$/;"	l
f46	sh.asm	/^     f46:	e0da                	sd	s6,64(sp)$/;"	l
f46	usertests.asm	/^     f46:	85ca                	mv	a1,s2$/;"	l
f48	grind.asm	/^     f48:	69e2                	ld	s3,24(sp)$/;"	l
f48	sh.asm	/^     f48:	fc5e                	sd	s7,56(sp)$/;"	l
f48	usertests.asm	/^     f48:	00005517          	auipc	a0,0x5$/;"	l
f4a	grind.asm	/^     f4a:	6121                	addi	sp,sp,64$/;"	l
f4a	sh.asm	/^     f4a:	f862                	sd	s8,48(sp)$/;"	l
f4c	grind.asm	/^     f4c:	8082                	ret$/;"	l
f4c	sh.asm	/^     f4c:	f466                	sd	s9,40(sp)$/;"	l
f4c	usertests.asm	/^     f4c:	2d050513          	addi	a0,a0,720 # 6218 <malloc+0x7de>$/;"	l
f4e	grind.asm	/^     f4e:	40b005bb          	negw	a1,a1$/;"	l
f4e	sh.asm	/^     f4e:	f06a                	sd	s10,32(sp)$/;"	l
f50	sh.asm	/^     f50:	ec6e                	sd	s11,24(sp)$/;"	l
f50	usertests.asm	/^     f50:	00005097          	auipc	ra,0x5$/;"	l
f52	grind.asm	/^     f52:	4885                	li	a7,1$/;"	l
f52	sh.asm	/^     f52:	0100                	addi	s0,sp,128$/;"	l
f54	grind.asm	/^     f54:	bf85                	j	ec4 <printint+0x1a>$/;"	l
f54	sh.asm	/^     f54:	0005c903          	lbu	s2,0(a1)$/;"	l
f54	usertests.asm	/^     f54:	a32080e7          	jalr	-1486(ra) # 5982 <printf>$/;"	l
f56	grind.asm	/^     f56:	7119                	addi	sp,sp,-128$/;"	l
f58	grind.asm	/^     f58:	fc86                	sd	ra,120(sp)$/;"	l
f58	sh.asm	/^     f58:	18090f63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f58	usertests.asm	/^     f58:	4505                	li	a0,1$/;"	l
f5a	grind.asm	/^     f5a:	f8a2                	sd	s0,112(sp)$/;"	l
f5a	usertests.asm	/^     f5a:	00004097          	auipc	ra,0x4$/;"	l
f5c	grind.asm	/^     f5c:	f4a6                	sd	s1,104(sp)$/;"	l
f5c	sh.asm	/^     f5c:	8aaa                	mv	s5,a0$/;"	l
f5e	grind.asm	/^     f5e:	f0ca                	sd	s2,96(sp)$/;"	l
f5e	sh.asm	/^     f5e:	8b32                	mv	s6,a2$/;"	l
f5e	usertests.asm	/^     f5e:	6ae080e7          	jalr	1710(ra) # 5608 <exit>$/;"	l
f6	bigfile.asm	/^  f6:	40000613          	li	a2,1024$/;"	l
f6	cat.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	echo.asm	/^  f6:	1141                	addi	sp,sp,-16$/;"	l
f6	forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	grind.asm	/^      f6:	23e98993          	addi	s3,s3,574 # 1330 <malloc+0x116>$/;"	l
f6	kill.asm	/^  f6:	8082                	ret$/;"	l
f6	ln.asm	/^  f6:	e422                	sd	s0,8(sp)$/;"	l
f6	mkdir.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	rm.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	sh.asm	/^      f6:	00001097          	auipc	ra,0x1$/;"	l
f6	usertests.asm	/^      f6:	4505                	li	a0,1$/;"	l
f6	wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	zombie.asm	/^  f6:	1080                	addi	s0,sp,96$/;"	l
f60	grind.asm	/^     f60:	ecce                	sd	s3,88(sp)$/;"	l
f60	sh.asm	/^     f60:	00158493          	addi	s1,a1,1$/;"	l
f62	grind.asm	/^     f62:	e8d2                	sd	s4,80(sp)$/;"	l
f62	usertests.asm	/^     f62:	715d                	addi	sp,sp,-80$/;"	l
f64	grind.asm	/^     f64:	e4d6                	sd	s5,72(sp)$/;"	l
f64	sh.asm	/^     f64:	4981                	li	s3,0$/;"	l
f64	usertests.asm	/^     f64:	e486                	sd	ra,72(sp)$/;"	l
f66	grind.asm	/^     f66:	e0da                	sd	s6,64(sp)$/;"	l
f66	sh.asm	/^     f66:	02500a13          	li	s4,37$/;"	l
f66	usertests.asm	/^     f66:	e0a2                	sd	s0,64(sp)$/;"	l
f68	grind.asm	/^     f68:	fc5e                	sd	s7,56(sp)$/;"	l
f68	usertests.asm	/^     f68:	fc26                	sd	s1,56(sp)$/;"	l
f6a	grind.asm	/^     f6a:	f862                	sd	s8,48(sp)$/;"	l
f6a	sh.asm	/^     f6a:	4c55                	li	s8,21$/;"	l
f6a	usertests.asm	/^     f6a:	f84a                	sd	s2,48(sp)$/;"	l
f6c	grind.asm	/^     f6c:	f466                	sd	s9,40(sp)$/;"	l
f6c	sh.asm	/^     f6c:	00000c97          	auipc	s9,0x0$/;"	l
f6c	usertests.asm	/^     f6c:	f44e                	sd	s3,40(sp)$/;"	l
f6e	grind.asm	/^     f6e:	f06a                	sd	s10,32(sp)$/;"	l
f6e	usertests.asm	/^     f6e:	f052                	sd	s4,32(sp)$/;"	l
f70	grind.asm	/^     f70:	ec6e                	sd	s11,24(sp)$/;"	l
f70	sh.asm	/^     f70:	4bcc8c93          	addi	s9,s9,1212 # 1428 <malloc+0x22e>$/;"	l
f70	usertests.asm	/^     f70:	ec56                	sd	s5,24(sp)$/;"	l
f72	grind.asm	/^     f72:	0100                	addi	s0,sp,128$/;"	l
f72	usertests.asm	/^     f72:	e85a                	sd	s6,16(sp)$/;"	l
f74	grind.asm	/^     f74:	0005c903          	lbu	s2,0(a1)$/;"	l
f74	sh.asm	/^     f74:	02800d93          	li	s11,40$/;"	l
f74	usertests.asm	/^     f74:	0880                	addi	s0,sp,80$/;"	l
f76	usertests.asm	/^     f76:	89aa                	mv	s3,a0$/;"	l
f78	grind.asm	/^     f78:	18090f63          	beqz	s2,1116 <vprintf+0x1c0>$/;"	l
f78	sh.asm	/^     f78:	4d41                	li	s10,16$/;"	l
f78	usertests.asm	/^     f78:	00005517          	auipc	a0,0x5$/;"	l
f7a	sh.asm	/^     f7a:	00000b97          	auipc	s7,0x0$/;"	l
f7c	grind.asm	/^     f7c:	8aaa                	mv	s5,a0$/;"	l
f7c	usertests.asm	/^     f7c:	2c050513          	addi	a0,a0,704 # 6238 <malloc+0x7fe>$/;"	l
f7e	grind.asm	/^     f7e:	8b32                	mv	s6,a2$/;"	l
f7e	sh.asm	/^     f7e:	506b8b93          	addi	s7,s7,1286 # 1480 <digits>$/;"	l
f8	echo.asm	/^  f8:	e422                	sd	s0,8(sp)$/;"	l
f8	grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	init.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	kill.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	ln.asm	/^  f8:	0800                	addi	s0,sp,16$/;"	l
f8	ls.asm	/^  f8:	da041783          	lh	a5,-608(s0)$/;"	l
f8	mkdir.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	rm.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	usertests.asm	/^      f8:	00005097          	auipc	ra,0x5$/;"	l
f8	zombie.asm	/^  f8:	8baa                	mv	s7,a0$/;"	l
f80	grind.asm	/^     f80:	00158493          	addi	s1,a1,1$/;"	l
f80	usertests.asm	/^     f80:	00004097          	auipc	ra,0x4$/;"	l
f82	sh.asm	/^     f82:	a839                	j	fa0 <vprintf+0x6a>$/;"	l
f84	grind.asm	/^     f84:	4981                	li	s3,0$/;"	l
f84	sh.asm	/^     f84:	85ca                	mv	a1,s2$/;"	l
f84	usertests.asm	/^     f84:	6d8080e7          	jalr	1752(ra) # 5658 <unlink>$/;"	l
f86	grind.asm	/^     f86:	02500a13          	li	s4,37$/;"	l
f86	sh.asm	/^     f86:	8556                	mv	a0,s5$/;"	l
f88	sh.asm	/^     f88:	00000097          	auipc	ra,0x0$/;"	l
f88	usertests.asm	/^     f88:	20000593          	li	a1,512$/;"	l
f8a	grind.asm	/^     f8a:	4c55                	li	s8,21$/;"	l
f8c	grind.asm	/^     f8c:	00000c97          	auipc	s9,0x0$/;"	l
f8c	sh.asm	/^     f8c:	ee0080e7          	jalr	-288(ra) # e68 <putc>$/;"	l
f8c	usertests.asm	/^     f8c:	00005517          	auipc	a0,0x5$/;"	l
f90	grind.asm	/^     f90:	6bcc8c93          	addi	s9,s9,1724 # 1648 <malloc+0x42e>$/;"	l
f90	sh.asm	/^     f90:	a019                	j	f96 <vprintf+0x60>$/;"	l
f90	usertests.asm	/^     f90:	2ac50513          	addi	a0,a0,684 # 6238 <malloc+0x7fe>$/;"	l
f92	sh.asm	/^     f92:	01498d63          	beq	s3,s4,fac <vprintf+0x76>$/;"	l
f94	grind.asm	/^     f94:	02800d93          	li	s11,40$/;"	l
f94	usertests.asm	/^     f94:	00004097          	auipc	ra,0x4$/;"	l
f96	sh.asm	/^     f96:	0485                	addi	s1,s1,1$/;"	l
f98	grind.asm	/^     f98:	4d41                	li	s10,16$/;"	l
f98	sh.asm	/^     f98:	fff4c903          	lbu	s2,-1(s1)$/;"	l
f98	usertests.asm	/^     f98:	6b4080e7          	jalr	1716(ra) # 5648 <open>$/;"	l
f9a	grind.asm	/^     f9a:	00000b97          	auipc	s7,0x0$/;"	l
f9c	sh.asm	/^     f9c:	14090d63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f9c	usertests.asm	/^     f9c:	0c054963          	bltz	a0,106e <bigdir+0x10c>$/;"	l
f9e	grind.asm	/^     f9e:	706b8b93          	addi	s7,s7,1798 # 16a0 <digits>$/;"	l
fa	bigfile.asm	/^  fa:	bd040593          	addi	a1,s0,-1072$/;"	l
fa	cat.asm	/^  fa:	294080e7          	jalr	660(ra) # 38a <exit>$/;"	l
fa	echo.asm	/^  fa:	0800                	addi	s0,sp,16$/;"	l
fa	forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	grind.asm	/^      fa:	4485                	li	s1,1$/;"	l
fa	init.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	kill.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	ln.asm	/^  fa:	00054783          	lbu	a5,0(a0)$/;"	l
fa	sh.asm	/^      fa:	d0a080e7          	jalr	-758(ra) # e00 <exec>$/;"	l
fa	stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	wc.asm	/^  fa:	30c080e7          	jalr	780(ra) # 402 <exit>$/;"	l
fa	zombie.asm	/^  fa:	8a2e                	mv	s4,a1$/;"	l
fa0	sh.asm	/^     fa0:	fe0999e3          	bnez	s3,f92 <vprintf+0x5c>$/;"	l
fa0	usertests.asm	/^     fa0:	00004097          	auipc	ra,0x4$/;"	l
fa2	grind.asm	/^     fa2:	a839                	j	fc0 <vprintf+0x6a>$/;"	l
fa4	grind.asm	/^     fa4:	85ca                	mv	a1,s2$/;"	l
fa4	sh.asm	/^     fa4:	ff4910e3          	bne	s2,s4,f84 <vprintf+0x4e>$/;"	l
fa4	usertests.asm	/^     fa4:	690080e7          	jalr	1680(ra) # 5630 <close>$/;"	l
fa6	grind.asm	/^     fa6:	8556                	mv	a0,s5$/;"	l
fa8	grind.asm	/^     fa8:	00000097          	auipc	ra,0x0$/;"	l
fa8	sh.asm	/^     fa8:	89d2                	mv	s3,s4$/;"	l
fa8	usertests.asm	/^     fa8:	4901                	li	s2,0$/;"	l
faa	sh.asm	/^     faa:	b7f5                	j	f96 <vprintf+0x60>$/;"	l
faa	usertests.asm	/^     faa:	07800a93          	li	s5,120$/;"	l
fac	grind.asm	/^     fac:	ee0080e7          	jalr	-288(ra) # e88 <putc>$/;"	l
fac	sh.asm	/^     fac:	11490c63          	beq	s2,s4,10c4 <vprintf+0x18e>$/;"	l
fae	usertests.asm	/^     fae:	00005a17          	auipc	s4,0x5$/;"	l
fail	symlinktest.c	12;"	d	file:
fail	usertests.asm	/^        fail = 1;$/;"	d
failed	symlinktest.c	/^static int failed = 0;$/;"	v	file:
fb0	grind.asm	/^     fb0:	a019                	j	fb6 <vprintf+0x60>$/;"	l
fb0	sh.asm	/^     fb0:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fb2	grind.asm	/^     fb2:	01498d63          	beq	s3,s4,fcc <vprintf+0x76>$/;"	l
fb2	usertests.asm	/^     fb2:	28aa0a13          	addi	s4,s4,650 # 6238 <malloc+0x7fe>$/;"	l
fb4	sh.asm	/^     fb4:	0ff7f793          	zext.b	a5,a5$/;"	l
fb6	grind.asm	/^     fb6:	0485                	addi	s1,s1,1$/;"	l
fb6	usertests.asm	/^     fb6:	1f400b13          	li	s6,500$/;"	l
fb8	grind.asm	/^     fb8:	fff4c903          	lbu	s2,-1(s1)$/;"	l
fb8	sh.asm	/^     fb8:	10fc6e63          	bltu	s8,a5,10d4 <vprintf+0x19e>$/;"	l
fba	usertests.asm	/^     fba:	fb540823          	sb	s5,-80(s0)$/;"	l
fbc	grind.asm	/^     fbc:	14090d63          	beqz	s2,1116 <vprintf+0x1c0>$/;"	l
fbc	sh.asm	/^     fbc:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fbe	usertests.asm	/^     fbe:	41f9571b          	sraiw	a4,s2,0x1f$/;"	l
fc	echo.asm	/^  fc:	ca19                	beqz	a2,112 <memset+0x1c>$/;"	l
fc	forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	grind.asm	/^      fc:	5a7d                	li	s4,-1$/;"	l
fc	init.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	kill.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	ls.asm	/^  fc:	0007869b          	sext.w	a3,a5$/;"	l
fc	mkdir.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	rm.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	usertests.asm	/^      fc:	510080e7          	jalr	1296(ra) # 5608 <exit>$/;"	l
fc	zombie.asm	/^  fc:	892a                	mv	s2,a0$/;"	l
fc0	grind.asm	/^     fc0:	fe0999e3          	bnez	s3,fb2 <vprintf+0x5c>$/;"	l
fc0	sh.asm	/^     fc0:	0ff7f713          	zext.b	a4,a5$/;"	l
fc2	usertests.asm	/^     fc2:	01a7571b          	srliw	a4,a4,0x1a$/;"	l
fc4	grind.asm	/^     fc4:	ff4910e3          	bne	s2,s4,fa4 <vprintf+0x4e>$/;"	l
fc4	sh.asm	/^     fc4:	10ec6863          	bltu	s8,a4,10d4 <vprintf+0x19e>$/;"	l
fc6	usertests.asm	/^     fc6:	012707bb          	addw	a5,a4,s2$/;"	l
fc8	grind.asm	/^     fc8:	89d2                	mv	s3,s4$/;"	l
fc8	sh.asm	/^     fc8:	00271793          	slli	a5,a4,0x2$/;"	l
fca	grind.asm	/^     fca:	b7f5                	j	fb6 <vprintf+0x60>$/;"	l
fca	usertests.asm	/^     fca:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
fcc	grind.asm	/^     fcc:	11490c63          	beq	s2,s4,10e4 <vprintf+0x18e>$/;"	l
fcc	sh.asm	/^     fcc:	97e6                	add	a5,a5,s9$/;"	l
fce	sh.asm	/^     fce:	439c                	lw	a5,0(a5)$/;"	l
fce	usertests.asm	/^     fce:	0306869b          	addiw	a3,a3,48$/;"	l
fd	bigfile.asm	/^  fd = open("big.file", O_CREATE | O_WRONLY);$/;"	d
fd	bigfile.asm	/^  fd = open("big.file", O_RDONLY);$/;"	d
fd	bigfile.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	usertests.asm	/^  fd = open("README", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	usertests.asm	/^  fd = open("rwsbrk", O_CREATE|O_WRONLY);$/;"	d
fd	usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	grind.asm	/^     fd0:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fd0	sh.asm	/^     fd0:	97e6                	add	a5,a5,s9$/;"	l
fd1	usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	sh.asm	/^     fd2:	8782                	jr	a5$/;"	l
fd2	usertests.asm	/^     fd2:	fad408a3          	sb	a3,-79(s0)$/;"	l
fd4	grind.asm	/^     fd4:	0ff7f793          	zext.b	a5,a5$/;"	l
fd4	sh.asm	/^     fd4:	008b0913          	addi	s2,s6,8$/;"	l
fd6	usertests.asm	/^     fd6:	03f7f793          	andi	a5,a5,63$/;"	l
fd8	grind.asm	/^     fd8:	10fc6e63          	bltu	s8,a5,10f4 <vprintf+0x19e>$/;"	l
fd8	sh.asm	/^     fd8:	4685                	li	a3,1$/;"	l
fda	sh.asm	/^     fda:	4629                	li	a2,10$/;"	l
fda	usertests.asm	/^     fda:	9f99                	subw	a5,a5,a4$/;"	l
fdc	grind.asm	/^     fdc:	f9d9079b          	addiw	a5,s2,-99$/;"	l
fdc	sh.asm	/^     fdc:	000b2583          	lw	a1,0(s6)$/;"	l
fdc	usertests.asm	/^     fdc:	0307879b          	addiw	a5,a5,48$/;"	l
fe	bigfile.asm	/^  fe:	854a                	mv	a0,s2$/;"	l
fe	cat.asm	/^  fe:	00093603          	ld	a2,0(s2)$/;"	l
fe	echo.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	grind.asm	/^      fe:	00001917          	auipc	s2,0x1$/;"	l
fe	init.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	kill.asm	/^  fe:	00054783          	lbu	a5,0(a0)$/;"	l
fe	ln.asm	/^  fe:	cb99                	beqz	a5,114 <strchr+0x20>$/;"	l
fe	sh.asm	/^      fe:	6490                	ld	a2,8(s1)$/;"	l
fe	stressfs.asm	/^  fe:	286080e7          	jalr	646(ra) # 380 <wait>$/;"	l
fe	wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	zombie.asm	/^  fe:	4481                	li	s1,0$/;"	l
fe0	grind.asm	/^     fe0:	0ff7f713          	zext.b	a4,a5$/;"	l
fe0	sh.asm	/^     fe0:	8556                	mv	a0,s5$/;"	l
fe0	usertests.asm	/^     fe0:	faf40923          	sb	a5,-78(s0)$/;"	l
fe2	sh.asm	/^     fe2:	00000097          	auipc	ra,0x0$/;"	l
fe4	grind.asm	/^     fe4:	10ec6863          	bltu	s8,a4,10f4 <vprintf+0x19e>$/;"	l
fe4	usertests.asm	/^     fe4:	fa0409a3          	sb	zero,-77(s0)$/;"	l
fe6	sh.asm	/^     fe6:	ea8080e7          	jalr	-344(ra) # e8a <printint>$/;"	l
fe8	grind.asm	/^     fe8:	00271793          	slli	a5,a4,0x2$/;"	l
fe8	usertests.asm	/^     fe8:	fb040593          	addi	a1,s0,-80$/;"	l
fea	sh.asm	/^     fea:	8b4a                	mv	s6,s2$/;"	l
fec	grind.asm	/^     fec:	97e6                	add	a5,a5,s9$/;"	l
fec	sh.asm	/^     fec:	4981                	li	s3,0$/;"	l
fec	usertests.asm	/^     fec:	8552                	mv	a0,s4$/;"	l
fee	grind.asm	/^     fee:	439c                	lw	a5,0(a5)$/;"	l
fee	sh.asm	/^     fee:	b765                	j	f96 <vprintf+0x60>$/;"	l
fee	usertests.asm	/^     fee:	00004097          	auipc	ra,0x4$/;"	l
ff0	grind.asm	/^     ff0:	97e6                	add	a5,a5,s9$/;"	l
ff0	sh.asm	/^     ff0:	008b0913          	addi	s2,s6,8$/;"	l
ff2	grind.asm	/^     ff2:	8782                	jr	a5$/;"	l
ff2	usertests.asm	/^     ff2:	67a080e7          	jalr	1658(ra) # 5668 <link>$/;"	l
ff4	grind.asm	/^     ff4:	008b0913          	addi	s2,s6,8$/;"	l
ff4	sh.asm	/^     ff4:	4681                	li	a3,0$/;"	l
ff6	sh.asm	/^     ff6:	4629                	li	a2,10$/;"	l
ff6	usertests.asm	/^     ff6:	84aa                	mv	s1,a0$/;"	l
ff8	grind.asm	/^     ff8:	4685                	li	a3,1$/;"	l
ff8	sh.asm	/^     ff8:	000b2583          	lw	a1,0(s6)$/;"	l
ff8	usertests.asm	/^     ff8:	e949                	bnez	a0,108a <bigdir+0x128>$/;"	l
ffa	grind.asm	/^     ffa:	4629                	li	a2,10$/;"	l
ffa	usertests.asm	/^     ffa:	2905                	addiw	s2,s2,1$/;"	l
ffc	grind.asm	/^     ffc:	000b2583          	lw	a1,0(s6)$/;"	l
ffc	sh.asm	/^     ffc:	8556                	mv	a0,s5$/;"	l
ffc	usertests.asm	/^     ffc:	fb691fe3          	bne	s2,s6,fba <bigdir+0x58>$/;"	l
ffe	sh.asm	/^     ffe:	00000097          	auipc	ra,0x0$/;"	l
file	sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
fmtname	ls.c	/^fmtname(char *path)$/;"	f
fname	usertests.asm	/^    fname = names[i];$/;"	d
fname	usertests.asm	/^    fname = names[pi];$/;"	d
fork	bigfile.asm	/^fork:$/;"	l
fork	cat.asm	/^fork:$/;"	l
fork	echo.asm	/^fork:$/;"	l
fork	forktest.asm	/^fork:$/;"	l
fork	grep.asm	/^fork:$/;"	l
fork	grind.asm	/^fork:$/;"	l
fork	init.asm	/^fork:$/;"	l
fork	kill.asm	/^fork:$/;"	l
fork	ln.asm	/^fork:$/;"	l
fork	ls.asm	/^fork:$/;"	l
fork	mkdir.asm	/^fork:$/;"	l
fork	rm.asm	/^fork:$/;"	l
fork	sh.asm	/^fork:$/;"	l
fork	stressfs.asm	/^fork:$/;"	l
fork	usertests.asm	/^fork:$/;"	l
fork	usys.S	/^fork:$/;"	l
fork	wc.asm	/^fork:$/;"	l
fork	zombie.asm	/^fork:$/;"	l
fork1	sh.c	/^fork1(void)$/;"	f
forkfork	usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	usertests.c	/^forkforkfork(char *s)$/;"	f
forktest	forktest.c	/^forktest(void)$/;"	f
forktest	usertests.c	/^forktest(char *s)$/;"	f
fourfiles	usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	usertests.c	/^fourteen(char *s)$/;"	f
fprintf	printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	umalloc.c	/^free(void *ap)$/;"	f
freep	bigfile.asm	/^      freep = prevp;$/;"	d
freep	bigfile.asm	/^  freep = p;$/;"	d
freep	cat.asm	/^      freep = prevp;$/;"	d
freep	cat.asm	/^  freep = p;$/;"	d
freep	echo.asm	/^      freep = prevp;$/;"	d
freep	echo.asm	/^  freep = p;$/;"	d
freep	grep.asm	/^      freep = prevp;$/;"	d
freep	grep.asm	/^  freep = p;$/;"	d
freep	grind.asm	/^      freep = prevp;$/;"	d
freep	grind.asm	/^  freep = p;$/;"	d
freep	init.asm	/^      freep = prevp;$/;"	d
freep	init.asm	/^  freep = p;$/;"	d
freep	kill.asm	/^      freep = prevp;$/;"	d
freep	kill.asm	/^  freep = p;$/;"	d
freep	ln.asm	/^      freep = prevp;$/;"	d
freep	ln.asm	/^  freep = p;$/;"	d
freep	ls.asm	/^      freep = prevp;$/;"	d
freep	ls.asm	/^  freep = p;$/;"	d
freep	mkdir.asm	/^      freep = prevp;$/;"	d
freep	mkdir.asm	/^  freep = p;$/;"	d
freep	rm.asm	/^      freep = prevp;$/;"	d
freep	rm.asm	/^  freep = p;$/;"	d
freep	sh.asm	/^      freep = prevp;$/;"	d
freep	sh.asm	/^  freep = p;$/;"	d
freep	stressfs.asm	/^      freep = prevp;$/;"	d
freep	stressfs.asm	/^  freep = p;$/;"	d
freep	umalloc.c	/^static Header *freep;$/;"	v	file:
freep	usertests.asm	/^      freep = prevp;$/;"	d
freep	usertests.asm	/^  freep = p;$/;"	d
freep	wc.asm	/^      freep = prevp;$/;"	d
freep	wc.asm	/^  freep = p;$/;"	d
freep	zombie.asm	/^      freep = prevp;$/;"	d
freep	zombie.asm	/^  freep = p;$/;"	d
fsfull	usertests.c	/^fsfull()$/;"	f
fstat	bigfile.asm	/^fstat:$/;"	l
fstat	cat.asm	/^fstat:$/;"	l
fstat	echo.asm	/^fstat:$/;"	l
fstat	forktest.asm	/^fstat:$/;"	l
fstat	grep.asm	/^fstat:$/;"	l
fstat	grind.asm	/^fstat:$/;"	l
fstat	init.asm	/^fstat:$/;"	l
fstat	kill.asm	/^fstat:$/;"	l
fstat	ln.asm	/^fstat:$/;"	l
fstat	ls.asm	/^fstat:$/;"	l
fstat	mkdir.asm	/^fstat:$/;"	l
fstat	rm.asm	/^fstat:$/;"	l
fstat	sh.asm	/^fstat:$/;"	l
fstat	stressfs.asm	/^fstat:$/;"	l
fstat	usertests.asm	/^fstat:$/;"	l
fstat	usys.S	/^fstat:$/;"	l
fstat	wc.asm	/^fstat:$/;"	l
fstat	zombie.asm	/^fstat:$/;"	l
getcmd	sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	bigfile.asm	/^getpid:$/;"	l
getpid	cat.asm	/^getpid:$/;"	l
getpid	echo.asm	/^getpid:$/;"	l
getpid	forktest.asm	/^getpid:$/;"	l
getpid	grep.asm	/^getpid:$/;"	l
getpid	grind.asm	/^getpid:$/;"	l
getpid	init.asm	/^getpid:$/;"	l
getpid	kill.asm	/^getpid:$/;"	l
getpid	ln.asm	/^getpid:$/;"	l
getpid	ls.asm	/^getpid:$/;"	l
getpid	mkdir.asm	/^getpid:$/;"	l
getpid	rm.asm	/^getpid:$/;"	l
getpid	sh.asm	/^getpid:$/;"	l
getpid	stressfs.asm	/^getpid:$/;"	l
getpid	usertests.asm	/^getpid:$/;"	l
getpid	usys.S	/^getpid:$/;"	l
getpid	wc.asm	/^getpid:$/;"	l
getpid	zombie.asm	/^getpid:$/;"	l
gets	ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
go	grind.c	/^go(int which_child)$/;"	f
grep	grep.c	/^grep(char *pattern, int fd)$/;"	f
header	umalloc.c	/^union header {$/;"	u	file:
hi	grind.asm	/^    hi = x \/ 127773;$/;"	d
i	bigfile.asm	/^  i = 0;$/;"	d
i	cat.asm	/^  i = 0;$/;"	d
i	echo.asm	/^  i = 0;$/;"	d
i	grep.asm	/^  i = 0;$/;"	d
i	grind.asm	/^  i = 0;$/;"	d
i	init.asm	/^  i = 0;$/;"	d
i	kill.asm	/^  i = 0;$/;"	d
i	ln.asm	/^  i = 0;$/;"	d
i	ls.asm	/^  i = 0;$/;"	d
i	mkdir.asm	/^  i = 0;$/;"	d
i	rm.asm	/^  i = 0;$/;"	d
i	sh.asm	/^  i = 0;$/;"	d
i	stressfs.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	usertests.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	wc.asm	/^  i = 0;$/;"	d
i	zombie.asm	/^  i = 0;$/;"	d
init	initcode.S	/^init:$/;"	l
int	bigfile.asm	/^int$/;"	l
int	cat.asm	/^int$/;"	l
int	echo.asm	/^int$/;"	l
int	forktest.asm	/^int$/;"	l
int	grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	grep.asm	/^int$/;"	l
int	grind.asm	/^int$/;"	l
int	init.asm	/^int$/;"	l
int	kill.asm	/^int$/;"	l
int	ln.asm	/^int$/;"	l
int	ls.asm	/^int$/;"	l
int	mkdir.asm	/^int$/;"	l
int	rm.asm	/^int$/;"	l
int	sh.asm	/^int$/;"	l
int	stressfs.asm	/^int$/;"	l
int	usertests.asm	/^int$/;"	l
int	wc.asm	/^int$/;"	l
int	zombie.asm	/^int$/;"	l
inword	wc.asm	/^        inword = 0;$/;"	d
inword	wc.asm	/^        inword = 1;$/;"	d
inword	wc.asm	/^  inword = 0;$/;"	d
iputtest	usertests.c	/^iputtest(char *s)$/;"	f
iref	usertests.c	/^iref(char *s)$/;"	f
iter	grind.c	/^iter()$/;"	f
justone	usertests.asm	/^    justone = argv[1];$/;"	d
kernmem	usertests.c	/^kernmem(char *s)$/;"	f
kill	bigfile.asm	/^kill:$/;"	l
kill	cat.asm	/^kill:$/;"	l
kill	echo.asm	/^kill:$/;"	l
kill	forktest.asm	/^kill:$/;"	l
kill	grep.asm	/^kill:$/;"	l
kill	grind.asm	/^kill:$/;"	l
kill	init.asm	/^kill:$/;"	l
kill	kill.asm	/^kill:$/;"	l
kill	ln.asm	/^kill:$/;"	l
kill	ls.asm	/^kill:$/;"	l
kill	mkdir.asm	/^kill:$/;"	l
kill	rm.asm	/^kill:$/;"	l
kill	sh.asm	/^kill:$/;"	l
kill	stressfs.asm	/^kill:$/;"	l
kill	usertests.asm	/^kill:$/;"	l
kill	usys.S	/^kill:$/;"	l
kill	wc.asm	/^kill:$/;"	l
kill	zombie.asm	/^kill:$/;"	l
l	wc.asm	/^  l = w = c = 0;$/;"	d
left	sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
link	bigfile.asm	/^link:$/;"	l
link	cat.asm	/^link:$/;"	l
link	echo.asm	/^link:$/;"	l
link	forktest.asm	/^link:$/;"	l
link	grep.asm	/^link:$/;"	l
link	grind.asm	/^link:$/;"	l
link	init.asm	/^link:$/;"	l
link	kill.asm	/^link:$/;"	l
link	ln.asm	/^link:$/;"	l
link	ls.asm	/^link:$/;"	l
link	mkdir.asm	/^link:$/;"	l
link	rm.asm	/^link:$/;"	l
link	sh.asm	/^link:$/;"	l
link	stressfs.asm	/^link:$/;"	l
link	usertests.asm	/^link:$/;"	l
link	usys.S	/^link:$/;"	l
link	wc.asm	/^link:$/;"	l
link	zombie.asm	/^link:$/;"	l
linktest	usertests.c	/^linktest(char *s)$/;"	f
linkunlink	usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	sh.c	/^struct listcmd {$/;"	s	file:
lo	grind.asm	/^    lo = x % 127773;$/;"	d
ls	ls.c	/^ls(char *path)$/;"	f
m	grep.asm	/^  m = 0;$/;"	d
m1	usertests.asm	/^      m1 = m2;$/;"	d
m1	usertests.asm	/^    m1 = 0;$/;"	d
m1	usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	usertests.asm	/^      m2 = *(char**)m1;$/;"	d
main	bigfile.c	/^main()$/;"	f
main	cat.c	/^main(int argc, char *argv[])$/;"	f
main	echo.c	/^main(int argc, char *argv[])$/;"	f
main	forktest.c	/^main(void)$/;"	f
main	grep.c	/^main(int argc, char *argv[])$/;"	f
main	grind.c	/^main()$/;"	f
main	init.c	/^main(void)$/;"	f
main	kill.c	/^main(int argc, char **argv)$/;"	f
main	ln.c	/^main(int argc, char *argv[])$/;"	f
main	ls.c	/^main(int argc, char *argv[])$/;"	f
main	mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	rm.c	/^main(int argc, char *argv[])$/;"	f
main	sh.c	/^main(void)$/;"	f
main	stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	symlink.c	/^int main(int argc, char *argv[]){$/;"	f
main	symlinktest.c	/^main(int argc, char *argv[])$/;"	f
main	usertests.c	/^main(int argc, char *argv[])$/;"	f
main	wc.c	/^main(int argc, char *argv[])$/;"	f
main	zombie.c	/^main(void)$/;"	f
malloc	umalloc.c	/^malloc(uint nbytes)$/;"	f
manywrites	usertests.c	/^manywrites(char *s)$/;"	f
match	grep.c	/^match(char *re, char *text)$/;"	f
matchhere	grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
mem	usertests.c	/^mem(char *s)$/;"	f
memcmp	ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f
memcpy	ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
mkdir	bigfile.asm	/^mkdir:$/;"	l
mkdir	cat.asm	/^mkdir:$/;"	l
mkdir	echo.asm	/^mkdir:$/;"	l
mkdir	forktest.asm	/^mkdir:$/;"	l
mkdir	grep.asm	/^mkdir:$/;"	l
mkdir	grind.asm	/^mkdir:$/;"	l
mkdir	init.asm	/^mkdir:$/;"	l
mkdir	kill.asm	/^mkdir:$/;"	l
mkdir	ln.asm	/^mkdir:$/;"	l
mkdir	ls.asm	/^mkdir:$/;"	l
mkdir	mkdir.asm	/^mkdir:$/;"	l
mkdir	rm.asm	/^mkdir:$/;"	l
mkdir	sh.asm	/^mkdir:$/;"	l
mkdir	stressfs.asm	/^mkdir:$/;"	l
mkdir	usertests.asm	/^mkdir:$/;"	l
mkdir	usys.S	/^mkdir:$/;"	l
mkdir	wc.asm	/^mkdir:$/;"	l
mkdir	zombie.asm	/^mkdir:$/;"	l
mknod	bigfile.asm	/^mknod:$/;"	l
mknod	cat.asm	/^mknod:$/;"	l
mknod	echo.asm	/^mknod:$/;"	l
mknod	forktest.asm	/^mknod:$/;"	l
mknod	grep.asm	/^mknod:$/;"	l
mknod	grind.asm	/^mknod:$/;"	l
mknod	init.asm	/^mknod:$/;"	l
mknod	kill.asm	/^mknod:$/;"	l
mknod	ln.asm	/^mknod:$/;"	l
mknod	ls.asm	/^mknod:$/;"	l
mknod	mkdir.asm	/^mknod:$/;"	l
mknod	rm.asm	/^mknod:$/;"	l
mknod	sh.asm	/^mknod:$/;"	l
mknod	stressfs.asm	/^mknod:$/;"	l
mknod	usertests.asm	/^mknod:$/;"	l
mknod	usys.S	/^mknod:$/;"	l
mknod	wc.asm	/^mknod:$/;"	l
mknod	zombie.asm	/^mknod:$/;"	l
mode	sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
morecore	umalloc.c	/^morecore(uint nu)$/;"	f	file:
n	bigfile.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	bigfile.asm	/^  n = 0;$/;"	d
n	cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	cat.asm	/^  n = 0;$/;"	d
n	echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	echo.asm	/^  n = 0;$/;"	d
n	forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	forktest.asm	/^  n = 0;$/;"	d
n	grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grep.asm	/^  n = 0;$/;"	d
n	grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grind.asm	/^  n = 0;$/;"	d
n	init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	init.asm	/^  n = 0;$/;"	d
n	kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	kill.asm	/^  n = 0;$/;"	d
n	ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ln.asm	/^  n = 0;$/;"	d
n	ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ls.asm	/^  n = 0;$/;"	d
n	mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mkdir.asm	/^  n = 0;$/;"	d
n	rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	rm.asm	/^  n = 0;$/;"	d
n	sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	sh.asm	/^  n = 0;$/;"	d
n	stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	stressfs.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	usertests.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^  n = read(fd, (void*)(a+4096), 10);$/;"	d
n	usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	usertests.asm	/^  n = write(fd, (void*)(a+4096), 1024);$/;"	d
n	wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	wc.asm	/^  n = 0;$/;"	d
n	zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	zombie.asm	/^  n = 0;$/;"	d
nc	usertests.asm	/^  nc = np = 0;$/;"	d
neg	bigfile.asm	/^    neg = 1;$/;"	d
neg	bigfile.asm	/^  neg = 0;$/;"	d
neg	cat.asm	/^    neg = 1;$/;"	d
neg	cat.asm	/^  neg = 0;$/;"	d
neg	echo.asm	/^    neg = 1;$/;"	d
neg	echo.asm	/^  neg = 0;$/;"	d
neg	grep.asm	/^    neg = 1;$/;"	d
neg	grep.asm	/^  neg = 0;$/;"	d
neg	grind.asm	/^    neg = 1;$/;"	d
neg	grind.asm	/^  neg = 0;$/;"	d
neg	init.asm	/^    neg = 1;$/;"	d
neg	init.asm	/^  neg = 0;$/;"	d
neg	kill.asm	/^    neg = 1;$/;"	d
neg	kill.asm	/^  neg = 0;$/;"	d
neg	ln.asm	/^    neg = 1;$/;"	d
neg	ln.asm	/^  neg = 0;$/;"	d
neg	ls.asm	/^    neg = 1;$/;"	d
neg	ls.asm	/^  neg = 0;$/;"	d
neg	mkdir.asm	/^    neg = 1;$/;"	d
neg	mkdir.asm	/^  neg = 0;$/;"	d
neg	rm.asm	/^    neg = 1;$/;"	d
neg	rm.asm	/^  neg = 0;$/;"	d
neg	sh.asm	/^    neg = 1;$/;"	d
neg	sh.asm	/^  neg = 0;$/;"	d
neg	stressfs.asm	/^    neg = 1;$/;"	d
neg	stressfs.asm	/^  neg = 0;$/;"	d
neg	usertests.asm	/^    neg = 1;$/;"	d
neg	usertests.asm	/^  neg = 0;$/;"	d
neg	wc.asm	/^    neg = 1;$/;"	d
neg	wc.asm	/^  neg = 0;$/;"	d
neg	zombie.asm	/^    neg = 1;$/;"	d
neg	zombie.asm	/^  neg = 0;$/;"	d
nulterminate	sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
nunits	bigfile.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
oldbrk	usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
open	bigfile.asm	/^open:$/;"	l
open	cat.asm	/^open:$/;"	l
open	echo.asm	/^open:$/;"	l
open	forktest.asm	/^open:$/;"	l
open	grep.asm	/^open:$/;"	l
open	grind.asm	/^open:$/;"	l
open	init.asm	/^open:$/;"	l
open	kill.asm	/^open:$/;"	l
open	ln.asm	/^open:$/;"	l
open	ls.asm	/^open:$/;"	l
open	mkdir.asm	/^open:$/;"	l
open	rm.asm	/^open:$/;"	l
open	sh.asm	/^open:$/;"	l
open	stressfs.asm	/^open:$/;"	l
open	usertests.asm	/^open:$/;"	l
open	usys.S	/^open:$/;"	l
open	wc.asm	/^open:$/;"	l
open	zombie.asm	/^open:$/;"	l
openiputtest	usertests.c	/^openiputtest(char *s)$/;"	f
opentest	usertests.c	/^opentest(char *s)$/;"	f
os	bigfile.asm	/^  os = s;$/;"	d
os	cat.asm	/^  os = s;$/;"	d
os	echo.asm	/^  os = s;$/;"	d
os	forktest.asm	/^  os = s;$/;"	d
os	grep.asm	/^  os = s;$/;"	d
os	grind.asm	/^  os = s;$/;"	d
os	init.asm	/^  os = s;$/;"	d
os	kill.asm	/^  os = s;$/;"	d
os	ln.asm	/^  os = s;$/;"	d
os	ls.asm	/^  os = s;$/;"	d
os	mkdir.asm	/^  os = s;$/;"	d
os	rm.asm	/^  os = s;$/;"	d
os	sh.asm	/^  os = s;$/;"	d
os	stressfs.asm	/^  os = s;$/;"	d
os	usertests.asm	/^  os = s;$/;"	d
os	wc.asm	/^  os = s;$/;"	d
os	zombie.asm	/^  os = s;$/;"	d
p	bigfile.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grep.asm	/^      p = q+1;$/;"	d
p	grep.asm	/^    p = buf;$/;"	d
p	grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	usertests.asm	/^  p = sbrk(amt);$/;"	d
p	usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
panic	sh.c	/^panic(char *s)$/;"	f
parseblock	sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	sh.c	/^parsecmd(char *s)$/;"	f
parseexec	sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	grep.asm	/^  pattern = argv[1];$/;"	d
peek	sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgbug	usertests.c	/^pgbug(char *s)$/;"	f
pid	forktest.asm	/^    pid = fork();$/;"	d
pid	init.asm	/^    pid = fork();$/;"	d
pid	sh.asm	/^  pid = fork();$/;"	d
pid	usertests.asm	/^    pid = fork();$/;"	d
pid	usertests.asm	/^  pid = fork();$/;"	d
pid1	usertests.asm	/^  pid1 = fork();$/;"	d
pid2	usertests.asm	/^  pid2 = fork();$/;"	d
pid3	usertests.asm	/^  pid3 = fork();$/;"	d
pipe	bigfile.asm	/^pipe:$/;"	l
pipe	cat.asm	/^pipe:$/;"	l
pipe	echo.asm	/^pipe:$/;"	l
pipe	forktest.asm	/^pipe:$/;"	l
pipe	grep.asm	/^pipe:$/;"	l
pipe	grind.asm	/^pipe:$/;"	l
pipe	init.asm	/^pipe:$/;"	l
pipe	kill.asm	/^pipe:$/;"	l
pipe	ln.asm	/^pipe:$/;"	l
pipe	ls.asm	/^pipe:$/;"	l
pipe	mkdir.asm	/^pipe:$/;"	l
pipe	rm.asm	/^pipe:$/;"	l
pipe	sh.asm	/^pipe:$/;"	l
pipe	stressfs.asm	/^pipe:$/;"	l
pipe	usertests.asm	/^pipe:$/;"	l
pipe	usys.S	/^pipe:$/;"	l
pipe	wc.asm	/^pipe:$/;"	l
pipe	zombie.asm	/^pipe:$/;"	l
pipe1	usertests.c	/^pipe1(char *s)$/;"	f
pipecmd	sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	sh.c	/^struct pipecmd {$/;"	s	file:
preempt	usertests.c	/^preempt(char *s)$/;"	f
print	forktest.c	/^print(const char *s)$/;"	f
printf	printf.c	/^printf(const char *fmt, ...)$/;"	f
printint	printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
ptr	umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon1	typeref:union:header::__anon1::header	file:
putc	printf.c	/^putc(int fd, char c)$/;"	f	file:
r	bigfile.asm	/^  r = fstat(fd, st);$/;"	d
r	cat.asm	/^  r = fstat(fd, st);$/;"	d
r	echo.asm	/^  r = fstat(fd, st);$/;"	d
r	forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	grep.asm	/^  r = fstat(fd, st);$/;"	d
r	grind.asm	/^  r = fstat(fd, st);$/;"	d
r	init.asm	/^  r = fstat(fd, st);$/;"	d
r	kill.asm	/^  r = fstat(fd, st);$/;"	d
r	ln.asm	/^  r = fstat(fd, st);$/;"	d
r	ls.asm	/^  r = fstat(fd, st);$/;"	d
r	mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	rm.asm	/^  r = fstat(fd, st);$/;"	d
r	sh.asm	/^  r = fstat(fd, st);$/;"	d
r	stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	wc.asm	/^  r = fstat(fd, st);$/;"	d
r	zombie.asm	/^  r = fstat(fd, st);$/;"	d
rand	grind.c	/^rand(void)$/;"	f
rand	usertests.c	/^rand()$/;"	f
rand_next	grind.asm	/^    rand_next = 31;$/;"	d
rand_next	grind.asm	/^    rand_next = 7177;$/;"	d
rand_next	grind.c	/^unsigned long rand_next = 1;$/;"	v
randstate	usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	usertests.c	/^unsigned long randstate = 1;$/;"	v
rcmd	sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	bigfile.asm	/^read:$/;"	l
read	cat.asm	/^read:$/;"	l
read	echo.asm	/^read:$/;"	l
read	forktest.asm	/^read:$/;"	l
read	grep.asm	/^read:$/;"	l
read	grind.asm	/^read:$/;"	l
read	init.asm	/^read:$/;"	l
read	kill.asm	/^read:$/;"	l
read	ln.asm	/^read:$/;"	l
read	ls.asm	/^read:$/;"	l
read	mkdir.asm	/^read:$/;"	l
read	rm.asm	/^read:$/;"	l
read	sh.asm	/^read:$/;"	l
read	stressfs.asm	/^read:$/;"	l
read	usertests.asm	/^read:$/;"	l
read	usys.S	/^read:$/;"	l
read	wc.asm	/^read:$/;"	l
read	zombie.asm	/^read:$/;"	l
redircmd	sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	sh.c	/^struct redircmd {$/;"	s	file:
reparent	usertests.c	/^reparent(char *s)$/;"	f
reparent2	usertests.c	/^reparent2(char *s)$/;"	f
ret	sh.asm	/^      ret = '+';$/;"	d
ret	sh.asm	/^    ret = 'a';$/;"	d
ret	sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	sh.asm	/^  ret = *s;$/;"	d
ret	sh.asm	/^  ret = execcmd();$/;"	d
ret	sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	usertests.asm	/^  ret = link(b, b);$/;"	d
right	sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rmdot	usertests.c	/^rmdot(char *s)$/;"	f
run	usertests.c	/^run(void f(char *), char *s) {$/;"	f
runcmd	sh.c	/^runcmd(struct cmd *cmd)$/;"	f
rwsbrk	usertests.c	/^rwsbrk()$/;"	f
s	bigfile.asm	/^          s = "(null)";$/;"	d
s	bigfile.asm	/^        s = va_arg(ap, char*);$/;"	d
s	cat.asm	/^          s = "(null)";$/;"	d
s	cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	echo.asm	/^          s = "(null)";$/;"	d
s	echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grep.asm	/^          s = "(null)";$/;"	d
s	grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grind.asm	/^          s = "(null)";$/;"	d
s	grind.asm	/^        s = va_arg(ap, char*);$/;"	d
s	init.asm	/^          s = "(null)";$/;"	d
s	init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	kill.asm	/^          s = "(null)";$/;"	d
s	kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ln.asm	/^          s = "(null)";$/;"	d
s	ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ls.asm	/^          s = "(null)";$/;"	d
s	ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mkdir.asm	/^          s = "(null)";$/;"	d
s	mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	rm.asm	/^          s = "(null)";$/;"	d
s	rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^          s = "(null)";$/;"	d
s	sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^  s = *ps;$/;"	d
s	stressfs.asm	/^          s = "(null)";$/;"	d
s	stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon1	file:
s	usertests.asm	/^          s = "(null)";$/;"	d
s	usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	wc.asm	/^          s = "(null)";$/;"	d
s	wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	zombie.asm	/^          s = "(null)";$/;"	d
s	zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
sbrk	bigfile.asm	/^sbrk:$/;"	l
sbrk	cat.asm	/^sbrk:$/;"	l
sbrk	echo.asm	/^sbrk:$/;"	l
sbrk	forktest.asm	/^sbrk:$/;"	l
sbrk	grep.asm	/^sbrk:$/;"	l
sbrk	grind.asm	/^sbrk:$/;"	l
sbrk	init.asm	/^sbrk:$/;"	l
sbrk	kill.asm	/^sbrk:$/;"	l
sbrk	ln.asm	/^sbrk:$/;"	l
sbrk	ls.asm	/^sbrk:$/;"	l
sbrk	mkdir.asm	/^sbrk:$/;"	l
sbrk	rm.asm	/^sbrk:$/;"	l
sbrk	sh.asm	/^sbrk:$/;"	l
sbrk	stressfs.asm	/^sbrk:$/;"	l
sbrk	usertests.asm	/^sbrk:$/;"	l
sbrk	usys.S	/^sbrk:$/;"	l
sbrk	wc.asm	/^sbrk:$/;"	l
sbrk	zombie.asm	/^sbrk:$/;"	l
sbrkarg	usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	usertests.c	/^sbrkfail(char *s)$/;"	f
sbrkmuch	usertests.c	/^sbrkmuch(char *s)$/;"	f
sharedfd	usertests.c	/^sharedfd(char *s)$/;"	f
size	umalloc.c	/^    uint size;$/;"	m	struct:header::__anon1	file:
sleep	bigfile.asm	/^sleep:$/;"	l
sleep	cat.asm	/^sleep:$/;"	l
sleep	echo.asm	/^sleep:$/;"	l
sleep	forktest.asm	/^sleep:$/;"	l
sleep	grep.asm	/^sleep:$/;"	l
sleep	grind.asm	/^sleep:$/;"	l
sleep	init.asm	/^sleep:$/;"	l
sleep	kill.asm	/^sleep:$/;"	l
sleep	ln.asm	/^sleep:$/;"	l
sleep	ls.asm	/^sleep:$/;"	l
sleep	mkdir.asm	/^sleep:$/;"	l
sleep	rm.asm	/^sleep:$/;"	l
sleep	sh.asm	/^sleep:$/;"	l
sleep	stressfs.asm	/^sleep:$/;"	l
sleep	usertests.asm	/^sleep:$/;"	l
sleep	usys.S	/^sleep:$/;"	l
sleep	wc.asm	/^sleep:$/;"	l
sleep	zombie.asm	/^sleep:$/;"	l
src	bigfile.asm	/^  src = vsrc;$/;"	d
src	cat.asm	/^  src = vsrc;$/;"	d
src	echo.asm	/^  src = vsrc;$/;"	d
src	forktest.asm	/^  src = vsrc;$/;"	d
src	grep.asm	/^  src = vsrc;$/;"	d
src	grind.asm	/^  src = vsrc;$/;"	d
src	init.asm	/^  src = vsrc;$/;"	d
src	kill.asm	/^  src = vsrc;$/;"	d
src	ln.asm	/^  src = vsrc;$/;"	d
src	ls.asm	/^  src = vsrc;$/;"	d
src	mkdir.asm	/^  src = vsrc;$/;"	d
src	rm.asm	/^  src = vsrc;$/;"	d
src	sh.asm	/^  src = vsrc;$/;"	d
src	stressfs.asm	/^  src = vsrc;$/;"	d
src	usertests.asm	/^  src = vsrc;$/;"	d
src	wc.asm	/^  src = vsrc;$/;"	d
src	zombie.asm	/^  src = vsrc;$/;"	d
stacktest	usertests.c	/^stacktest(char *s)$/;"	f
start	initcode.S	/^start:$/;"	l
start	initcode.asm	/^start:$/;"	l
stat	ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
stat_slink	symlinktest.c	/^stat_slink(char *pn, struct stat *st)$/;"	f	file:
state	bigfile.asm	/^        state = '%';$/;"	d
state	bigfile.asm	/^      state = 0;$/;"	d
state	bigfile.asm	/^  state = 0;$/;"	d
state	cat.asm	/^        state = '%';$/;"	d
state	cat.asm	/^      state = 0;$/;"	d
state	cat.asm	/^  state = 0;$/;"	d
state	echo.asm	/^        state = '%';$/;"	d
state	echo.asm	/^      state = 0;$/;"	d
state	echo.asm	/^  state = 0;$/;"	d
state	grep.asm	/^        state = '%';$/;"	d
state	grep.asm	/^      state = 0;$/;"	d
state	grep.asm	/^  state = 0;$/;"	d
state	grind.asm	/^        state = '%';$/;"	d
state	grind.asm	/^      state = 0;$/;"	d
state	grind.asm	/^  state = 0;$/;"	d
state	init.asm	/^        state = '%';$/;"	d
state	init.asm	/^      state = 0;$/;"	d
state	init.asm	/^  state = 0;$/;"	d
state	kill.asm	/^        state = '%';$/;"	d
state	kill.asm	/^      state = 0;$/;"	d
state	kill.asm	/^  state = 0;$/;"	d
state	ln.asm	/^        state = '%';$/;"	d
state	ln.asm	/^      state = 0;$/;"	d
state	ln.asm	/^  state = 0;$/;"	d
state	ls.asm	/^        state = '%';$/;"	d
state	ls.asm	/^      state = 0;$/;"	d
state	ls.asm	/^  state = 0;$/;"	d
state	mkdir.asm	/^        state = '%';$/;"	d
state	mkdir.asm	/^      state = 0;$/;"	d
state	mkdir.asm	/^  state = 0;$/;"	d
state	rm.asm	/^        state = '%';$/;"	d
state	rm.asm	/^      state = 0;$/;"	d
state	rm.asm	/^  state = 0;$/;"	d
state	sh.asm	/^        state = '%';$/;"	d
state	sh.asm	/^      state = 0;$/;"	d
state	sh.asm	/^  state = 0;$/;"	d
state	stressfs.asm	/^        state = '%';$/;"	d
state	stressfs.asm	/^      state = 0;$/;"	d
state	stressfs.asm	/^  state = 0;$/;"	d
state	usertests.asm	/^        state = '%';$/;"	d
state	usertests.asm	/^      state = 0;$/;"	d
state	usertests.asm	/^  state = 0;$/;"	d
state	wc.asm	/^        state = '%';$/;"	d
state	wc.asm	/^      state = 0;$/;"	d
state	wc.asm	/^  state = 0;$/;"	d
state	zombie.asm	/^        state = '%';$/;"	d
state	zombie.asm	/^      state = 0;$/;"	d
state	zombie.asm	/^  state = 0;$/;"	d
static	bigfile.asm	/^static Header *freep;$/;"	l
static	bigfile.asm	/^static Header base;$/;"	l
static	bigfile.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	bigfile.asm	/^static void$/;"	l
static	cat.asm	/^static Header *freep;$/;"	l
static	cat.asm	/^static Header base;$/;"	l
static	cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	cat.asm	/^static void$/;"	l
static	echo.asm	/^static Header *freep;$/;"	l
static	echo.asm	/^static Header base;$/;"	l
static	echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	echo.asm	/^static void$/;"	l
static	grep.asm	/^static Header *freep;$/;"	l
static	grep.asm	/^static Header base;$/;"	l
static	grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	grep.asm	/^static void$/;"	l
static	grind.asm	/^static Header *freep;$/;"	l
static	grind.asm	/^static Header base;$/;"	l
static	grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	grind.asm	/^static void$/;"	l
static	init.asm	/^static Header *freep;$/;"	l
static	init.asm	/^static Header base;$/;"	l
static	init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	init.asm	/^static void$/;"	l
static	kill.asm	/^static Header *freep;$/;"	l
static	kill.asm	/^static Header base;$/;"	l
static	kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	kill.asm	/^static void$/;"	l
static	ln.asm	/^static Header *freep;$/;"	l
static	ln.asm	/^static Header base;$/;"	l
static	ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	ln.asm	/^static void$/;"	l
static	ls.asm	/^static Header *freep;$/;"	l
static	ls.asm	/^static Header base;$/;"	l
static	ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	ls.asm	/^static void$/;"	l
static	mkdir.asm	/^static Header *freep;$/;"	l
static	mkdir.asm	/^static Header base;$/;"	l
static	mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	mkdir.asm	/^static void$/;"	l
static	rm.asm	/^static Header *freep;$/;"	l
static	rm.asm	/^static Header base;$/;"	l
static	rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	rm.asm	/^static void$/;"	l
static	sh.asm	/^static Header *freep;$/;"	l
static	sh.asm	/^static Header base;$/;"	l
static	sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	sh.asm	/^static void$/;"	l
static	stressfs.asm	/^static Header *freep;$/;"	l
static	stressfs.asm	/^static Header base;$/;"	l
static	stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	stressfs.asm	/^static void$/;"	l
static	usertests.asm	/^static Header *freep;$/;"	l
static	usertests.asm	/^static Header base;$/;"	l
static	usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	usertests.asm	/^static inline uint64$/;"	l
static	usertests.asm	/^static void$/;"	l
static	wc.asm	/^static Header *freep;$/;"	l
static	wc.asm	/^static Header base;$/;"	l
static	wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	wc.asm	/^static void$/;"	l
static	zombie.asm	/^static Header *freep;$/;"	l
static	zombie.asm	/^static Header base;$/;"	l
static	zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	zombie.asm	/^static void$/;"	l
strchr	ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	ulib.c	/^strlen(const char *s)$/;"	f
subdir	usertests.c	/^subdir(char *s)$/;"	f
symbols	sh.c	/^char symbols[] = "<|>&;()";$/;"	v
symlink	symlink.c	/^int symlink(char *target, char *path){$/;"	f
testsymlink	symlinktest.c	/^testsymlink(void)$/;"	f	file:
tok	sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
total	usertests.asm	/^    total = 0;$/;"	d
total	usertests.asm	/^  total = 0;$/;"	d
truncate1	usertests.c	/^truncate1(char *s)$/;"	f
truncate2	usertests.c	/^truncate2(char *s)$/;"	f
truncate3	usertests.c	/^truncate3(char *s)$/;"	f
twochildren	usertests.c	/^twochildren(char *s)$/;"	f
type	sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uint	bigfile.asm	/^uint$/;"	l
uint	cat.asm	/^uint$/;"	l
uint	echo.asm	/^uint$/;"	l
uint	forktest.asm	/^uint$/;"	l
uint	grep.asm	/^uint$/;"	l
uint	grind.asm	/^uint$/;"	l
uint	init.asm	/^uint$/;"	l
uint	kill.asm	/^uint$/;"	l
uint	ln.asm	/^uint$/;"	l
uint	ls.asm	/^uint$/;"	l
uint	mkdir.asm	/^uint$/;"	l
uint	rm.asm	/^uint$/;"	l
uint	sh.asm	/^uint$/;"	l
uint	stressfs.asm	/^uint$/;"	l
uint	usertests.asm	/^uint$/;"	l
uint	wc.asm	/^uint$/;"	l
uint	zombie.asm	/^uint$/;"	l
uninit	usertests.c	/^char uninit[10000];$/;"	v
unlink	bigfile.asm	/^unlink:$/;"	l
unlink	cat.asm	/^unlink:$/;"	l
unlink	echo.asm	/^unlink:$/;"	l
unlink	forktest.asm	/^unlink:$/;"	l
unlink	grep.asm	/^unlink:$/;"	l
unlink	grind.asm	/^unlink:$/;"	l
unlink	init.asm	/^unlink:$/;"	l
unlink	kill.asm	/^unlink:$/;"	l
unlink	ln.asm	/^unlink:$/;"	l
unlink	ls.asm	/^unlink:$/;"	l
unlink	mkdir.asm	/^unlink:$/;"	l
unlink	rm.asm	/^unlink:$/;"	l
unlink	sh.asm	/^unlink:$/;"	l
unlink	stressfs.asm	/^unlink:$/;"	l
unlink	usertests.asm	/^unlink:$/;"	l
unlink	usys.S	/^unlink:$/;"	l
unlink	wc.asm	/^unlink:$/;"	l
unlink	zombie.asm	/^unlink:$/;"	l
unlinkread	usertests.c	/^unlinkread(char *s)$/;"	f
unsigned	grind.asm	/^unsigned long rand_next = 1;$/;"	l
uptime	bigfile.asm	/^uptime:$/;"	l
uptime	cat.asm	/^uptime:$/;"	l
uptime	echo.asm	/^uptime:$/;"	l
uptime	forktest.asm	/^uptime:$/;"	l
uptime	grep.asm	/^uptime:$/;"	l
uptime	grind.asm	/^uptime:$/;"	l
uptime	init.asm	/^uptime:$/;"	l
uptime	kill.asm	/^uptime:$/;"	l
uptime	ln.asm	/^uptime:$/;"	l
uptime	ls.asm	/^uptime:$/;"	l
uptime	mkdir.asm	/^uptime:$/;"	l
uptime	rm.asm	/^uptime:$/;"	l
uptime	sh.asm	/^uptime:$/;"	l
uptime	stressfs.asm	/^uptime:$/;"	l
uptime	usertests.asm	/^uptime:$/;"	l
uptime	usys.S	/^uptime:$/;"	l
uptime	wc.asm	/^uptime:$/;"	l
uptime	zombie.asm	/^uptime:$/;"	l
validatetest	usertests.c	/^validatetest(char *s)$/;"	f
void	bigfile.asm	/^void *$/;"	l
void	bigfile.asm	/^void$/;"	l
void	cat.asm	/^void *$/;"	l
void	cat.asm	/^void$/;"	l
void	echo.asm	/^void *$/;"	l
void	echo.asm	/^void$/;"	l
void	forktest.asm	/^void *$/;"	l
void	forktest.asm	/^void$/;"	l
void	grep.asm	/^void *$/;"	l
void	grep.asm	/^void$/;"	l
void	grind.asm	/^void *$/;"	l
void	grind.asm	/^void$/;"	l
void	init.asm	/^void *$/;"	l
void	init.asm	/^void$/;"	l
void	kill.asm	/^void *$/;"	l
void	kill.asm	/^void$/;"	l
void	ln.asm	/^void *$/;"	l
void	ln.asm	/^void$/;"	l
void	ls.asm	/^void *$/;"	l
void	ls.asm	/^void$/;"	l
void	mkdir.asm	/^void *$/;"	l
void	mkdir.asm	/^void$/;"	l
void	rm.asm	/^void *$/;"	l
void	rm.asm	/^void$/;"	l
void	sh.asm	/^void *$/;"	l
void	sh.asm	/^void$/;"	l
void	stressfs.asm	/^void *$/;"	l
void	stressfs.asm	/^void$/;"	l
void	usertests.asm	/^void *$/;"	l
void	usertests.asm	/^void$/;"	l
void	wc.asm	/^void *$/;"	l
void	wc.asm	/^void$/;"	l
void	zombie.asm	/^void *$/;"	l
void	zombie.asm	/^void$/;"	l
vprintf	printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
wait	bigfile.asm	/^wait:$/;"	l
wait	cat.asm	/^wait:$/;"	l
wait	echo.asm	/^wait:$/;"	l
wait	forktest.asm	/^wait:$/;"	l
wait	grep.asm	/^wait:$/;"	l
wait	grind.asm	/^wait:$/;"	l
wait	init.asm	/^wait:$/;"	l
wait	kill.asm	/^wait:$/;"	l
wait	ln.asm	/^wait:$/;"	l
wait	ls.asm	/^wait:$/;"	l
wait	mkdir.asm	/^wait:$/;"	l
wait	rm.asm	/^wait:$/;"	l
wait	sh.asm	/^wait:$/;"	l
wait	stressfs.asm	/^wait:$/;"	l
wait	usertests.asm	/^wait:$/;"	l
wait	usys.S	/^wait:$/;"	l
wait	wc.asm	/^wait:$/;"	l
wait	zombie.asm	/^wait:$/;"	l
wc	wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
wpid	init.asm	/^      wpid = wait((int *) 0);$/;"	d
write	bigfile.asm	/^write:$/;"	l
write	cat.asm	/^write:$/;"	l
write	echo.asm	/^write:$/;"	l
write	forktest.asm	/^write:$/;"	l
write	grep.asm	/^write:$/;"	l
write	grind.asm	/^write:$/;"	l
write	init.asm	/^write:$/;"	l
write	kill.asm	/^write:$/;"	l
write	ln.asm	/^write:$/;"	l
write	ls.asm	/^write:$/;"	l
write	mkdir.asm	/^write:$/;"	l
write	rm.asm	/^write:$/;"	l
write	sh.asm	/^write:$/;"	l
write	stressfs.asm	/^write:$/;"	l
write	usertests.asm	/^write:$/;"	l
write	usys.S	/^write:$/;"	l
write	wc.asm	/^write:$/;"	l
write	zombie.asm	/^write:$/;"	l
writebig	usertests.c	/^writebig(char *s)$/;"	f
writetest	usertests.c	/^writetest(char *s)$/;"	f
x	bigfile.asm	/^    x = -xx;$/;"	d
x	bigfile.asm	/^    x = xx;$/;"	d
x	cat.asm	/^    x = -xx;$/;"	d
x	cat.asm	/^    x = xx;$/;"	d
x	echo.asm	/^    x = -xx;$/;"	d
x	echo.asm	/^    x = xx;$/;"	d
x	grep.asm	/^    x = -xx;$/;"	d
x	grep.asm	/^    x = xx;$/;"	d
x	grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	grind.asm	/^    x = -xx;$/;"	d
x	grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	grind.asm	/^    x = xx;$/;"	d
x	init.asm	/^    x = -xx;$/;"	d
x	init.asm	/^    x = xx;$/;"	d
x	kill.asm	/^    x = -xx;$/;"	d
x	kill.asm	/^    x = xx;$/;"	d
x	ln.asm	/^    x = -xx;$/;"	d
x	ln.asm	/^    x = xx;$/;"	d
x	ls.asm	/^    x = -xx;$/;"	d
x	ls.asm	/^    x = xx;$/;"	d
x	mkdir.asm	/^    x = -xx;$/;"	d
x	mkdir.asm	/^    x = xx;$/;"	d
x	rm.asm	/^    x = -xx;$/;"	d
x	rm.asm	/^    x = xx;$/;"	d
x	sh.asm	/^    x = -xx;$/;"	d
x	sh.asm	/^    x = xx;$/;"	d
x	stressfs.asm	/^    x = -xx;$/;"	d
x	stressfs.asm	/^    x = xx;$/;"	d
x	umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	usertests.asm	/^    x = -xx;$/;"	d
x	usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	usertests.asm	/^    x = xx;$/;"	d
x	wc.asm	/^    x = -xx;$/;"	d
x	wc.asm	/^    x = xx;$/;"	d
x	zombie.asm	/^    x = -xx;$/;"	d
x	zombie.asm	/^    x = xx;$/;"	d
